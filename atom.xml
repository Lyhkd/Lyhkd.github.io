<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜航船</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-23T06:29:04.014Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Yule</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数字逻辑设计(5)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/23/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-23-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(5)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/23/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-23-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(5)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-23T05:25:00.000Z</published>
    <updated>2023-10-23T06:29:04.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Beginning-Hierachical-Design">Beginning Hierachical Design</h2><p><img src="/Users/lyhkd/Library/Application%20Support/typora-user-images/image-20231023140212676.png" alt="image-20231023140212676"></p><p>把三位的模块在九位设计里面调用称为“实例化”</p><ul><li>Reusable Functions：Whenever possible, we try to decompose a complex design into common, reusable function blocks<br>These blocks are <strong>verified and well-documented</strong>, <strong>placed in libraries for future use</strong></li><li>Top-Down versus Bottom-Up：两种设计方法，一般都是采用top-down的方式</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Beginning-Hierachical-Design&quot;&gt;Beginning Hierachical Design&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/Users/lyhkd/Library/Application%20Support/typora-user-</summary>
      
    
    
    
    <category term="课程笔记, 数逻" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0-%E6%95%B0%E9%80%BB/"/>
    
    
    <category term="数逻" scheme="http://example.com/tags/%E6%95%B0%E9%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(1)【23-24秋冬】</title>
    <link href="http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/"/>
    <id>http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/</id>
    <published>2023-10-17T10:50:00.000Z</published>
    <updated>2023-10-17T11:11:48.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Week1绪论">Week1绪论</h2><h3 id="经济学与资源配置问题">经济学与资源配置问题</h3><p>人的欲望的特点：<strong>无限性</strong>（不断增加和扩张的欲望，多多益善）、<strong>多样性</strong>（各种不同的欲望）</p><p>资源的特点：<strong>稀缺性</strong>、<strong>用途的可选择性</strong>（同一种资源有多种用途，两种或两种以上资源有多种组合利用）</p><p>资源的基本种类：</p><ol><li>自然资源：矿山</li><li>人力资源：劳动力</li><li>资本品：不直接用来满足人的欲望和需要的，而是用来再生产来提供劳务的</li><li>技术：劳动力和自然结合、劳动力和资本品结合，有关的方式和有关的知识</li></ol><p>资源配置：相对于人无穷的欲望，资源总是稀缺的。就会有如何有效利用现有资源生产“经济物品”以更好地满足人们欲望“选择”的问题。</p><p>经济学产生的原因：经济学产生于资源的稀缺性及由此引起的选择的需要——资源的稀缺性和资源用途的多样性决定了<strong>选择的必要</strong>。</p><p>自由物品是有用但不稀缺的：空气</p><p>许多问题因为稀缺性而产生：生产什么、如何生产、为谁生产、就业或事业、通货膨胀、国际经济问题、长期经济增长等</p><p>选择：用有限的、稀缺的资源去满足人们无限的欲望中的那些欲望。</p><p>核心问题：资源配置问题</p><p>生产可能性边界（PPF）：用来分析资源的配置问题的工具。坐标轴表示两个商品上数量。</p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20230919203832532.png" alt="image-20230919203832532"></p><p>边际转换率递增：为增加该产品一个单位的产量所必须放弃的另一种产品的产量将越来越大。（生产可能性曲线的斜率的绝对值）</p><p>失业会导至曲线点内移。</p><h3 id="经济学基本理论的分类">经济学基本理论的分类</h3><ol><li>微观经济学：研究市场经济中单个经济主体的行为及相应的经济变量<br>研究的基本问题：<ol><li>生产什么？生产多少？What</li><li>如何生产？How</li><li>为谁生产？For who</li></ol></li></ol><blockquote><p>用什么样的方法生产会影响到收入分配问题，而收入分配问题又会影响到生产什么的问题。<br>劳动密集型：用更多劳动力<br>资本密集型：用更多资本品<br>无论倾向哪一边都会引发收入分配的问题：劳动者收入、资本家利润。收入分配会影响到生产什么和生产多少的问题。（生产更多生活必需品还是奢侈品）</p></blockquote><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/v2-c9d9a7e0d9d563e39abf718d7ded2475_r-20230926192230943.jpg" alt="img"></p><ol start="2"><li>宏观经济学：研究国民经济总体运行及相应的经济变量<ol><li>资源利用、充分就业</li><li>经济增长</li><li>经济稳定（经济运行的稳定和物价水平的稳定）</li></ol></li></ol><table><thead><tr><th></th><th>微观</th><th>宏观</th></tr></thead><tbody><tr><td>经济主体</td><td>厂商、消费者</td><td>国民经济</td></tr><tr><td>经济变量</td><td>个量：单个市场、单个消费者（供给、需求、价格、利润、收入）</td><td>总量：总供给、总需求、总物价水平</td></tr></tbody></table><p>经济体制分类：自给自足的自然经济、计划经济、市场经济、混合经济</p><ol><li>自由竞争的市场经济（私有和市场结合）</li><li>中央集权的计划经济（公有和计划调节结合）</li><li>政府干预的混合经济（私有和市场结合基础上，引进政府干预）</li><li>改革过程的转型经济（公有和计划机制上引进了市场，过渡经济体制）</li></ol><p>社会主义市场经济：</p><ol><li>财产制度上，公有制为主体，包括私有制在内的多种所有制成分共同发展。</li><li>在经济条件方面，以市场在资源配置中起决定性作用，同时政府发挥积极作用。</li></ol><p>市场经济的前提：</p><ol><li><p>经济人的假设：即经济活动的主体从事经济活动以自身利益最大化为目标。</p></li><li><p>财产权的界定：在法定基础上的自由交换经济。清晰明确、受到法律保护。</p><blockquote><p>科斯定理：在交易费用为零和对产权充分界定并加以实施的条件下，市场机制会自动使资源配置达到帕累托最优。</p><p>明确产权只是通过市场交易实现资源最优配置的必要条件（但不是充分条件）</p></blockquote></li></ol><h3 id="经济变量与经济模型">经济变量与经济模型</h3><p>观察经济变量（反映社会经济活动一系列变量的总称），构建经济模型</p><p>经济变量分类：</p><ol><li>存量：社会经济活动中，某一个<strong>时点</strong>上观察到的变量（某天人口数）<br>流量：社会经济活动中，在一个<strong>时期</strong>中连续观察到的经济变量（某年的出生量）<br>存量流量相互依存相互影响。</li><li>内生变量：经济模型内部所决定的变量<br>外生变量：经济模型外部所决定的变量</li></ol><blockquote><p><strong>内生变量</strong>指经济体系以内的经济力量所决定的一种变量，也称经济变量。</p><p>例如，在研究经济活动时，工资支付、消费、储蓄、投资、利润和就业一般被看成是内生变量。</p><p><strong>外生变量</strong>指由经济体系以外的非经济因素所决定的变量，也称为非经济变量。</p><p>例如，在研究经济活动时，出口统计数字、气候、地震、政治形势等等通常被看成外生变量。外生变量的变化数值不是经济学家的研究所能掌握的。</p><p>因此，在解方程时，要把<strong>外生变量当作自变量</strong>，把<strong>内生变量当作因变量</strong>。</p><p>内生变量的过去数量，是在过去的经济体系以内决定的，不会受现在的内生变量的影响，如果能影响现在的内生变量，仍应看作外生变量，叫作拉后内生变量。</p><p>拉后内生变量和外生变量一同称作前定变量，前定变量是推动内生变量发生变化的。经济计量学家试图通过前定变量的数值来预测内生变量的变化趋势，从而采取相应措施。</p></blockquote><p>方程组额外确定的是外生变量，解出来的是内生变量</p><p>经济模型：用来描述经济变量之间相互关系的理论结构。可以用文字、数学方程、几何图形描述。</p><h3 id="经济分析方法">经济分析方法</h3><ol><li><p>边际分析</p><ul><li><p>增量</p></li><li><p>最后单位</p><p>（可以把握变化及影响变化的因素）</p></li></ul></li><li><p>均衡分析</p><ul><li>市场价格受到攻击和需求的影响，供给和需求的均衡表示市场价格稳定。如果供给大于需求，市场价格下降。如果供给小于需求，市场价格上升。</li></ul><ol><li>局部均衡：假定其他条件不变，研究单个或局部市场供给需求价格的相互作用及达到相对稳定状态的条件。</li><li>一般均衡：全社会所有市场联系起来，认为所有市场的供给需求价格相互依存相互影响，研究什么条件下所有市场会达到一个相对平衡的状态。</li></ol></li><li><ol><li>静态：某一时点的经济变量分析（17号的供给需求价格）</li><li>比较静态：一个以上时点的经济变量分析（17号和18号的供给需求价格）</li><li>动态：不同时点经济变量变动的过程分析（17号的供给需求价格如何影响到了18号的供给需求价格的变化）</li></ol></li><li><ol><li>实证分析：是什么？研究因果关系。eg经济运行怎么样。</li><li>规范分析：应该是什么？具有价值取向和价值判断。eg评估政策。</li></ol><blockquote><p>研究经济运行过程中，大量用到实证分析的方法。在研究经济政策时，既要用到实证分析方法，更多要用到规范分析方法。</p></blockquote></li></ol><h2 id="价格机制">价格机制</h2><h3 id="需求分析">需求分析</h3><p>需求:在其他条件不变的情况下，消费者在某一特定时间内在各种可能的价格下<strong>愿意购买</strong>并且<strong>能够购买</strong>的该商品的数量。</p><blockquote><p>其他条件不变 -&gt; 反映出一个局部均衡</p><p>一定时期 -&gt; 该量是流量</p><p>愿意购买却没有购买能力的只能叫欲望</p></blockquote><p>需求量:消费者在一定时期内的某一特定价格下消费者愿意购买并且能够购买的商品数量。</p><blockquote><p>条件：1.购买欲望 2.购买需求 3.时间单位。强调是流量的概念，要有特定的时间单位。<br>需求量是以上三者的统一。</p></blockquote><h4 id="影响需求量的因素">影响需求量的因素</h4><ol><li><p>商品本身的价格：决定需求量最直接和最重要的因素。价格上升，需求量减少。价格下降，需求量增加。</p><blockquote><p>需求定理: 需求量与其价格成反方向变动，即价格上升，需求量减少;价格下降，需求量增加。</p><p>特例：奢侈品，吉芬品</p><p>需求函数：至考虑价格影响时</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mfrac><mrow><mi>d</mi><msub><mi>Q</mi><mi>d</mi></msub></mrow><mrow><mi>d</mi><mi>P</mi></mrow></mfrac><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Q_d = f(P),\ \frac{dQ_d}{dP}&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20231010192432077.png" alt="image-20231010192432077"></p><p>需求曲线(Demand Curve):  反映其它条件不变的情况下商品的需求量与其价格关系的曲线。即在不同价格水平下消费者愿意并能够购买的商品数量。（价格P，需求量Q）</p></blockquote></li><li><p>相关商品的价格</p><blockquote><p>相关商品：某种商品的价格变化会引起另一种商品的需求变化的两种商品</p><p>替代品：交替使用能够满足人们同一种欲望的两种或多种商品</p><ul><li>一种商品价格上升，另一种商品需求增加</li></ul><p>互补品：配合使用才能够共同满足人们某一种欲望的两种或多种商品，如汽车和汽油</p><ul><li>一种商品的上升/下降，引起另一种商品的需求减少/增加</li></ul></blockquote></li><li><p>消费者收入水平</p><blockquote><p>正常商品：消费者对商品的需求与收入成正方向变动的商品。</p><p>低档商品：消费者对商品的需求与收入成反方向变动的商品。</p><p>因人而异、因时而异。</p><p>生活水平提高就是不断把某些商品变成低档商品，另一些商品变为正常商品的迭代过程。</p></blockquote></li><li><p>消费者消费偏好</p><blockquote><p>对某种物品的喜好或嗜好。</p><p>由地理位置、家庭背景、个人观念等决定。</p><p>广告宣传能改变人们的偏好。</p></blockquote></li><li><p>对商品的预期</p><blockquote><ol><li>对商品价格变动的预期<ul><li>预期商品未来价格上涨，当下需求增加</li><li>预期商品未来价格下降，当下需求减少</li></ul></li><li>对自身未来收入水平变化的预期<ul><li>预期未来收入稳定减少，需求减少</li><li>预期未来收入增加，需求增加</li></ul></li></ol></blockquote></li></ol><ul><li>商品本身价格的变动直接引起具体需求量的变化</li><li>其他因素的变动引起商品在所有价格水平上需求量的变化</li></ul><h4 id="需求的变动与需求量的变动">需求的变动与需求量的变动</h4><p>需求量的变动: 指影响需求的其他因素（相关商品价格、消费者收入、消费者偏好、消费者预期等）不变，只是由于商品本身<strong>价格的变化</strong>而引起的消费者愿意购买而且能够购买的商品数量的变化。</p><blockquote><p>需求曲线上点的移动</p></blockquote><p>需求的变动: 指在<strong>商品本身价格不变</strong>，由于其他因素的变化而引起的消费者愿意购买而且能够购买的商品数量的变化。</p><blockquote><p>整条需求曲线的移动，需求增加、需求曲线右移，需求减少、需求曲线左移。</p></blockquote><h4 id="个人需求与市场需求">个人需求与市场需求</h4><p>个别需求:指单个消费者在一定时间内在每一个价格水平上对某种商品的需求量。</p><p>市场需求:在一个特定的市场中，所有消费者在一定时间内对某种商品的需求的总和。</p><p>市场需求函数是全部个别需求函数的加总。</p><h3 id="供给分析">供给分析</h3><h4 id="供给与供给量">供给与供给量</h4><p>供给:生产者在某一特定时间内的<strong>每一价格水平</strong>上愿意并且能够提供的某种商品数量。</p><p>供给量:生产者在某一特定时间内的<strong>某一价格水平</strong>上愿意并且能够提供的某种商品数量。</p><p>条件：1.供给意愿 2.供给能力</p><p>供给量是供给意愿、供给能力和时间的统一</p><h4 id="影响供给-量-的因素">影响供给(量)的因素</h4><ol><li><p>商品本身的价格</p><blockquote><p>供给定理: 假定其它条件不变，生产者对某种商品的供给量与其价格成同方向变化</p><p>价格上升，供给量增加。价格下降，供给量减少。</p><p>可以用供给函数、供给表、供给曲线表示</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Q</mi><mi>s</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>Q</mi><mi>c</mi></msub><mo>=</mo><mi>c</mi><mo>+</mo><mi>d</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">Q_s = f(P)\\ Q_c = c + dP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p><p>供给曲线：其他条件不变的情况下，商品供给和商品价格之间一一对应关系。<img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20231010194729053.png" alt="image-20231010194729053"></p></blockquote></li><li><p>投入成本</p><blockquote><p>投入成本变化：投入品价格下降，产品生产成本下降，供给增加</p></blockquote></li><li><p>生产技术水平：技术进步，生产成本降低，供给增加</p></li><li><p>生产者预期：预期行情看涨，供给增加</p></li><li><p>自然条件：条件好，供给多</p></li><li><p>产业政策</p></li></ol><h4 id="供给量的变动与供给的变动">供给量的变动与供给的变动</h4><p>供给量的变动: 指在影响供给的其他因素(生产成本、技术变化、预期、自然条件等)不变的情况下，只是由于商品本身价格的变化而引起的生产者愿意供给而且能够提供的商品数量的变化。</p><p>表现为点在供给曲线上的移动。</p><p>供给的变动:指在商品本身价格不变的情况下，由于其它因素(如投入成本、生产技术水平、生产者预期、自然条件等)的变化所导致的对该商品在每一个价格水平上供给量的变化。</p><p>表现为供给曲线本身的移动：生产成本下降，曲线右移生产成本上升，曲线左移</p><h4 id="个人供给与市场供给">个人供给与市场供给</h4><p>个别供给:在一定时间内，单个生产者对一种产品的供给量与该产品价格之间的对应关系。</p><p>市场供给:市场上所有厂商对产品的总供给量与该产品价格之间的对应关系</p><p>市场供给是全部个别供给的加总。</p><h3 id="均衡价格">均衡价格</h3><h4 id="均衡价格及其形成">均衡价格及其形成</h4><p>均衡价格:指需求量和供给量相等时的价格，用字母Pe表示均衡数量:均衡价格对应的供给量或需求量，用Qe表示。</p><p>市场均衡(市场出清): 某一商品的需求量和供给量在某一价格上正好相等，该商品在市场上既没有生产过剩,也没有需求短缺的状态。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub><mo>=</mo><msub><mi>Q</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">Q_d = Q_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20231010195527288.png" alt="image-20231010195527288"></p><p>E点为均衡点</p><ul><li>产品价格高于均衡价格，生产过剩。</li></ul><blockquote><p>此时生产者降价促销，消费者需求增加，生产者供给减小，直到达到均衡点。</p></blockquote><ul><li><p>产品价格低于均衡价格，需求过剩。</p></li><li><p>当产品价格高于均衡价格时，供过于求，价格下降至均衡价格</p></li><li><p>当产品价格低于均衡价格时，供不应求，价格上升至均衡价格</p></li></ul><p>供过于求 -&gt; 价格下降 -&gt; 供给减少，需求增加</p><p>供不应求 -&gt; 价格上升 -&gt; 供给增加，需求减少</p><h4 id="价格干预（支持、限制）及其后果">价格干预（支持、限制）及其后果</h4><p>支持价格(价格下限):政府为支持某一行业发展而对该行业规定的高于均衡价格的最低限价。<br>如:政府采取措施使粮食等农产品的价格维持在较高水平限制</p><p>价格(价格上限):政府为限制某产品价格上涨而对该产品规定的低于均衡价格的最高限价。<br>如:1973年，为了应对“能源危机”，美国政府实行价格管制禁止汽油的价格上升到特定水平</p><p>如何消化产品过剩，通常由政府消化过剩产品。<br>后果：增加政府支出。</p><p>为了维持限制价格，政府实行配给制度限制购买。<br>后果：供不应求、排队抢购、黑市交易</p><h4 id="需求变动引起的均衡价格变动">需求变动引起的均衡价格变动</h4><p>供给不变，需求的变动引起均衡价格和均衡数量的同方向变动</p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20231010201443966.png" alt="image-20231010201443966"></p><h4 id="供给变动引起的均衡价格变动">供给变动引起的均衡价格变动</h4><p>需求不变，供给的变动引起均衡价格的反方向变动和均衡数量的同方向变动。</p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(1)/image-20231010201541120.png" alt="image-20231010201541120"></p><h4 id="供求同时变动引起的均衡价格变动">供求同时变动引起的均衡价格变动</h4><p>供求变动方向相同时，均衡价格的变化程度：</p><ul><li><p>需求增加的幅度大于供给增加的幅度，或者需求减少的幅度小于供给减少的幅度，则均衡价格上升。</p></li><li><p>需求增加的幅度小于供给增加的幅度，或者需求减少的幅度大于供给减少的幅度，则均衡价格下降。</p></li></ul><p>供求变动方向相反时，均衡价格的变化程度:</p><ul><li><p>供求增减幅度相等，则均衡数量保持不变</p></li><li><p>需求增加的幅度大于供给减少的幅度，或者供给增加的幅度大于需求减少的幅度，则均衡数量增加。</p></li><li><p>需求增加的幅度小于供给减少的幅度，或者供给增加的幅度小于需求减少的幅度，则均衡数量减少。</p></li></ul>]]></content>
    
    
    <summary type="html">浙江大学微观经济学课程笔记。</summary>
    
    
    
    <category term="课程笔记, 微观经济学" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0-%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="http://example.com/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    <id>http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</id>
    <published>2023-10-17T07:34:34.927Z</published>
    <updated>2023-10-18T13:05:15.924Z</updated>
    
    <content type="html"><![CDATA[<p>AI</p><h3 id="广度优先搜索">广度优先搜索</h3><p>queue</p><p>==11==</p><h3 id="深度优先搜索">深度优先搜索</h3><p>stack</p><p>时间复杂度：b^m</p><p>空间复杂度：bm</p><p>完备性：False</p><h4 id="对抗搜索">对抗搜索</h4><p>完备性：Yes</p><p>最优性：Yes</p><p>时间复杂度和空间复杂度与DFS相同</p><p><a href="https://aistudio.baidu.com/projectdetail/3773997?channelType=0&amp;channel=0">https://aistudio.baidu.com/projectdetail/3773997?channelType=0&amp;channel=0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;AI&lt;/p&gt;
&lt;h3 id=&quot;广度优先搜索&quot;&gt;广度优先搜索&lt;/h3&gt;
&lt;p&gt;queue&lt;/p&gt;
&lt;p&gt;==11==&lt;/p&gt;
&lt;h3 id=&quot;深度优先搜索&quot;&gt;深度优先搜索&lt;/h3&gt;
&lt;p&gt;stack&lt;/p&gt;
&lt;p&gt;时间复杂度：b^m&lt;/p&gt;
&lt;p&gt;空间复杂度：bm&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数值分析NA(4)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-17T02:00:00.000Z</published>
    <updated>2023-10-20T01:29:04.335Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Direct-Methods-for-Solving-Linear-Systems">Direct Methods for Solving Linear Systems</h2><h3 id="Linear-Systems-of-Equations">Linear Systems of Equations</h3><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231017102621878.png" alt="image-20231017102621878"></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>k</mi><mi>k</mi></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">a_{kk}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3461em;vertical-align:-0.3013em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">kk</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span></span></span></span>被称为pivot element</p><h3 id="Pivoting-Strategies">Pivoting Strategies</h3><p>有时因为pivot element相对于某项系数特别小，所以计算出来的m（倍数）就会特别大，此时由于m具有截断误差，在给第k行进行m倍放大时就会扩大误差效应</p><h4 id="Partial-Pivoting-Maximal-column-pivoting">Partial Pivoting (Maximal column pivoting)</h4><p>To avoid this problem, pivoting is performed by selecting an element <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>p</mi><mi>q</mi></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">a_{pq}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2975em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">pq</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span></span></span></span>with a larger magnitude as the pivot, and <strong>interchanging the <em>k</em>th and <em>p</em>th rows</strong>. This can be followed by the <strong>interchange of the <em>k</em>th and <em>q</em>th columns</strong>, if necessary.</p><p>The <strong>simplest</strong> strategy is to select an element in the <strong>same column</strong> that is <strong>below the diagonal</strong> and has the largest absolute value; specifically, we determine the smallest <em>p</em> ≥ <em>k</em> such that</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">∣</mo><msubsup><mi>a</mi><mrow><mi>p</mi><mi>k</mi></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">∣</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>k</mi><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></munder><mo stretchy="false">∣</mo><msubsup><mi>a</mi><mrow><mi>i</mi><mi>k</mi></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">\lvert a_{pk}^{(k)}\rvert = \max_{k\leq i \leq n}\lvert a_{ik}^{(k)}\rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4822em;vertical-align:-0.4374em;"></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8921em;vertical-align:-0.8473em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8473em;"><span></span></span></span></span></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span></span></p><p>and perform <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ↔ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. In this case no interchange of columns is used.</p><p>但是依然会有误差，特别是不同列换到第一列的时候</p><h4 id="Scaled-Partial-Pivoting">Scaled Partial Pivoting</h4><p>It places the element in the pivot position that is largest relative to the entries in its row.</p><ol><li>The first step in this procedure is to define a scale factor <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> for each row as</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>n</mi></mrow></munder><mo stretchy="false">∣</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">s_i = \max_{1\leq j \leq n}\lvert a_{ij}\rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6138em;vertical-align:-0.8638em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8638em;"><span></span></span></span></span></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span></span></p><ol start="2"><li>the appropriate row interchange to place zeros in the first column is determined by choosing the least integer <em>p</em> with</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>a</mi><mrow><mi>p</mi><mn>1</mn></mrow></msub><mo stretchy="false">∣</mo></mrow><msub><mi>s</mi><mi>p</mi></msub></mfrac><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi></mrow></munder><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>a</mi><mrow><mi>k</mi><mn>1</mn></mrow></msub><mo stretchy="false">∣</mo></mrow><msub><mi>s</mi><mi>k</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{\lvert a_{p1}\rvert}{s_p} = \max_{1\leq k \leq n}\frac{\lvert a_{k1}\rvert }{s_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3991em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2743em;vertical-align:-0.8473em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8473em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ol start="3"><li><p>选出相对最大项后，进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>↔</mo><msub><mi>E</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">E_1 \leftrightarrow E_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>行交换</p></li><li><p>以此类推，在消除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>前，都要选择最小的大于i的整数p，然后进行row interchange</p><blockquote><p>The scale factors <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, . . . , <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">s_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> are computed only once, at the start of the procedure. They are row dependent, so they must also be interchanged when row interchanges are performed.</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>a</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><mo stretchy="false">∣</mo></mrow><msub><mi>s</mi><mi>p</mi></msub></mfrac><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi></mrow></munder><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>a</mi><mrow><mi>k</mi><mi>i</mi></mrow></msub><mo stretchy="false">∣</mo></mrow><msub><mi>s</mi><mi>k</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{\lvert a_{pi}\rvert}{s_p} = \max_{i\leq k \leq n}\frac{\lvert a_{ki}\rvert }{s_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3991em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2743em;vertical-align:-0.8473em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8473em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ki</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li></ol><p>Each multiplier <em>m**ji</em> in the partial pivoting algorithm has magnitude less than or equal to 1. Although this strategy is sufficient for many linear systems, situations do arise when it is inadequate.</p><p><strong>summary</strong>: 利用某一行的最大数来对该行的值进行标准化，比较这些行第一个量与这些最大值的相对量的大小</p><p>进行scaled partial处理只会给高斯消元步骤分别加一个O(N^2)的复杂度。所以不会很大程度上改变计算时间。</p><h3 id="Matrix-Factorization">Matrix Factorization</h3><p>如果矩阵A被分解成三角形式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">A=LU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>是下三角矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span>是上三角矩阵，那么我们就可以更加简单地通过两步求解x</p><ol><li>首先设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">y</mi><mo>=</mo><mi>U</mi><mi mathvariant="bold">x</mi></mrow><annotation encoding="application/x-tex">\bold y = U\bold x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathbf">x</span></span></span></span>，接着在原方程内就可以通过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="bold">y</mi><mo>=</mo><mi mathvariant="bold">b</mi></mrow><annotation encoding="application/x-tex">L\bold y = \bold b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathbf" style="margin-right:0.01597em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathbf">b</span></span></span></span>通过正常的解法解出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">y</mi></mrow><annotation encoding="application/x-tex">\bold y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span>。因为L是下三角矩阵，解该方程就相当于高斯消元算法里的“回代”步骤，所以只需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>次操作。</li><li>一旦<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">y</mi></mrow><annotation encoding="application/x-tex">\bold y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span>已知，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mi mathvariant="bold">x</mi><mo>=</mo><mi mathvariant="bold">y</mi></mrow><annotation encoding="application/x-tex">U\bold x = \bold y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathbf">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span>方程也可以通过一次额外的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>操作来解出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">x</mi></mrow><annotation encoding="application/x-tex">\bold x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord mathbf">x</span></span></span></span></li></ol><blockquote><p>也就是说，通过先把矩阵分解，可以使解方程的复杂度从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mi mathvariant="normal">/</mi><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3/3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">/3</span><span class="mclose">)</span></span></span></span>降到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018090343563.png" alt="image-20231018090343563"></p><h4 id="LU分解">LU分解</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018091019555.png" alt="image-20231018091019555"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143923091.png" alt="image-20231018143923091"></p><blockquote><p>事实上，并不是每个矩阵都有 LU 分解。例如，从上式可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>11</mn></msub><mo>=</mo><msub><mi>l</mi><mn>11</mn></msub><msub><mi>u</mi><mn>11</mn></msub></mrow><annotation encoding="application/x-tex">a_{11} = l_{11}u_{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>11</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{11}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>11</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">l_{11}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mn>11</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">u_{11}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>等于 0，故 L 或 U 是非可逆矩阵，A 必须也是非可逆矩阵。然而，存在著可逆矩阵 A 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>11</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{11}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>这些 A 就是没有 LU 分解的例子。该问题可借由置换 A 的各行顺序来解决，最终会得到一个 A 的 PLU 分解。</p><p>一个可逆矩阵可以进行LU分解当且仅当它的所有子式都非零。如果要求其中的L矩阵（或U矩阵）为单位三角矩阵，那么分解是唯一的。</p><p>即使矩阵不可逆，LU仍然可能存在。实际上，如果一个秩为k的矩阵的前k个顺序主子式不为零，那么它就可以进行LU分解，但反之则不然。</p></blockquote><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231020092902691.png" alt="image-20231020092902691"></p><h4 id="PLU分解">PLU分解</h4><p>方阵 A 的 PLU 分解是是将它分解成一个置换矩阵 P、一个下三角矩阵 L 与上三角矩阵 U 的乘积，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>P</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">A=PLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span></p><blockquote><p>置换矩阵（英语：permutation matrix）是一种系数只由0和1组成的方块矩阵。置换矩阵的每一行和每一列都恰好有一个1，其余元素都是0。在线性代数中，每个n阶的置换矩阵都代表了一个对n个元素（n维空间的基）的置换。当一个矩阵乘上一个置换矩阵时，所得到的是原来矩阵的横行（置换矩阵在左）或纵列（置换矩阵在右）经过置换后得到的矩阵。<br><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018100522476.png" alt="image-20231018100522476"></p></blockquote><h3 id="6-6-Special-Types-of-Matrices">6.6 Special Types of Matrices</h3><h4 id="Diagonally-Dominant-Matrices">Diagonally Dominant Matrices</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018140946197.png" alt="image-20231018140946197"></p><p><strong>Theorem6.21</strong>：A strictly diagonally dominant matrix <em>A</em> is <strong>nonsingular</strong>. Moreover, in this case, Gaussian elimination can be performed on any linear system of the form Ax = <strong>b</strong> to obtain its unique solution without row or column interchanges, and the computations will be stable with respect to the growth of round-off errors.</p><blockquote><p>证明：假设他有一个非零解x（满秩的线性齐次方程只有零解，所以这是在用contradiction证明）那么取非零解x中最大的项xk，再取第k行的方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>k</mi><mi>k</mi></mrow></msub><msub><mi>x</mi><mi>k</mi></msub><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo mathvariant="normal">≠</mo><mi>k</mi></mrow><mi>n</mi></msubsup><msub><mi>a</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{kk}x_k = -\sum_{j=1,j\neq k}^na_{kj}x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">kk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2401em;vertical-align:-0.4358em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord mtight"><span class="mrel mtight"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>. 由三角不等式（下图），可知与对角支配矩阵的定义矛盾。<img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018142210810.png" alt="image-20231018142210810"></p></blockquote><h4 id="Positive-Definite-Matrices">Positive Definite Matrices</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018142323396.png" alt="image-20231018142323396"></p><p>==正定矩阵一定对称==</p><ul><li>证明某个矩阵是正定矩阵可以通过设任意<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>3</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">x = \begin {bmatrix} x_1\\x_2\\ x_3\\ \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewbox="0 0 667 3600"><path d="M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewbox="0 0 667 3600"><path d="M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span>后进行配方证明。</li></ul><p><strong>Theorem 6.23:</strong><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018142533631.png" alt="image-20231018142533631"></p><blockquote><p>证明：</p><ol><li>如果<strong>x</strong>满足Ax=0，那么xtAx=0，由正定的性质推出x=0，所以Ax=0只存在零解。推出A非奇异。</li><li>取向量<strong>x</strong>，只有xi = 1，其余都为0，那么xtAx = aii，由正定性质知<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{ii}&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li><li><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143613671.png" alt="image-20231018143613671"></li><li>取向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">x</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mi>n</mi><mo mathvariant="normal">≠</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bold x,x_i = t, x_j = 1, x_n=0(n\neq i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mi mathvariant="bold">t</mi></msup><mi>A</mi><mi mathvariant="bold">x</mi><mo>=</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><msup><mi>t</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi>t</mi><mo>+</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>j</mi></mrow></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\bold {x^t}A\bold x = a_{ii}t^2 + 2a_{ij}t+a_{jj}&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8074em;"></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8074em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">t</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathbf">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9641em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">jj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，由韦达定理，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><msubsup><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup><mo>−</mo><mn>4</mn><msub><mi>a</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">4a_{ij}^2 - 4a_{ii} &lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2089em;vertical-align:-0.3948em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><msub><mi>a</mi><mrow><mi>j</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ij}^2&lt;a_{ii}a_{jj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2089em;vertical-align:-0.3948em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">jj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li></ol><p>这些都是必要条件不是充分条件！</p></blockquote><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143630216.png" alt="image-20231018143630216"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143643156.png" alt="image-20231018143643156"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143706055.png" alt="image-20231018143706055"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018143729986.png" alt="image-20231018143729986"></p><h4 id="LDLt分解">LDLt分解</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018144133554.png" alt="image-20231018144133554"></p><p>Step2: 依据上一次循环新求出的L的i列值，更新DLt矩阵的第i-1行</p><p>Step3: 利用L的第i行（前i-1个元素）和DLt的第i列（前i-1个元素），求出最新的di</p><p>Step4: 利用di值求出L的第i列（第i+1到第n个元素）</p><p>之前行的d都被确定下来了，所以通过最新的行*列来算出di的值</p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018150620158.png" alt="image-20231018150620158"></p><h4 id="Cholesky">Cholesky</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018144310837.png" alt="image-20231018144310837"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018144319429.png" alt="image-20231018144319429"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018150601769.png" alt="image-20231018150601769"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018150646577.png" alt="image-20231018150646577"></p><h4 id="Band-Matrices">Band Matrices</h4><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018150826504.png" alt="image-20231018150826504"></p><p>The number <em>p</em> describes the number of diagonals above, and including, the main diag- onal on which nonzero entries may lie.</p><p>The number <em>q</em> describes the number of diagonals below, and including, the main diagonal on which nonzero entries may lie.</p><h5 id="Tridiagonal-Matrices">Tridiagonal Matrices</h5><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018151102593.png" alt="image-20231018151102593"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018152004230.png" alt="image-20231018152004230"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018152012460.png" alt="image-20231018152012460"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018154524288.png" alt="image-20231018154524288"></p><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231020092642685.png" alt="image-20231020092642685"></p><blockquote><p>The Crout Factorization Algorithm can be applied whenever <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">l_{ii} \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>for each <em>i</em> = 1, 2, . . . , <em>n</em>.</p><p>Two conditions, either of which ensure that this is true, are that the coefficient matrix of the system is <strong>positive definite</strong> or that it is <strong>strictly diagonally dominant</strong>.</p></blockquote><p><img src="/2023/10/17/%E5%A4%A7%E4%BA%8C/NA/2023-10-17-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231018152047379.png" alt="image-20231018152047379"></p><blockquote><p>Note:<br>If A is strictly diagonally dominant, then it is not necessary to have all the entries ai, bi, and ci being nonzero.</p><p>The method is stable in a sense that all the values obtained during the process will be bounded by the values of the original entries.</p><p>The amount of computation is O(n).</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/389389672">Jacobi迭代和Gauss-Seidel迭代</a></p><p><a href="https://blog.csdn.net/weixin_47901431/article/details/115209405">Gauss-seidel迭代的C实现</a></p>]]></content>
    
    
    <summary type="html">Solutions of Equations in One Variable</summary>
    
    
    
    <category term="课程笔记, 数值分析" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Numerical Analysis" scheme="http://example.com/tags/Numerical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据结构基础(4)【23-24秋冬】</title>
    <link href="http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/FDS/2023-10-17-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80(4)%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/17/%E5%A4%A7%E4%BA%8C/FDS/2023-10-17-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80(4)%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-17T00:00:00.000Z</published>
    <updated>2023-10-17T11:24:48.372Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Tree">Tree</h3><ul><li>对于一个N节点的树，有N-1条边</li><li>使用树的数据结构时，通常使用递归</li></ul><h4 id="Terminology">Terminology</h4><ul><li>degree of a node： 一个节点的子树个数</li><li>degree of a tree：最大节点的度数</li><li>parent：有子树的节点</li><li>length of path：一条path的边的数量</li><li>depth of ni： 根到ni的path长度</li><li>height of ni：从ni到一个叶子的最长路径的长度</li></ul><h4 id="Implementation">Implementation</h4><p><strong>普通树到二叉树</strong></p><p>把普通树的节点写成两个链表的形式（一侧连着first child，另一侧连着next sibling）</p><p>The representation is not unique since the children in a tree can be of any order.</p><h4 id="Tree-Traversals">Tree Traversals</h4><p><strong>preoder traversal</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">preoder</span><span class="params">(tree_ptr tree)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree is not empty)&#123;</span><br><span class="line">        list_info(tree);</span><br><span class="line">        <span class="keyword">for</span>(each child C of tree)&#123;</span><br><span class="line">            preorder(C);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>postorder traversal</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">postorder</span><span class="params">(tree_ptr tree)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree is not empty)&#123;</span><br><span class="line">        <span class="keyword">for</span>(each child of tree)&#123;</span><br><span class="line">            postorder(C);</span><br><span class="line">        &#125;</span><br><span class="line">        list_info(tree);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>levelorder travesal</strong></p><p><strong>inorder</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">inorder</span><span class="params">(tree_ptr tree)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tree is not empty)&#123;</span><br><span class="line">        inorder(tree-&gt;Left);</span><br><span class="line">        list_info(tree-&gt;Element);</span><br><span class="line">        inorder(tree-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">iter_inorder</span><span class="params">(tree_ptr tree)</span>&#123;</span><br><span class="line">    Stack S = createStack(size);</span><br><span class="line">    <span class="keyword">for</span>(;;)&#123;</span><br><span class="line">        <span class="keyword">for</span>(; tree; tree=tree-&gt;Left)&#123;</span><br><span class="line">            Push(tree, S);</span><br><span class="line">        &#125;</span><br><span class="line">        tree = Pop(S);</span><br><span class="line">        <span class="keyword">if</span>(!tree)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        list_info(tree-&gt;Element);</span><br><span class="line">        tree = tree-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/376166992">三种遍历方式的迭代方法</a></p><h3 id="Threaded-tree">Threaded tree</h3><p><strong>右后左前</strong></p><p>线索二叉树的定义如下:</p><blockquote><p>“一个二叉树通过如下的方法“穿起来”：所有原本为空的右子节点指针改为指向该节点在中序序列中的后继，所有原本为空的左子节点指针改为指向该节点的中序序列的前驱。”</p><p>中序序列可以变更为其他形式的序列。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ThreadedTreeNode</span> *<span class="title">PtrTo</span> <span class="title">ThreadedNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PtrToThreadedNode</span> <span class="title">ThreadedTree</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ThreadedTreeNode</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> LeftThread;</span><br><span class="line">    ThreadTree Left;</span><br><span class="line">    ElementType Element;</span><br><span class="line">    <span class="type">int</span> RightThread;</span><br><span class="line">    ThreadedTree Right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="homework">homework</h3><ol><li><p>It is always possible to represent a tree by a one-dimensional integer array. (T)</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">0～n-1</span><br><span class="line">if (say)father=p; </span><br><span class="line">then left_son=(2*p)+1; </span><br><span class="line">and right_son=(2*p)+2;</span><br><span class="line">1～n</span><br><span class="line">if (say)father=p; </span><br><span class="line">then left_son=(2*p); </span><br><span class="line">and right_son=(2*p)+1; </span><br></pre></td></tr></table></figure></blockquote></li><li><p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child. (F)</p><blockquote><p>分析： 假设没有孩子的结点（叶结点）个数为n₀，只有一个孩子的结点（度为1的结点）个数为n₁，有两个孩子的结点（度为2的结点）个数为n₂。<br>则n₀+n₁+n₂=2016 ∵n₀=n₂+1（二叉树的性质：叶结点个数等于度为2的结点个数加1） ∴n₀+n₁+n₂=2016<br>⇨n₂+1+16+n₂=2016 ⇨2n₂=1999 n₂除不尽，所以答案错误。</p></blockquote></li><li><p>A general Tree‘s <strong>post-order traversal</strong> is the same sequence of its binary tree’s <strong>In-order traversal</strong></p></li><li><p>给定后序遍历和中序遍历能够唯一确定一颗树</p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pre</span><span class="params">(<span class="type">int</span> root,<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> k = l;</span><br><span class="line"><span class="keyword">while</span>(k&lt;r&amp;&amp;in[k]!=post[root]) ++k;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;post[root]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">pre(root-(r-k)<span class="number">-1</span>,l,k<span class="number">-1</span>);</span><br><span class="line">pre(root<span class="number">-1</span>,k+<span class="number">1</span>,r);</span><br><span class="line">&#125; </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;post[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in[i]);</span><br><span class="line">pre(n,<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ol><p>一、前序序列与后序序列 1.前序序列和后序序列相同 空树或者只有根节点的二叉树。</p><p>2.前序序列和后序序列相反 (1)当且仅当二叉树中只有一个叶子节点。 (2)二叉树的高度和其节点个数相同。</p><p>二、前序序列与中序序列 1.前序序列和中序序列相同 空树或缺左子树的单支二叉树。</p><p>2.前序序列和中序序列相反 (1)二叉树为空或者只有一个节点。 (2)若二叉树不为空，则任意节点不能同时用于左孩子和右孩子。 (3)若二叉树不为空，则任意节点没有右孩子。</p><p>三、中序序列与后序序列 1.中序序列和后序序列相同 空树或者缺右子树的单支二叉树。</p><p>2.中序序列和后序序列相反 任意节点没有左孩子节点。</p>]]></content>
    
    
    <summary type="html">浙江大学数据结构基础课程笔记, 树。</summary>
    
    
    
    <category term="课程笔记, 数据结构" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="Data Structure" scheme="http://example.com/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>宏观经济学(4)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-16T10:50:00.000Z</published>
    <updated>2023-10-20T12:39:42.200Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、货币需求">一、货币需求</h3><blockquote><p>凯恩斯认为，由于货币对于不确定的经济环境具有最大的适应性和灵活性，所以人们对货币具有需求。</p></blockquote><p>货币需求是指人们出于各种目的而<strong>愿意持有</strong>的货币数量 (包含已经持有的货币数量)。</p><h4 id="一-货币需求的动机-人们持有货币的动机主要有三种">(一)货币需求的动机(人们持有货币的动机主要有三种)</h4><ol><li><p>交易动机的货币需求</p><blockquote><p>个体体现在：消费购买</p><p>企业体现在：账户中留有的一部分货币，用来支付工资、购买原材料（采用转账、支票等）</p></blockquote></li><li><p>预防动机的货币需求</p><blockquote><p>个人：防止自己口渴了却没钱买水，所以会提前准备多一点的钱</p></blockquote></li><li><p>投机动机的货币需求</p></li></ol><p><img src="/Users/lyhkd/Library/Application%20Support/typora-user-images/image-20231016190829069.png" alt="image-20231016190829069"></p><p>交易动机的货币需求和预防动机的货币需求是关于国民收入的函数 ==为什么没有常数、为什么Y做纵轴==</p><p><img src="/Users/lyhkd/Library/Application%20Support/typora-user-images/image-20231016191033856.png" alt="image-20231016191033856"></p><p>投机动机的货币需求是利率的函数</p><p>流动性陷阱：利率水平较低、证券市场的获利空间较大时，人们对货币的流动性偏好趋于无限大的现象，也称为凯恩斯陷阱。</p><p>流动性不足：现金不足</p><p>流动性用来体现现金的数量。</p><p>通常，货币是以各种形态存在的，从M0到M5货币规模越来越大，从M5到M0货币流动性越来越强。但是从M0到M5利率越来越高，利率变高以流动性为代价。</p><p>M0：现金，流动性最好的货币形式，在任何地方交易时都必须接受</p><p>M1：M0 + 居民的储蓄 + 企业的短存（用来开支票的）</p><blockquote><p>比M0流动性差一些，因为对于线上支付来说，如果没有网络则无法支付，对于银行内的存款来说，如果没有取出就无法流动。</p></blockquote><p>M2：M1 + 企业长期存款</p><p>M3：M2 + 短期债券（一年期以下的）</p><p>M4：M3 + 长期债券</p><p>M5：M4 + 股票等金融资产</p><blockquote><p>股票是企业给的代表占有企业股份的凭证，他一直没有变现，尽管股票交易完成了使微观个体获得资金，但任然以股票的形式流通在市场上，只有在企业破产清算时才能变现。</p></blockquote><p>P = i / r</p><blockquote><p>利率逐步下降时，资产逐步上升</p></blockquote><p>经济衰退时国家第一个想到的方法就是降低利率，能够刺激经济的增长。但实体经济拿不到钱。==why==</p><h4 id="三-货币需求函数">(三)货币需求函数</h4><p>对货币的总需求是交易性需求、预防性需求和投机性需求的总和。前两种需求主要取决于收入水平，后一种需求主要取决于利率，于是，货币需求函数就可以写为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mn>1</mn></msub><mo>+</mo><msub><mi>L</mi><mn>2</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>L</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>k</mi><mi>Y</mi><mo>−</mo><mi>h</mi><mi>r</mi><mspace linebreak="newline"></mspace><msub><mi>L</mi><mn>0</mn></msub><mo>=</mo><mi>P</mi><mi>L</mi><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>k</mi><mi>Y</mi><mo>−</mo><mi>h</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = L_1 + L_2 \\ = L(Y) + L(r)  \\ = kY - hr \\L_0 =PL = P(kY-hr)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">kY</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">kY</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></span></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016195239642.png" alt="image-20231016195239642"></p><p>利率高到一定程度后，投机性需求就没有了</p><h3 id="二、货币供给">二、货币供给</h3><p>(1)现金货币:由一个国家中央银行发行的货币。</p><p>(2)存款货币:由一个国家商业银行经营活动创造的货币。</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016200157347.png" alt="image-20231016200157347"></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016200211011.png" alt="image-20231016200211011"></p><p>实际情况比较复杂：1. 资金的传递不是在短期时间内完成的 2. 所有的商业银行会留下超额现金准备（头寸）</p><blockquote><p>准备金（reserve）是<strong>商业银行库存的现金按比例存放在中央银行的存款</strong>。 实行准备金的目的是确保商业银行在遇到突然大量提取银行存款时，能有相当充足的清偿能力。 自20世纪30年代以后，法定准备金制度还成为国家调节经济的重要手段，是中央银行对商业银行的信贷规模进行控制的一种制度</p></blockquote><p>(3)货币乘数 如果用M表示货币供给，H表示<strong>中央银行发行的现金</strong>，R表示<strong>准备金率</strong>，则: M = H·1 / R</p><p>完整的货币(政策)乘数的计算公式是: k=(Rc+1)/(Rd+Re+Rc)</p><p>其中Rd、Re、Rc分别代表<strong>法定准备金率</strong>、超额准备金率和现金在存款中的比率。而货币(政策)乘数的基本计算公式是:货币供给/基 础货币。货币供给等于通货(即流通中的现金)和活期存款的总和; 而基础货币等于通货和准备金的总和。</p><h3 id="三、货币市场均衡">三、货币市场均衡</h3><h4 id="一-古典货币市场-古典经济学的利率决定观点">(一)古典货币市场:古典经济学的利率决定观点</h4><blockquote><p>古典货币市场：以贵金属作为交易媒介</p></blockquote><p>1.古典的利率由资金借贷市场上的供求均衡决定，而且资金的供给(储蓄)和需求(投资)都是内生的。</p><p>2.此外，利率也会对资金的供给(储蓄)和需求(投资)进 行调节。</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016202446796.png" alt="image-20231016202446796"></p><p>古典货币市场的均衡机制，市场利率在均衡过程中起了决定性的作用。</p><p>当利率水平较低时，如上图中的r1,市场上货币需求的量超过货币供给的量，从而促使利率水平上扬;</p><p>当利率水平较高时，如上图中的r2,市场上货币供给的量超过货币需求的量，从而促使利率水平下降。</p><p>只有一个合适的利率水平，如上图中的r0,才能保证市场上货币供求的均衡。这一利率水平就是所谓的均衡利率。</p><blockquote><p>早起的央行作用很小，大市场、小政府，利率的形成央行是不起作用的</p></blockquote><p>所有国家的货币都在不断贬值。</p><h4 id="（二）现代货币市场-凯恩斯经济学的利率决定观点">（二）现代货币市场:凯恩斯经济学的利率决定观点</h4><ol><li><p>利率由货币市场的均衡来决定。</p></li><li><p>只有货币需求是内生的。</p></li><li><p>货币供给是外生的，其大小与利率无关。（准备金率、货币供应量都由央行决定）</p></li></ol><p>(在现代货币市场中货币供求的均衡完全是由政府控制的。政府可以根据自己的目的确定货币供应量的多少，并根据货币供应量的多少来调控市场利率水平。)</p><p>现代货币市场的均衡图</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016204429838.png" alt="image-20231016204429838"></p><p>我国一直在推进利率市场化，这样就可以通过货币供给和货币需求调整利率。</p><p>利率十分重要，因为利率连接商品市场和货币市场</p><p>目前利率的决定机制：LPR</p><h1>第十章 国民收入的决定:收入-支出模型</h1><h2 id="第一节-均衡国民收入的决定">第一节 均衡国民收入的决定</h2><h3 id="一、均衡国民收入决定原理">一、均衡国民收入决定原理</h3><ul><li><p>国民收入在宏观经济学中是个泛指的概念:GDP、GNP、 NNP、NI、PI都可以被看作不同条件下的国民收入。但在通常情况下，国民收入一般指<strong>GDP</strong>。</p></li><li><p>国民收入和国民财富的含义既有一致性，也有区别。其区别主要在于:<br>1、国民财富涉及<strong>存量</strong>角度，即涉及特定时点上的(已有商品和服务价值)数量。2、国民收入涉及<strong>流量</strong>角度，即涉及特定时期内的(发生价值)数量。</p></li><li><p>基本经济制度的作用:决定国民收入和财富分配的基本立场和倾向</p><p>1.初次分配和再分配制度的作用: 国民收入和财富初次分配<strong>按要素分配</strong>，再分配则服从于<strong>政府的利益倾向和政治需要</strong>。（国民收入还有三次分配，如企业捐赠）</p><blockquote><p>初次分配以效率优先。再次分配体现公平，最明显的方式就是税收。</p></blockquote><p>2.相应政策的影响:这是国民收入和财富再分配的一种具体形式。</p></li><li><p>市场经济条件下均衡国民收入的决定原理: 供求决定</p></li></ul><p><strong>宏观经济学循环流程</strong></p><p>简略表明三个市场(产品与服务市场、货币市场、劳动市场)和三个部门(企业、家庭和政府)间的相互联系。</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-10-16-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016211244318.png" alt="image-20231016211244318"></p><h3 id="二、均衡国民收入决定的基本方向">二、均衡国民收入决定的基本方向</h3><h4 id="一-需求充分条件下的基本方向-均衡国民收入决定于供给">(一)需求充分条件下的基本方向: 均衡国民收入决定于供给</h4><p>供给决定需求——“萨伊定律”</p><p>1、“萨伊定律”成立的条件:<strong>市场上的供给普遍不足</strong>。</p><p>2、“萨伊定律” 含义:“供给总是会创造出它自身的 需求”。这意味着只要努力增加供给，需求自然就会相应增加，均衡国民收入也会增加，经济不会出现问题。</p><p>3、“萨伊定律”是信奉经济自由主义的古典经济学关 于均衡国民收入决定的核心观点。</p><h4 id="二-供给充分条件下的基本方向-均衡国民收入决定于需求">(二)供给充分条件下的基本方向: 均衡国民收入决定于需求</h4><p>1、经济萧条时失衡的特征: 供给相对过剩，需求相对不足。</p><p>2、关键在于有效总需求的水平。</p><p>3、凯恩斯的观点:强调短期(短期均衡国民收入决定理论)</p><h4 id="三-一般观点-均衡国民收入由总需求和总供给共同决定">(三)一般观点: 均衡国民收入由总需求和总供给共同决定</h4><p>1、新凯恩斯主义的观点是折中的，兼顾长期</p><p>2、短期内主要由有效需求水平决定均衡国民收入水平</p><p>3、长期内主要由供给水平决定均衡国民收入水平(强调 “萨伊定律”在长期内的有效性)。</p>]]></content>
    
    
    <summary type="html">第九章-宏观经济的基本指标及其衡量-第三节 货币需求和货币供给，第十章 国民收入的决定:收入-支出模型-第一节 均衡国民收入的决定</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="宏经" scheme="http://example.com/tags/%E5%AE%8F%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑设计(4)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-16T05:25:00.000Z</published>
    <updated>2023-10-23T05:55:37.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Additional-Gates-and-Circuits">Additional Gates and Circuits</h2><h3 id="Other-Gate-Types">Other Gate Types</h3><p>primitive gate - 可以用一个操作（AND or OR），以及一个取反表示的门</p><p>complex gate - 需要多于一个primitive operation</p><h4 id="Primitive-Gates">Primitive Gates</h4><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016133527717.png" alt="image-20231016133527717"></p><h5 id="Buffer">Buffer</h5><p>A buffer is an electronic <strong>amplifier</strong> used to <strong>improve circuit voltage levels</strong> and increase the speed of circuit operation.</p><blockquote><p>让信号更加规整，如果信号在传播过程中变小了，可以使用buffer把信号放大，即改善信号质量</p></blockquote><h5 id="NAND">NAND</h5><blockquote><p>NAND、NOR、AND、OR输入可以多于两个</p></blockquote><h5 id="The-3-State-Buffer">The 3-State Buffer</h5><p>For EN = 0, regardless of the value on IN (denoted by X), the output value is Hi-Z. For EN = 1, the output value follows the input value.</p><p>有第三种输出——高阻(Hi-Impedance, Hi-Z)， 无论电压多大，电流都为0。他多了一个EN的输入。</p><p><strong>Transmission Gate</strong></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016134217115.png" alt="image-20231016134217115"></p><p>==对于一个传输门器件，两个输入同为1时，0可以通过，两个输入都为0时，1可以通过==</p><p>但是作为开关来使用时，我们将上路加上一个反相器，这样C输入为1，上路为0，开关打开；C为0，上路为1，开关闭合</p><p><a href="https://blog.csdn.net/wwy1231/article/details/126931336?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169776996516800213039512%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169776996516800213039512&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-126931336-null-null.142%5Ev96%5Epc_search_result_base8&amp;utm_term=%E4%BC%A0%E8%BE%93%E9%97%A8%20%E5%BC%80%E5%85%B3&amp;spm=1018.2226.3001.4187">和MOS管的性质有关</a></p><p>通过智云纠正：上下都为1的时候只有0能通过、上下都为0的时候只有1能通过</p><p><strong>Multiplexed output line</strong></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016134732485.png" alt="image-20231016134732485"></p><p>若允许EN0和EN1同时i为1，则当两个开关都打开时，IN0为1，IN1为0，则输出不定。</p><p>IN1和IN0都打开时，称为多驱动状态。</p><h4 id="Complex-Gates">Complex Gates</h4><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016134947286.png" alt="image-20231016134947286"></p><h2 id="HDL">HDL</h2><p>电路设计：画出真值表 - 卡诺图优化 - 电路设计</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> comparator_greater_than_structural(A, B, A_greater_than_B);</span><br></pre></td></tr></table></figure><h4 id="Structural-Description">Structural Description</h4><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016141946704.png" alt="image-20231016141946704"></p><h4 id="DataFlow-description">DataFlow description</h4><p>assign 的顺序无所谓</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016142521210.png" alt="image-20231016142521210"></p><h4 id="Conditional-Operator">Conditional Operator</h4><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016142932772.png" alt="image-20231016142932772"></p><p><code>1'b0</code>, 代表一个位宽的二进制(b)数0</p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016143527112.png" alt="image-20231016143527112"></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016143536660.png" alt="image-20231016143536660"></p><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016144011123.png" alt="image-20231016144011123"></p><h3 id="TestBench">TestBench</h3><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016144716116.png" alt="image-20231016144716116"></p><p>要赋值的单位都要定义成<code>reg</code></p><h2 id="Some-design-Topics-and-Concepts">Some design Topics and Concepts</h2><h3 id="Combinational-Circuit">Combinational Circuit</h3><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231016145702998.png" alt="image-20231016145702998"></p><h3 id="Integrated-Circuit">Integrated Circuit</h3><p>SSI - fewer than 10 gates</p><p>MSI - 10 ~ 100 gates</p><p>LSI - 100 ~ thousands of gates</p><p>VLSI - thousands of 100s of millions gates</p><h4 id="Technology-Parameters">Technology Parameters</h4><p><strong>Fan-in</strong> 一个门能够输入的变量数</p><p><strong>Fan-out</strong> 一个门能够驱动多少个标准的门，即一个门的输出能让多少其他直接连接的门获得该信号</p><blockquote><p>the number of standard loads driven by a gate output</p></blockquote><p><strong>Noise Margin</strong></p><p><strong>propagation delay</strong> - 输入变化到输出变化的延时</p><blockquote><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231023134146326.png" alt="image-20231023134146326"></p><p>tpd是两种t的最大值</p></blockquote><p><strong>power dissipation</strong> - 功耗</p><h5 id="Fan-out">Fan-out</h5><p>Transition time</p><p>最大fan-out，为一个门能驱动的最大门的数量，并且transition time不超过maximum transition time</p><p>The maximum fan-out that can be driven by a gate is the number of standard loads the gate can drive without exceeding its specified maximum transition time.</p><h5 id="cost">cost</h5><ul><li>integrated circuit：The cost of a gate 和被该门占用的芯片面积成正比，大概和晶体管的尺寸、导线数目成比例，大概和输入数量成正比（==为什么不直接用多个输入一个门==）</li></ul><p>Propagation delay</p><ul><li>一般由输入变化50%的点和输出变化50%的点之间的时间差来确定</li></ul><h5 id="delay-models">delay models</h5><ul><li>transpotation delay</li><li>inertial delay：如果两次变化发生在一个rejection time内，输出就不会发生变化</li></ul><p>‘glitch’会因为有延迟而发生，比如一个二路选择器，其中一路因为有反相器所以会有一定的延迟，此时如果从一个状态变成另一个状态，没有反相器的一路已经发生变化，但是有反相器的一路因为延迟还未发生变化，此刻两路的输出相同，会导致没有门被选中或者两个门都被选中。</p><blockquote><p><img src="/2023/10/16/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-10-16-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(4)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231019200158914.png" alt="image-20231019200158914"></p></blockquote><p>Fan-out and Delay</p><p>==standard load是什么==答：是定义扇出的单位</p><blockquote><p>1 standard load equals the load contributed by the input of 1 inverter.</p></blockquote><p>设计电路就是不断地trade off，是否加buffer？加了可能cost会增加、但是加了也会提高速度！</p><h2 id="Design-Procedure">Design Procedure</h2><ol><li><p>Specification</p></li><li><p>Formulation：获得满足需要的一个真值表或者布尔等式</p></li><li><p>Optimization: 两级、多级优化</p></li><li><p>Technology Mapping：Map the logic diagram or netlist to the implementation technology selected</p><blockquote><p>比如说限制了只允许使用反相器、NAND门等等</p></blockquote></li><li><p>Verification</p></li></ol><h2 id="ISE编程流程">ISE编程流程</h2><ol><li><p>设计方案</p></li><li><p>示意图 (Schematic)<br>示意图又称原理图，是用抽象的图形符号而非写实的图片表示系统、设备的工作原理及其组件相互关系的简图。</p><blockquote><p>通过绘图设计硬件电路，软件自动生成verilog HDL代码</p></blockquote><p>Verilog Module</p><blockquote><p>通过直接使用verilog语言，编写后可生成相应的硬件电路图</p></blockquote></li><li><p>仿真激励（Verilog Test Fixture）</p><blockquote><p>通过设计一定时间间隔后不同输入路线的值，来测试波形输出结果</p></blockquote></li><li><p>建立用户时序约束，并为模块的端口指定引脚分配</p><blockquote><p>通过编写分配代码，来为输入、输出对应分配到硬件版上的组件。</p></blockquote></li><li><p>下载到硬件板</p></li></ol><h3 id="补充知识">补充知识</h3><h4 id="低电平有效（电路图中的小圆圈）">低电平有效（电路图中的小圆圈）</h4><p><em>低电平有效</em>的复位信号是下降沿触发，高电平有效的复位信号是上升沿触发。（从高变到低，此时是低电平，一定是下降沿，反之一定是上升沿)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Additional-Gates-and-Circuits&quot;&gt;Additional Gates and Circuits&lt;/h2&gt;
&lt;h3 id=&quot;Other-Gate-Types&quot;&gt;Other Gate Types&lt;/h3&gt;
&lt;p&gt;primitive gate </summary>
      
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数逻" scheme="http://example.com/tags/%E6%95%B0%E9%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>人工智能基础(2)【23-24秋冬】</title>
    <link href="http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/"/>
    <id>http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/</id>
    <published>2023-10-10T05:25:00.000Z</published>
    <updated>2023-10-15T07:29:59.409Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2-5概率图推理">2.5概率图推理</h3><p>概率图模型一般分为贝叶斯网络（Bayesiannetwork）和马尔可夫网络（Markovnetwork）两大类（Domingosetal.，2004；Richardsonetal.，2006）。贝叶斯网络用一个有向无环图（directedacyclicgraph）表示，有向边表示结点和结点之间的单向概率依赖；马尔可夫网络用一个无向图表示，无向边表示结点和结点之间的相互概率依赖。一般认为概率图模模型还包括朴素贝叶斯模型、最大熵模型、隐马尔可夫模型、条件随机场、主题模型等，概率图模型在机器学习的诸多场景中都有着广泛应用。</p><h4 id="贝叶斯网络">贝叶斯网络</h4><p>满足局部马尔可夫性（localMarkovproperty），即在给定一个结点的父结点的情况下，该父结点有条件地独立于它的非后代结点（non-descendant）。</p><p>eg 计算P（洒水车｜多云、下雨）</p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231014204528419.png" alt="image-20231014204528419"></p><p>P（多云、下雨、洒水车、路湿）=P（多云）P（洒水车|多云）P（下雨|多云）P（路湿|洒水车，下雨）</p><h3 id="2-6因果推理">2.6因果推理</h3><p><strong>假设</strong>：不存在不可测的混杂因素</p><blockquote><p>Y0：个体不被处理的潜在结果</p><p>Y1：个体被处理的潜在结果</p><p>x：单位变量</p><p>T：处理分配</p><p>(Yo,Y)ITIx Y0和Y1在给定X的条件下独立。</p><p>可忽略性假设：对于给定变量x，对参与者进行干预或控制的处理分配T不会影响潜在结果（Y0，Y1）</p></blockquote><p><strong>假设</strong>：共同支持域</p><p>平均处理效应（调整公式）（G-formula）</p><p>基于可忽略性假定，推出调整公式</p><ol><li>协变量调整</li><li>1-NN（最邻近匹配）</li><li>倾向得分<br><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231015152907887.png" alt="image-20231015152907887"></li></ol><p><strong>辛普森悖论</strong></p><p>辛普森悖论表明，在某些情况下，忽略潜在的“第三个变量”（本例中性别就是用药与否和恢复率之外的第三个变量）可能会改变已有的结论，而人们常常忽略这一因素。</p><p>从观测结果中寻找引发结果的原因，考虑数据生成的过程，由果溯因，就是本节要介绍的因果推理。</p><p>辛普森悖论的主要原因是“第三变量”导致了用药与否和恢复率之间的虚假关联。复杂数据中变量之间的关联关系有三种来源（Elwertetal.，2014，Cuietal.，2022）：因果关联（causation）、混淆偏差（confoundingbias）和选择偏差（selectionbias），如图2.5所示</p><ul><li><p>因果关联：数据中的两个变量，如果一个变量是另一个变量的原因，则这两个变量之间存在因果关联。</p></li><li><p>混淆关联：数据中待研究的两个变量之间存在共同的原因变量，变量T和Y存在共同的原因变量X，即X是T的原因，同时也是Y的原因。忽略掉X，那么T和Y在数据中会存在虚假关联。</p></li><li><p>选择关联：数据中待研究的两个变量之间存在共同的结果变量，如图2.5（c）所示，变量T和Y存在共同的结果变量S，即T是S的原因，Y也是S的原因。如果基于特定S的取值来选择一部分变量进行研究，那么T和Y在数据中就会存在虚假关联。由于该关联是选择偏差导致的，因此称之为选择关联。</p></li></ul><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231014204831298.png" alt="image-20231014204831298"></p><p>因果推理主要使用两种模型。</p><ul><li>一种模型是潜在结果框架（potential outcome framework），也称为Neyman–Rubin因果模型。<img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231015104823415.png" alt="image-20231015104823415"></li><li>另外一种模型是结构因果模型（structurecausalmodel，SCM）。因果图（causaldiagram）（Pearl，1995）是由米迪亚·珀尔于1995年提出的。一般而言，结构因果图是一种有向无环图。</li></ul><p>采用因果图的好处是可以有效地表示联合概率分布。对于任意的有向无环图模型，模型中d个变量的联合概率分布由每个结点与其父结点之间条件概率P（child|parents）的乘积给出</p><h4 id="2-6-2因果干预与do算子">2.6.2因果干预与do算子</h4><p>计算当系统中一个变量取值发生变化，其他变量保持不变时，系统输出结果是否变化，这样可判断改变取值的变量是否是系统中起决定作用的“原因要素”。</p><p>干预（intervention）过程中固定（fix）系统中的其他变量，然后改变某一变量的取值，观察其他变量的变化。为了与X的自然取值x进行区分，在对X进行干预时，引入do算子（do-calculus），记作do（X=x）。因此，P（Y=y|X=x）表示的是当发现X=x时，Y=y的概率；而P（Y=y|do（X=x））表示的是对X进行干预，固定其值为x时，Y=y的概率。</p><p>P（Y=y|X=x）反映的是在取值为x的个体X上Y的总体分布；而P（Y=ydo（X=x））反映的是如果将每一个X取值都固定为x时，Y的总体分布。</p><h4 id="2-6-3因果效应差">2.6.3因果效应差</h4><p>P（Y=1do（X=1））-P（Y=1|do（X）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>d</mi><mi>o</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y=y|do(X=x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span>称为因果效应</p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231015101025324.png" alt="image-20231015101025324"></p><h4 id="2-6-4反事实推理">2.6.4<a href="https://www.zhihu.com/column/c_1217887302124773376">反事实推理</a></h4><blockquote><p>由于在实验的时候无法完全控制变量，会出现如辛普森悖论的情况，即只根据某个变量将数据分为两类时，那两类还有可能因为潜在的变量导致分析结果有误。如，只根据性别将数据分为两类，但是他们还可能存在年龄差异，因为在获得数据的时候并没有保证每个性别每个年龄都取到了实验对象（如果变量一多，实验对象的增长将是几何级数）。</p><p>所以最后获得数据我们难以直接通过概率论的方法进行条件计算后推断因果。我们试图采用反事实推理，即对一个实验对象，他虽然只在某一种Treatment的作用下表现出特定的结果，但是我们可以通过反事实推断出他在另一种Treatment作用下表现出的结果。这样我们根据这两个Treatment进行分类时，所有的实验对象都是一一对应的，我们就可以直接进行数据的结果分析，从而推断出是否有因果关系。</p></blockquote><p>这种类似“如果当时……，现在就……”的语句就是本节将要讨论的反事实（counterfactual），也称为“虚拟事实”或“平行世界”，其中，“如果”后面的语句称为假设条件（hypotheticalcondition）或前件（antecedent）</p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/AI(3)/image-20231015101250625.png" alt="image-20231015101250625"></p>]]></content>
    
    
    <summary type="html">浙江大学人工智能基础课程笔记，因果推理。</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="AI" scheme="http://example.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>数值分析NA(3)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-10T02:00:00.000Z</published>
    <updated>2023-10-15T01:48:44.554Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2-4-Error-Analysis-for-Iterative-Methods">2.4 Error Analysis for Iterative Methods</h3><h4 id="Order-of-Convergence">Order of Convergence</h4><p>数列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>p</mi><mi>n</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup></mrow><annotation encoding="application/x-tex">\{p_n\}_{n=0}^\infty%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>收敛于p，对于所有的n都有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>n</mi></msub><mo mathvariant="normal">≠</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">p_n \neq p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>，如果存在正常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>使</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mi>p</mi><mo stretchy="false">∣</mo></mrow><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>n</mi></msub><mo>−</mo><mi>p</mi><msup><mo stretchy="false">∣</mo><mi>α</mi></msup></mrow></mfrac><mo>=</mo><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lim_{n \to \infty}\frac {\lvert p_{n+1} - p \rvert}{\lvert p_n - p \rvert^\alpha} = \lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span></span></p><p>成立，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>p</mi><mi>n</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup></mrow><annotation encoding="application/x-tex">\{p_n\}_{n=0}^\infty%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>converges to p of order <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>， with asymptotic error constant <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span></p><ul><li>If <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>(and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lambda&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>), the sequence is linearly convergent</li><li>If <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\alpha = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> the sequence is quadratically convergent.</li></ul><ol><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">g&#x27;(p) \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，则数列p线性收敛（linearly convergent）（g是数列的迭代方程）：把它在p点泰勒展开，代入Pn，可以得到结果</li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">g&#x27;(p) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，则数列p二阶收敛（quadratically convergent）：牛顿法</li></ol><h4 id="Fixed-Point">Fixed Point</h4><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015084025806.png" alt="image-20231015084025806"></p><p>证明：中值定理</p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015084332828.png" alt="image-20231015084332828"></p><p>证明：泰勒展开，一阶导数为0，所以最大项为二阶导数项</p><p>Theorems 2.8 and 2.9 tell us that our search for quadratically convergent fixed-point methods should point in the direction of functions whose derivatives are zero at the fixed point</p><p>For a fixed point method to converge quadratically we need to have both <em>g</em>( <em>p</em>) = <em>p</em>, and <em>g</em>′( <em>p</em>) = 0.</p><blockquote><p>要寻找一个误差二阶收敛的不动点方法，需要不动点处的一阶导数等于0。</p></blockquote><p>构造一个函数使他为0。</p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015085845259.png" alt="image-20231015085845259"></p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015090023117.png" alt="image-20231015090023117"></p><p>Discussion9:</p><ul><li><p>Not simple root 时牛顿法的收敛如何？<br>牛顿法在当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f&#x27;(p) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>时，即有重根时，会变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">g&#x27;(p) = 1- \frac1m&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>线性收敛。</p></li><li><p>有什么办法把它加速？<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mu = \frac{f(x)}{f&#x27;(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 因为求导后重根的幂次会-1，所以和原函数相除可以约掉剩下的重根，来获得和<strong>原函数相同的单根</strong>。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>−</mo><mfrac><mrow><mi>μ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><msup><mi>μ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(x) = x - \frac{\mu (x)}{\mu&#x27;(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ul><h3 id="2-5-Accelerating-Convergence">2.5 Accelerating Convergence</h3><h4 id="Atiken’s-Delta-2-Method">Atiken’s <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Δ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\Delta^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> Method</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>n</mi></msub><mo>=</mo><msub><mi>p</mi><mi>n</mi></msub><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>−</mo><mn>2</mn><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>p</mi><mi>n</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat p_n = p_n - \frac {(p_{n+1} - p_n)^2}{p_{n+2}-2p_{n+1}+p_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3854em;vertical-align:-0.8943em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8943em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>n</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup></mrow><annotation encoding="application/x-tex">\{\hat p_n\}_{n=0}^\infty%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>converges more rapidly to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> than sequence <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>p</mi><mi>n</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup></mrow><annotation encoding="application/x-tex">\{p_n\}_{n=0}^\infty%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span></p><p><strong>forward difference <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\Delta p_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong>:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><mo separator="true">,</mo><mi>f</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>n</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\Delta p_n = p_{n+1} - p_n, for \ n\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>the higher powers of the operator <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="normal">Δ</mi><mi>k</mi></msup><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">(</mo><msup><mi mathvariant="normal">Δ</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi mathvariant="normal">Δ</mi><mn>2</mn></msup><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">Δ</mi><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mi mathvariant="normal">Δ</mi><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>−</mo><mn>2</mn><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\Delta^kp_n = \Delta(\Delta^{k-1}p_n) \\\Delta^2p_n = \Delta(p_{n+1}-p_n) = \\ \Delta p_{n+1}-\Delta p_n = (p_{n+2}-p_{n+1}) - (p_{n+1} - p_n)\\= p_{n+2} - 2p_{n+1} + p_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0935em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mopen">(</span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8528em;vertical-align:-0.2083em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>so the atiken’s method can be written as</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>n</mi></msub><mo>=</mo><msub><mi>p</mi><mi>n</mi></msub><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><msub><mi>p</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><msup><mi mathvariant="normal">Δ</mi><mn>2</mn></msup><msub><mi>p</mi><mi>n</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat p_n = p_n - \frac{(\Delta p_n) ^2}{\Delta^2p_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3715em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015091302417.png" alt="image-20231015091302417"></p><p><img src="/2023/10/10/%E5%A4%A7%E4%BA%8C/NA/2023-10-10-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231015091555618.png" alt="image-20231015091555618"></p><h2 id="Chapter6-Direct-Methods-for-Solving-Linear-Systems">Chapter6 Direct Methods for Solving Linear Systems</h2><h3 id="6-1-Linear-Systems-of-Equations">6.1 Linear Systems of Equations</h3><h4 id="Gaussian-Elimination">Gaussian Elimination</h4><ol><li>把矩阵变成上三角阵，再用反向迭代的过程求解。</li></ol>]]></content>
    
    
    <summary type="html">Solutions of Equations in One Variable</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Numerical Analysis" scheme="http://example.com/tags/Numerical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据结构基础(3)【23-24秋冬】</title>
    <link href="http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/FDS/2023-10-10-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80(3)%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/10/%E5%A4%A7%E4%BA%8C/FDS/2023-10-10-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80(3)%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-10T00:00:00.000Z</published>
    <updated>2023-10-11T03:51:13.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Stack">Stack</h2><h4 id="Linked-list-implementation">Linked list implementation</h4><p>Dummy head指向栈顶元素</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(ElementType X, Stack S)</span>&#123;</span><br><span class="line">    PtrToNode TmpCell;</span><br><span class="line">    TmpCell = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    TmpCell-&gt;Element = X;</span><br><span class="line">    TmpCell-&gt;Next = S-&gt;Next;</span><br><span class="line">    S-&gt;Next = TmpCell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(Stack S)</span>&#123;</span><br><span class="line">    PtrToNode FirstCell;</span><br><span class="line">    FirstCell = S-&gt;Next;</span><br><span class="line">    S-&gt;Next = S-&gt;Next-&gt;Next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Array-implementation">Array implementation</h4><p>用一个结构体存储一个栈的所有指标</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> Capacity;</span><br><span class="line">    <span class="type">int</span> TopOfStack;</span><br><span class="line">    ElementType *Array;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> *<span class="title">Stack</span>;</span></span><br><span class="line">Stack <span class="title function_">CreateStack</span><span class="params">(<span class="type">int</span> MaxElements)</span>&#123;</span><br><span class="line">    Stack S;</span><br><span class="line">    S = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> StackRecord));</span><br><span class="line">    S-&gt;Array = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ElementType) * MaxElements);</span><br><span class="line">    S-&gt;TopOfStack = <span class="number">-1</span>;</span><br><span class="line">    S-&gt;Capacity = MaxElements;</span><br><span class="line">    <span class="keyword">return</span> S;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(ElementType X, Stack S)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S-&gt;TopOfStack == S-&gt;Capacity)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        S-&gt;Array[++S-&gt;TopOfStack] = X;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(Stack S)</span>&#123;</span><br><span class="line">    S-&gt;TopOfStack--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Applications">Applications</h4><h5 id="Balancing-Symbols">Balancing Symbols</h5><p>匹配括号，维护一个栈。接着开始读入字符，如果是opening symbol，则入栈；如果是closing symbol，先检测栈是否为空，若不为空则出栈并检验是否匹配。</p><h5 id="Postfix-Expressions">Postfix Expressions</h5><p>维护一个栈，不停地把元素入栈。如果元素为数字，则直接入栈，如果元素为运算符，则弹出栈顶两个元素进行计算后再入栈。</p><h5 id="Infix-to-Postfix-Conversion">Infix to Postfix Conversion</h5><p>维护一个栈，不停的把元素入栈。如果元素为数字，则直接添加到输出，如果为操作符，则和栈顶元素比较，如果栈顶元素的优先级更高（包含相等），则出栈，直到栈顶元素优先级小于当前元素/栈为空，把当前元素入栈。直到读完所有元素，把栈清空。<br>注意：左括号拥有最高的优先级，即在遇到右括号之前，左括号和他下面的元素是不可能出栈的。当当前元素为右括号时，把他和左括号之间的元素依次出栈。</p><h5 id="Function-Call">Function Call</h5><p>activation record / stack frame:  the information saved</p><p>ln languages and systems that do not check for stack overflow, your program will <strong>crash</strong> without an explicit explanation.</p><p>If the stack runs into your data, what is likely to happen is that when you write something into your data, it will destroy stack information probably the return address, and your program will attempt to return to some weird address and crash</p><p>Activation records 都很大，因为所有的信息都将被保存，所以一个比较大的递归函数很容易导致栈空间溢出。所以尾递归（tail-recursion）是递归的不好的用法。</p><h2 id="Queue">Queue</h2><p>The basic operations on a queue are <strong>Enqueue</strong>, which inserts an element at the end of the list (called the rear), and <strong>Dequeue</strong>, which deletes (and returns) the element at the start of the list (known as the front).</p><p>To Enqueue an element X, we increment Size and Rear, then set Queue[Rear] = X. To Dequeue an element, we set the return value to Queue[Front], decrement Size, and then increment Front</p><p><strong>circular array implementation</strong>可以节约空间，即如果队尾达到了数组末端，则把队尾从数组头重新开始</p><p>For instance, some do not use an entry to keep track of the size.because they rely on the base case that when the queue is empty, <code>Rear = Front - 1</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QueueRecord</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> Capacity;</span><br><span class="line">    <span class="type">int</span> Front;</span><br><span class="line">    <span class="type">int</span> Rear;</span><br><span class="line">    <span class="type">int</span> Size; <span class="comment">// optional</span></span><br><span class="line">    ElementType *Array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsEmpty</span><span class="params">(Queue Q)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Q-&gt;Size==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(Queue Q)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Q-&gt;Rear - Q-&gt;Front == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MakeEmpty</span><span class="params">()</span>&#123;</span><br><span class="line">    Q-&gt;Size = <span class="number">0</span>;</span><br><span class="line">    Q-&gt;Front = <span class="number">1</span>;</span><br><span class="line">    Q-&gt;Rear = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Enqueue</span><span class="params">(ElementType X, Queue Q)</span>&#123;</span><br><span class="line">    Q-&gt;Size++;</span><br><span class="line">    <span class="keyword">if</span>(Q-&gt;Rear == Q-&gt;Capacity - <span class="number">1</span>)&#123;</span><br><span class="line">        Q-&gt;Rear = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Q-&gt;Rear++;</span><br><span class="line">    &#125;</span><br><span class="line">    Q-&gt;Array[Q-&gt;Rear]=X;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Applications-2">Applications</h4><h5 id="Job-Assignment">Job Assignment</h5><h5 id="File-Server">File Server</h5>]]></content>
    
    
    <summary type="html">浙江大学数据结构基础课程笔记, 栈和队列。</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Data Structure" scheme="http://example.com/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>宏观经济学(3)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-09T10:50:00.000Z</published>
    <updated>2023-10-16T11:01:11.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、消费和储蓄">一、消费和储蓄</h2><h3 id="消费函数和消费倾向">消费函数和消费倾向</h3><h4 id="消费和消费函数">消费和消费函数</h4><p><strong>消费</strong>:一个国家或地区一定时期内居民个人或家庭为 满足消费欲望而用于购买消费品和劳务的所有支出。</p><p><strong>消费函数</strong>:指消费支出与决定消费的各种因素之间的依存关系。</p><blockquote><p>影响居民个人或家庭消费的因素很多，如收入水平、消费 品的价格水平、消费者个人的偏好、消费者对其未来收入的预 期、甚至消费信贷及其利率水平等等。会出现一个多变量的函数状态。为了尽可能地简化模型，所以我们仅选用最最最能影响消费的变量——收入水平。于是确立了:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mi>C</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mfrac><mrow><mi>d</mi><mi>S</mi></mrow><mrow><mi>d</mi><mi>Y</mi></mrow></mfrac><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>S</mi></mrow><mrow><mi>d</mi><msup><mi>Y</mi><mn>2</mn></msup></mrow></mfrac><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">C = C(Y), \frac{dS}{dY}&gt;0 ,\frac{d^2S}{dY^2} &lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p></blockquote><blockquote><p>绝对收入假说：凯恩斯认为，在收入和消费的关系方面，存在着一条基本的心理规律，即，随着人们收入的增加，他们的消费也会增加，但是消费不如收入增加得多。</p></blockquote><p>在宏观经济学中，很多经济现象都是通过逻辑归纳而非逻辑演绎得来的。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009190446326.png" alt="image-20231009190446326"></p><h5 id="线性函数">线性函数</h5><blockquote><p>因为线性函数的变化是符合对消费函数的定义的，即在某时刻之后收入增长得比消费更慢。所以也反映出</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mi>α</mi><mo>+</mo><mi>β</mi><mi>Y</mi></mrow><annotation encoding="application/x-tex">C = \alpha + \beta Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> ：常数，自发消费。指总消费中由于外生变量决定的那部分支出。居民个人或家庭的消费中有一个相对稳定的部分，其变化不受收入水平的影响。自发消费是自发性支出的一个组成部分，它主要取决于消费者嗜好、价格水平、社会风尚等因素。</p><blockquote><p>台湾农副产品销量不佳</p></blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mi>Y</mi></mrow><annotation encoding="application/x-tex">\beta Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>  引致消费，指消费中由内生变量所引起的消费。是居民个人或家庭的消费中受收入水平影响的部分。其中<em>β</em> 作为该函数的斜率，被称为<strong>边际消费倾向</strong>。</p><blockquote><p>会因国家而异，受消费习惯、地域文化影响。同时也是会随时间变化的，即便短期时间内不变，在长期内还是会改变。一般来说是0～1之间的小数。</p></blockquote><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009191351962.png" alt="image-20231009191351962"></p><h5 id="长期消费函数">长期消费函数</h5><ol><li>斜率小于1</li><li>一个国家长期没有收入的（大家都不干活的），那么国家就会消亡、没有消费</li></ol><p>过零点的原因：在长期中，当人们没有收入时，就不可能有消费行为。</p><p>在长期时间内，自发型消费为0，任何收入水平上边际消费倾向和平均消费倾向相等。穿过原点的。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009194023350.png" alt="image-20231009194023350"></p><h4 id="平均消费倾向-APC">平均消费倾向(APC)</h4><p>任意一个收入水平上，消费支出占可支配收入的比例，叫做平均消费倾向</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>P</mi><mi>C</mi><mo>=</mo><mfrac><mi>C</mi><mi>Y</mi></mfrac></mrow><annotation encoding="application/x-tex">APC = \frac C Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">PC</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>平均消费倾向也可理解为某一时期内<strong>总消费支出</strong>与<strong>总收入之比</strong>。一般来说，平均消费倾向是随收入增长而趋于<strong>逐渐下降</strong>的。</p><ul><li>其几何表示为消费函数曲线上相应点与原点连线的斜率。</li></ul><h4 id="边际消费倾向-MPC">边际消费倾向(<strong>MPC</strong>)</h4><p>每增加1单位收入中用于消费部分所占的比例，为边际消费倾向。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>P</mi><mi>C</mi><mo>=</mo><mfrac><mrow><mi>d</mi><mi>C</mi></mrow><mrow><mi>d</mi><mi>Y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">MPC = \frac {dC}{dY}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">MPC</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其几何表示为，消费函数曲线上相应点切线的斜率。</p><p>一般来说，边际消费倾向也是随收入增长而趋于下降的。</p><p>一般情况下，平均消费倾向大于边际消费倾向。</p><h4 id="平均消费倾向和边际消费倾向的区别">平均消费倾向和边际消费倾向的区别</h4><p>消费增量只能是收入增量的一部分，所以，边际消费倾向<em>MPC</em>的值处在大于<em>0</em>和小于1之间。 <strong>0&lt;β&lt;1</strong></p><p>平均消费倾向APC则可能大于、等于，或小于1，因为消费可能大于、等于或小于当期收入。（因为还可以消费以前的储蓄）</p><p>APC&gt;MPC 线性消费函数，则MPC都是常数。APC是变化的。</p><h3 id="储蓄函数和储蓄倾向">储蓄函数和储蓄倾向</h3><h4 id="储蓄和储蓄函数">储蓄和储蓄函数</h4><p><strong>储蓄</strong>:收入中没有被消费的部分。</p><p><strong>储蓄函数</strong>:指储蓄与决定储蓄的各种因素之间的依存关系。</p><blockquote><p>影响储蓄的因素很多，如收入水平、<strong>财富分配状况</strong>、消费习惯、<strong>社会保障体系</strong>的结构、利率水平等，但其中最重要的是居民个人或家庭的收入水平。因此，宏观经济学假定储蓄与人们收入水平存在着稳定的函数关系。以S代表储蓄，Y代表收入，可以用公式表示为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo>=</mo><mi>S</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mfrac><mrow><mi>d</mi><mi>S</mi></mrow><mrow><mi>d</mi><mi>Y</mi></mrow></mfrac><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>S</mi></mrow><mrow><mi>d</mi><msup><mi>Y</mi><mn>2</mn></msup></mrow></mfrac><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">S = S(Y) ,\frac{dS}{dY}&gt;0 ,\frac{d^2S}{dY^2} &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p></blockquote><blockquote><p>财富分配状况：如果把同样一笔钱分给穷人和富人，穷人和富人储蓄的意愿是不一样的，即边际储蓄倾向不同。</p><p>社会保障体系：人们不敢花钱，要存钱养老、看病，都是因为社会保障体系不完善，也就是大病医疗保险、养老保险不足够。</p></blockquote><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009193043317.png" alt="image-20231009193043317"></p><p>基尼系数：把社会收入分成五等分，当财富分配绝对公平时，财富的占有是一个绝对平等线，当财富分配绝对不公平时，财富的分配是一个沿坐标轴的折线。基尼系数即为灰色的部分占三角形的比例。基尼系数越高越反映社会财富分配不公平。正常可以接受的为0.44-0.66。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009194840496.png" alt="image-20231009194840496"></p><h5 id="线性储蓄函数">线性储蓄函数</h5><p>因为储蓄函数与太多变量有关，所以我们利用和消费函数的互补关系来简化函数。</p><blockquote><p>该方程是在两部门经济（家庭、企业）的假设下进行的，即政府部门是不存在的，也就不存在税收，所以总收入不是”消费+储蓄+税收“，而是“消费+储蓄”</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo>=</mo><mi>Y</mi><mo>−</mo><mi>C</mi><mo>=</mo><mo>−</mo><mi>α</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">S=Y-C=-\alpha + (1-\beta)Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></span></p><h5 id="长期储蓄函数">长期储蓄函数</h5><p>长期储蓄曲线在长期消费曲线下方，正常情况下，人们的消费一般大于储蓄。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009195324773.png" alt="image-20231009195324773"></p><h4 id="平均储蓄倾向-APS">平均储蓄倾向(APS)</h4><p>平均储蓄倾向:任一收入水平上储蓄所占的比率。其公式为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>P</mi><mi>S</mi><mo>=</mo><mfrac><mi>S</mi><mi>Y</mi></mfrac></mrow><annotation encoding="application/x-tex">APS = \frac S  Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">PS</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>储蓄曲线上任意一点与原点连线的斜率，就是平均储蓄倾向。</p><h4 id="边际储蓄倾向-MPS">边际储蓄倾向(MPS)</h4><p>边际储蓄倾向:储蓄增量对相应的可支配收入增量的比率。其公式为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>P</mi><mi>S</mi><mo>=</mo><mfrac><mrow><mi>d</mi><mi>S</mi></mrow><mrow><mi>d</mi><mi>Y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">MPS = \frac{dS}{dY}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">MPS</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="消费函数和储蓄函数的关系">消费函数和储蓄函数的关系</h3><p>储蓄函数和消费函数、储蓄倾向和消费倾向是两组对偶的变量和概念。</p><ol><li>在收入既定的条件下，二者互为对方在总收入中的余量;或者说二者是互补的。<img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009195604951.png" alt="image-20231009195604951">几个重要的点：<strong>和坐标轴的交点、和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>的交点</strong></li><li>当<em>APC</em>和<em>MPC</em>都随收入增加而递减时， <em>APC&gt;MPC</em>;当<em>APS</em>和<em>MPS</em>都随收入增加而递增时，<em>APS&lt;MPS</em>。</li><li><em>APC</em>和<em>APS</em>之和恒等于1，<em>MPC</em>和<em>MPS</em>之和也恒等于1。</li></ol><p>在收入确定的情况下，消费函数和储蓄函数只要有一个被确定，另一个就会同时被确定。</p><h3 id="影响消费的其他因素及其对相关政策效果影响">影响消费的其他因素及其对相关政策效果影响</h3><h4 id="影响消费的其他因素">影响消费的其他因素</h4><ol><li>利率：因人而异<ul><li>利率上升，储蓄上升。替代效应：有些人会想着用将来的高消费替代当下的低消费，在低收入群体中常见。</li><li>利率上升，储蓄下降。收入效应：有些人会想到利率提高了，将来的收入也会提高，所以现在就更大胆地花钱</li></ul></li><li>价格水平<ul><li>物价水平上升，收入下降，如果消费不变，边际消费倾向增大</li><li>物价水平下降，收入上升，如果消费不变，边际消费倾向减小</li></ul></li></ol><h3 id="其他消费理论">其他消费理论</h3><ol><li><p>现期收入假定下的消费函数理论</p><blockquote><p>因为未来的工资还没拿到手里呢！<br>(1)绝对收入假说:即凯恩斯的消费函数理论<br>(2)相对收入假说:杜森贝里的消费函数理论。<br>“示范效应”、“攀比效应”、“棘轮效应”。这些效应对于消费都会产生影响。</p></blockquote></li><li><p>恒久收入假定下的消费函数理论<br>恒久收入：当期收入和过去收入按到一定权重加总<br>政府短期的减税效应效果往往比较差。</p></li></ol><h2 id="二、投资">二、投资</h2><h3 id="投资和资本边际效率">投资和资本边际效率</h3><p>**投资：**一个国家或地区一定时间内社会资本的形成(厂房、机器设备与存货、新住宅建设)</p><blockquote><p>宏观经济学中的投资即为实体经济的投资，因为实体经济才对生产力有贡献，算入三驾马车的范畴。</p></blockquote><p>投机性投资：购买证券、土地</p><p>当投资收益等于投资成本时，投资会停止。</p><p>由于资本品的损耗造成的资本存量的减少成为<strong>折旧</strong>， 为补偿或重新置换已消耗的资本进行的投资，称为<strong>重置投资</strong>。</p><p>使资本存量出现净增加的投资被定义为净投资。总投资还要加上折旧。</p><p>eg.有1000亿社会资本，一年新增投资200亿，折旧80亿，在年末社会资本1120亿，净投资120亿，总投资200亿。</p><p>宏观经济学一般情况下不考虑折旧。</p><p>利率：资金的使用成本。</p><h4 id="资本边际效率">资本边际效率</h4><blockquote><p>凯恩斯的资本边际效率，指的是预期增加一个单位投资可以得到的利润率。</p></blockquote><p>资本边际效率(MEC)是一种贴现率，它能够正好使一项资本品在其使用期内各预期收益的现值之和等于这项资本品的供给价格或重置成本</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mn>0</mn><mo>=</mo><mfrac><mn>11000</mn><mrow><mn>1</mn><mo>+</mo><mn>10</mn><mi mathvariant="normal">%</mi></mrow></mfrac><mo>+</mo><mfrac><mn>12100</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>10</mn><mi mathvariant="normal">%</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mn>13310</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>10</mn><mi mathvariant="normal">%</mi><msup><mo stretchy="false">)</mo><mn>3</mn></msup></mrow></mfrac><mo>=</mo><mn>30000</mn></mrow><annotation encoding="application/x-tex">R0 = \frac {11000}{1+10\%} + \frac{12100}{(1+10\%)^2}+\frac{13310}{(1+10\%)^3} = 30000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">10%</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11000</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">10%</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">12100</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">10%</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13310</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">30000</span></span></span></span></span></p><p>10%的贴现率就是资本边际效率，也代表了该投资的预期收益率。</p><p>贴现率**=<strong>资本边际效率</strong>=**预期收益率</p><p>如果按照投资的原则，边际收益等于边际成本，即资本边际效率=利率时投资会停止。</p><p>==从这里开始补吧== 8:20？</p><h4 id="资本边际效率曲线（marginal-Efficiency-of-Capital-MEC）">资本边际效率曲线（marginal Efficiency of Capital, MEC）</h4><p>资本边际效率曲线的含义:一笔投资可选择的所有项目的集合</p><p>资本边际效率是一条向右下方倾斜的曲线。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009202629935.png" alt="image-20231009202629935"></p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231014102057445.png" alt="image-20231014102057445"></p><h4 id="投资边际效率曲线（marginal-Efficiency-of-Investment）">投资边际效率曲线（marginal Efficiency of Investment）</h4><p>定义：</p><ol><li><p>因资本品价格上涨而导致缩小的贴现率(资本边际效率)就叫做投资边际效率。</p></li><li><p>当利率r下降时，如果每个企业都增加投资，资本品的供给价格R上涨，由于R价格增加而被缩小的资本边际效率的值。</p></li></ol><p>投资边际效率低于资本边际效率是投资竞争的结果。</p><p>与资本边际效率相比，投资边际效率要考虑<strong>投资资金在形成资本时的市场变动</strong>，即资本边际效率是假设竞争对手没有因为利率下降跟着增加投资量的情况，这样会比较理想状态，会使理论上的投资量比实际偏多。但投资边际效率是考虑了利率下降，别人也跟着增加投资量，所以利率并没有下降得这么多（投资需求增加导致利率上升），或者说利率下降这么多，投资的量并没有理论上这么大。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231014094804607.png" alt="image-20231014094804607"></p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009203400512.png" alt="image-20231009203400512"></p><h3 id="影响预期收益的因素">影响预期收益的因素</h3><h3 id="投资和利率">投资和利率</h3><h4 id="投资的分类">投资的分类</h4><p>分类：</p><ol><li><p>主体：私人投资 vs 政府投资</p><blockquote><ol><li>领域不同：前者集中在竞争性行业，后者集中在非竞争性行业和公共产品</li><li>目的不同：前者为利润最大化，后者为调控宏观经济运行</li></ol></blockquote></li><li><p>形态：固定资产投资 vs 存货投资 —— 前者是用来购买厂房、机器、设备的投资，后者是指厂商库存的成品、半成品所占用的资金。</p></li><li><p>对于存货投资：意愿性存货投资 / 非意愿性存货投资 —— 前者是为了维持连续生产过程而保有的一定数量的存货投资，后者是由于销售业绩不佳、供求关系改变等超出正常需要量的存货投资</p></li><li><p>动机： 生产性投资 vs 投机性投资 —— 后者涉及物质产品的生产、没有产生新的实际资本，要么是先有财产所有权的转移，要么是虚拟资本的交易。一般不追求长期的投资回报，注重资产短期升值。</p></li></ol><h4 id="投资利率曲线">投资利率曲线</h4><p>如果我们以I代表投资，以r代表利率，则上述关系可以用公式表示为:</p><p><strong>I = i</strong>(<strong>r</strong>) (满足条件<strong>di / dr</strong> &lt; <strong>0</strong>)</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009204641421.png" alt="image-20231009204641421"></p><ul><li><p>二阶导数不定</p></li><li><p>坐标轴倒置（自变量换到y轴）</p><blockquote><p>经济学约定俗成，遇到r（利率），p（价格水平），e（汇率）时通常会把他们作为y轴。要注意研究时结果是相反的！</p></blockquote></li><li><p>只要存在银行，这种关系就一直存在</p></li><li><p>随着利率水平的变化，投资量会沿着同一条投资曲线移动。如果利率水平不变，由其他因素引起的投资量变动，则在坐标系中表现为投资曲线的移动。</p></li><li><p>其他影响投资的因素：</p><ul><li>厂商预期：即企业家对未来经济前景、销售形势的预期</li><li>风险偏好：银行的存款利率是一种没有风险的报酬率，而投资是有风险的。因此一般情况下， 厂商的投资收益率应大于等于银行利息率。风险偏好程度越大，投资曲线越偏向右方。</li><li>政府投资：政府投资会考虑政治、军事等非经济目标，因此，在利率水平既定的条件下，政府可能会因某种原因大幅度增加/减少投资，从而导致社会投资曲线的改变。</li></ul></li></ul><h5 id="线性函数-2">线性函数</h5><p>e：自主投资。和利率变化无关的投资。</p><blockquote><p>由于政治方面、心理方面的原因或由于技术进步而引起的投资。最典型最重要的自发性投资：政府投资。</p></blockquote><p>dr：诱致投资。</p><p>d：投资系数，其数值的大小反映了利率水平的变化对投资影响的程度。</p><p>在横轴为投资I，纵轴为利率r的座标中，线性投资函数I = e- dr的图象如下:</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009205353050.png" alt="image-20231009205353050"></p><p><strong>比较静态分析</strong>：自变量不动，其他常量改变使曲线旋转、平移后进行分析。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009205734735.png" alt="image-20231009205734735"></p><ul><li><p>政府突然增加投资，会使整个社会的投资增加</p></li><li><p>图（2）斜率大的那条曲线可以对应国有企业改革之前的利率-投资曲线，更多的投资由政府计划决定，并非由企业根据利率作出的投资决策。所以此时的d极小，然后斜率趋向于正无穷。<br>国有企业的改革就是让国有企业自主经营、自主决策。</p></li><li><p>d也是表示投资对利率的敏感程度</p></li></ul><p><strong>消费函数分析</strong>：</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009210843223.png" alt="image-20231009210843223"></p><ul><li>变化原因可能是政策：落地签增加，导致了当地收入增加，就是体现在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>上的。因为不是由于当地居民收入的增加引起的，所以算在了自发性消费上。</li></ul><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/2023-09-25-%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231009210958583.png" alt="image-20231009210958583"></p><ul><li>边际消费倾向变大后，整个消费曲线会发生旋转</li></ul><h3 id="托宾的q理论">托宾的q理论</h3><blockquote><p>整个社会的投资决策时如何做出的。</p></blockquote><p>q = 企业的股票市场价值 / 新建造企业的成本(或重置成本)</p><p><em>q</em>小于1时，买旧企业比新建企业更便宜，这时就不会有新投资。 <em>q</em>大于 1时，新建企业比购买旧企业更合算，所以会有新投资。</p><p>托宾q理论的优点：</p><p>我们做决策时第一年、第二年会存在时间差异</p><p>在同一个时间点做比较，避免了投资的当前成本与未来收益的时间不一致问题</p><p>Q理论的缺点</p><ol><li><p>回避了股票市场价值的不正常和未来收益的不确定性</p></li><li><p>Q理论只能说明个别企业的投资方式选择，不能说明宏观投资问题。(当然，这也是凯恩斯主义经济学和许多非凯恩斯主义经 济学理论共有的缺点)。</p></li></ol><h2 id="三、政府购买">三、政府购买</h2><ul><li><p>古典经济学和新古典经济学对政府财政及政府作用的看法。</p><blockquote><p>只要政府能够保证市场的充分竞争秩序，它就没有更多的经济职能。所以，他们主张政府的财政收支平衡。(不需要政府)</p></blockquote></li><li><p>凯恩斯主义经济学对政府财政及政府作用的看法 解决社会总需求不足的唯一出路。</p><blockquote><p>凯恩斯主义经济学则看到了政府的财政收支对于总需求具有<strong>较大的作用</strong>，是可以用来克服经济萧条的。这种观点决定了凯恩斯主义经济学对政府需求以及对干预经济的政策的重视。(强调政府干预)</p><p>当经济出现问题的时候，社会出现总需求不足时，（消费起不来企业不敢投资，三架马车中的两架起不来），只能通过政府投资解决。</p></blockquote></li></ul><h4 id="一-政府购买的内容——政府需求">(一)政府购买的内容——政府需求</h4><p>政府需求的构成:</p><p>政府维持正常活动的消费需求 政府公共投资和专项投资的投资需求</p><h4 id="二-政府对社会总需求的影响">(二)政府对社会总需求的影响</h4><ol><li><p>直接购买支出的影响</p><blockquote><p>直接影响社会总需求</p></blockquote></li><li><p>税收的影响</p><blockquote><p>增加或减少企业和个人的收入，从而影响他们的投资需求和消费需求。</p></blockquote></li><li><p>转移支付的影响</p><blockquote><p>同样通过增加企业或个人的收入，从而增加消费需求。</p></blockquote></li><li><p>制度和政策的影响</p><blockquote><p>具体经济制度和经济政策(如农产品补贴制度、鼓励出口的关税政策等)都会影响到社会的总需求。</p></blockquote></li></ol><h2 id="四、净出口">四、净出口</h2><h3 id="国外需求的决定因素">国外需求的决定因素</h3><p>国外需求基本是外生决定的因素</p><p>1、国外需求的大小取决于国外的收入水平高低;</p><p>2、国外需求的大小取决于国外的消费倾向高低;</p><p>3、国外需求的大小取决于国外的消费结构;</p><p>4、国外需求的大小取决于本国出口商品的价格水平高低</p><p>5、汇率</p><p>6、本国对外实际投资</p><p>7、国际贸易中的竞争程度</p><p>8、外国的贸易保护主义强弱</p><p>和产品的类型结构。</p><p>一般来说把净出口当作外生变量，即常量</p><h3 id="净出口的决定">净出口的决定</h3><p>1、净出口是本国出口额减去进口额之后的余额: NX=X-M。 (国外需求会被本国对外国产品和服务的需求抵消一部分，</p><p>甚至全部。)</p><p>2、宏观经济分析往往以国内需求为<strong>内生变量</strong>，本国对外国产 品的需求越大，净出口相应地会越小，除非国外需求非常大</p><p>3、进口倾向 M/Y与边际进口倾向∆M/∆Y (进口倾向取决于国民收入水平与消费倾向)</p>]]></content>
    
    
    <summary type="html">第九章-宏观经济的基本指标及其衡量-消费、储蓄、投资、政府购买与净出口</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="宏经" scheme="http://example.com/tags/%E5%AE%8F%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑设计(3)【23～24秋冬】</title>
    <link href="http://example.com/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-10-09T05:25:00.000Z</published>
    <updated>2023-10-16T05:29:14.482Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Shannon-formula">Shannon formula</h4><p>函数F含有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>，如果是一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mtext> </mtext><mi>A</mi><mi>N</mi><mi>D</mi><mtext> </mtext><mi>F</mi></mrow><annotation encoding="application/x-tex">x\ AND\ F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>表达式，这个表达式里面的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>可以被0替换，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>可以被1替换。<br>如果是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mtext> </mtext><mi>A</mi><mi>N</mi><mi>D</mi><mtext> </mtext><mi>F</mi></mrow><annotation encoding="application/x-tex">\bar x \ AND \ F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>表达式，这个表达式里面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>可以被0替换，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>可以被1替换。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x\cdot F(x, \bar x, y, \ldots) = x\cdot F(1, 0, y,\ldots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bar x \cdot F(x, \bar x, y, \ldots) = \bar x \cdot F(0, 1, y, \ldots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span></span></span></p><p>此时对上述等式取对偶，即可得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mtext> </mtext><mi>O</mi><mi>R</mi><mtext> </mtext><mi>F</mi></mrow><annotation encoding="application/x-tex">x\ OR \ F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">OR</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>的等式，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x+f(x, \bar x, y, \ldots) = x+f(0, 1, y,\ldots) \\\bar x + f(x, \bar x, y, \ldots) = \bar x + f(1, 0, y, \ldots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span></span></span></span></p><h4 id="Shannon-expansion">Shannon expansion</h4><p>如果一个函数同时包含变量x，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>，那么就可以分解为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>Y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>⋅</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>⋅</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>x</mi><mo>⋅</mo><mi>f</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo>⋅</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(X,\bar X, Y,\ldots) = x\cdot f(x, \bar x, y,\ldots) + \bar x\cdot f(x, \bar x ,y, \ldots) \\= x \cdot f(1, 0, y, \ldots) + \bar x \cdot f(0, 1, y,\ldots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span></span></span></span></p><p>两边同时取对偶可以得到“OR”的形式</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231011073208354.png" alt="image-20231011073208354"></p><div class="note info flat"><ul><li>对偶的性质：等式两边同时取对偶，等式依然成立</li><li>应用：1. 如果对偶相等，可以推出原函数相等；如果原函数想等，可以推出对偶相等。 2. 化简时可以取对偶化到最简后再取对偶。因为一般进行表达式化简时，会比较倾向以SOP的形式开始化简，所以如果题目是一个POS式，可以先取对偶化简后，再取对偶。</li></ul></div><div class="note warning flat"><p>回顾一个比较重要的公式，上课的时候完全忘记是公式了</p><p>consensus theorem（一致律定理）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi><mo>+</mo><mi>Y</mi><mi>Z</mi><mo>=</mo><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi></mrow><annotation encoding="application/x-tex">XY + \bar XZ + YZ =XY + \bar XZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></span></p><p>推导如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi><mo>+</mo><mi>Y</mi><mi>Z</mi><mo>=</mo><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi><mo>+</mo><mi>Y</mi><mi>Z</mi><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi><mo>+</mo><mi>X</mi><mi>Y</mi><mi>Z</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Y</mi><mi>Z</mi><mspace linebreak="newline"></mspace><mo>=</mo><mi>X</mi><mi>Y</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>X</mi><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Z</mi></mrow><annotation encoding="application/x-tex">XY + \bar XZ + YZ = XY + \bar XZ + YZ(X+ \bar X)\\= XY + \bar XZ + XYZ + \bar XYZ\\= XY(1+Z) + \bar XZ(1+Y)\\= XY + \bar XZ </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></span></p><p>也就是说如果Y、Z分别与X和X非结合，那么Y、Z项就是可以省去的。</p></div><h3 id="2-3-Standard-Forms">2.3 Standard Forms</h3><h4 id="Minterms">Minterms</h4><p>Minterms are AND terms with <strong>every variable</strong> present in either true or complemented form.</p><p>给定每个二进制变量，在最小项中可以以normal（原变量）和complemented（反变量）的形式出现，对于n个变量有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>个minterms。只有一种组合可以使minterm为1。</p><p>用符号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">m_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>来表示最小项，index j是和最小项所对应的二进制组合相等的十进制数。二进制组合：如果一个变量是complemented，那么他对应的位数为0，如果一个变量uncomplemented，那么他对应的位数为1.</p><blockquote><p>eg. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Y</mi><mover accent="true"><mi>Z</mi><mo>ˉ</mo></mover><mo>=</mo><mn>110</mn><mo>=</mo><msub><mi>m</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">XY\bar Z = 110 = m_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">110</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></blockquote><p><img src="/Users/lyhkd/Library/Application%20Support/typora-user-images/image-20231009140300914.png" alt="image-20231009140300914"></p><h4 id="Maxterms">Maxterms</h4><p>Maxterms are OR terms with every variable in true or complemented form. 给定每个二进制变量，对于n个变量有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>个minterms</p><p>只有一种组合可以使maxterm为0.</p><p>用符号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">M_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>来表示最大项，index j是和最大项所对应的二进制组合相等的十进制数。二进制组合：如果一个变量是complemented，那么他对应的位数为1，如果一个变量uncomplemented，那么他对应的位数为0.</p><blockquote><p>eg. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Y</mi><mover accent="true"><mi>Z</mi><mo>ˉ</mo></mover><mo>=</mo><mn>001</mn><mo>=</mo><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">XY\bar Z = 001 = M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">001</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></blockquote><p><img src="/Users/lyhkd/Library/Application%20Support/typora-user-images/image-20231009140251368.png" alt="image-20231009140251368"></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>m</mi><mo>ˉ</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i = \bar m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7178em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">m</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>M</mi><mo>ˉ</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_i = \bar M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9701em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="Canonical-forms-（规范）（待补）">Canonical forms （规范）（待补）</h4><p>我们可以实现任何函数通过把所有函数真值表中对应“1”的minterm表达式“或”起来，这就是sum of minterms（SOM）</p><p>我们也可以把所有函数真值表中所有对应“0”的maxterm表达式“与”起来，这就是Product of Maxterms（POM）</p><p>Any Boolean function can be expressed as a <strong>Sum of Minterms</strong>.</p><blockquote><p>对于一个给定的表达式，如果某一项因为缺少变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>而不能够作为最小项，则可以“ANDing”一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mo>+</mo><mover accent="true"><mi>v</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v+ \bar v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>来补全任何缺失的变量。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo>=</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>y</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mspace linebreak="newline"></mspace><mo>=</mo><mi>x</mi><mi>y</mi><mo>+</mo><mi>x</mi><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>=</mo><msub><mi>m</mi><mn>3</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo>+</mo><msub><mi>m</mi><mn>0</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><munder><mo>∑</mo><mi>m</mi></munder><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f = x + \bar x\bar y = x(y+\bar y) + \bar x \bar y\\=xy + x\bar y + \bar x\bar y = m_3 + m_2 + m_0\\=\sum_m(0, 2, 3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p></blockquote><p>Any Boolean function can be expressed as a <strong>Product of Maxterms</strong>.</p><blockquote><p>对于一个给定的表达式，先通过分配律展开所有项，如果某一项因为缺少变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>而不能够作为最大项，则可以“ORing”一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mover accent="true"><mi>v</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(v\bar v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>来补全任何缺失的变量。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo>=</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>=</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>+</mo><mi>z</mi><mover accent="true"><mi>z</mi><mo>ˉ</mo></mover><mspace linebreak="newline"></mspace><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>+</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>z</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><msub><mi>M</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>M</mi><mn>3</mn></msub><mo>=</mo><munder><mo>∏</mo><mi>M</mi></munder><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f = x + \bar x\bar y = (x + \bar x)(x+\bar y)\\= x + \bar y = x+\bar y + z\bar z \\= (x+\bar y +z)(x+\bar y + \bar z)\\= M_2\cdot M_3 = \prod_M(2, 3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7622em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5678em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3443em;vertical-align:-1.2943em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p></blockquote><p>最小项之和可以表示成不同项的OR，也可以用求和符号表示，后者是缩写方式。</p><h4 id="Function-Complement">Function Complement</h4><p>一个以SOM形式表示的函数，可以通过选择SOM缺失的项来构造反函数的SOM</p><blockquote><p>The complement of a function expressed as a sum of minterms is constructed by selecting the minterms missing in the sum-of-minterms canonical forms.</p></blockquote><p>对应的，一个以SOM形式表示的函数，如果要获得他反函数的POM，只要选择和原函数SOM形式相同的项就行。</p><blockquote><p>Alternatively, the complement of a function expressed by a Sum of Minterms form is simply the Product of Maxterms with the same indices.</p></blockquote><h4 id="Standard-Forms">Standard Forms</h4><p>Standard Sum-of-Products (SOP) form: equations are written as an OR of AND terms</p><blockquote><p>对于n个变量的SOM形式，这种形式的实现可以通过两级电路门来完成，第一级由n个AND输入门构成，第二级由一个OR门组成。</p></blockquote><p>Standard Product-of-Sums (POS) form: equations are written as an AND of OR terms</p><p>每项并非都是最大项/最小项！</p><p>Canonical form是standard form的一种特殊形式。</p><h3 id="2-4-Tow-level-circuit-optimization">2.4 Tow-level circuit optimization</h3><blockquote><p>The term “<em>two</em>-<em>level</em> logic” refers to a logic design that uses no more than two logic gates between input and output.</p><p>The goal of logic optimization of a given circuit is to obtain the smallest logic circuit that evaluates to the same values as the original one.</p></blockquote><p>==哪两级？Optimization是什么？消变量？==</p><h4 id="Cost-Criteria">Cost Criteria</h4><p><strong>Literal cost</strong>：使用的变量的数量</p><p>**Gate Input Cost：**所用门的输入端的个数<br>所有的文字数 + <strong>除单个文字之外</strong>的全部项数 + <strong>不同</strong>的取反值的单个文字总数（不可能对同一个B取两次反呐）</p><blockquote><p>eg.</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mi>Y</mi><mo>+</mo><mi>W</mi><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mi>Y</mi><mo>+</mo><mi>Y</mi><mo>+</mo><mover accent="true"><mi>X</mi><mo>ˉ</mo></mover><mover accent="true"><mi>Y</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">XY + W\bar XY + Y + \bar X\bar Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span></span></p><ol><li>8个文字</li><li>3个除单个文字的项数</li><li>2个不同的取反文字</li></ol><p>G = 11， GN = 13</p></blockquote><p>(G-inverters not counted GN-inverters counted)</p><h4 id="Karnaugh-maps（K-maps）">Karnaugh maps（K-maps）</h4><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231011081201235.png" alt="image-20231011081201235"></p><p>**相邻：**两个二进制组合中只有一个位数不一样</p><p>**相邻项：**两个乘积项（包括最小项）中只有一个文字不同，且这个文字在一个乘积项中未取反，而在另一个乘积项中取反，则称他们为相邻项。</p><h5 id="Systematic-simplification">Systematic simplification</h5><p>！！！只能框选2的幂次个！！！</p><p>蕴涵项：如果函数对某个乘积项的每一个最小项都取值为1，则这个乘积项是函数的一个蕴涵项。</p><p>A prime implicant：把尽可能多的minterms框选起来</p><blockquote><p>质蕴涵项：若函数的一个蕴涵项不是该函数中其他蕴涵项的子集，则此蕴涵项称为质蕴涵项(Prime Implicant)，简称为质项。</p><p><em>F</em> 的<strong>质涵项</strong>（prime implicant）为最少化文字数量的<strong>涵项</strong>——就是说，如果从 <em>P</em> 去除任何“文字”（literal）都导致 <em>P</em> 成为 <em>F</em> 的非<strong>涵项</strong>。例如<em>100</em>和<em>101</em>是某逻辑函数的两个<strong>涵项</strong>，那么<em>10x</em>就是函数的一个<strong>质涵项</strong>，其中的1和0两个数字不可再去掉；</p><p>质涵项就是一个最大的蕴涵项。</p></blockquote><p>An Essential prime implicant：是一个起码包含一个只属于这个implicant的prime implicant。</p><p>先选essential，再挑选没有覆盖的</p><p>算法：</p><ol><li>找出所有的prime implicants</li><li>挑出所有essential prime implicants进入答案</li><li>选出最小化花销的 non-essential prime implicants<br>==有其他方法可以去看补充材料==</li></ol><p>Q：最后一步也要框选尽可能多的项嘛？</p><p>原则：尽量少地让框与框之间overlap</p><h5 id="with-Maxterms">with Maxterms</h5><p>如果0少于1的话，可以选择框0。</p><p>框起来所有的0，再用Maxterm表示，则表示了原函数。</p><p>框起来所有的0，再用Minterm表示，则表示了他的反函数。（如果此时再取反就可以得到原函数的Maxterm项）</p><h5 id="Don’t-cares-in-K-Maps">Don’t cares in K-Maps</h5><p>由于表达式的应用情形，有一些组合不会出现。比如BCD码里面，10～15不会出现。在函数表格里面填上“x“。</p><p>这样所有含”x”的格子可以当作“0”或者当作“1”来用，that‘s——万能格！</p><p>==（对偶和反函数再去看看性质）==</p><h3 id="2-5-Multi-level-optimization">2.5 Multi-level optimization</h3><p>不能用卡诺图，只能用表达式优化。</p><p>另外一种思想——转化为两级电路：但是当变量很多时超过门的输入，就不能化为两级了。其他情况下都可以把多级化为两级电路，转化为两级电路后再用卡诺图进行优化。</p><p>当然，有时候多级表示比两级表示更省资源。</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20231011083953285.png" alt="image-20231011083953285"></p><p><strong>惯性延迟</strong>：当输入较小宽度的脉冲将会被滤除，即不允许所有宽度小于指定延迟的脉冲通过电路单元，那么能够让对应输出有变化的最小脉冲宽度即为惯性延迟，是所有的电子器件均存在的一种延迟特性</p><p><img src="/2023/10/09/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/2023-09-25-%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(3)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/b209fa4ee0e5cc029d708ba53b8cd975897753ca.png" alt="image"></p><p>传输延迟（transport delay）是指输出响应输入的变化，在指定的传播延迟之后发生改变。惯性延迟（inertial delay）类似于传输延迟，但如果输入变化使输出在一个小于拒绝时间（rejection time）的间隔内发生两次变化，那么两次变化中的第一次将不会发生。这个拒绝时间是一个确定的值，它不大于传播延迟，通常等于传播延迟。</p><p><a href="https://developer.aliyun.com/article/213120">https://developer.aliyun.com/article/213120</a></p><h3 id="作业专题">作业专题</h3><p>布尔逻辑式的化简：主要考察各个恒等式的应用，可以尝试从变量少的式子中生成变量多的式子，然后和其他式子进行消去，如</p><blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo>+</mo><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mi>D</mi><mspace linebreak="newline"></mspace><mo>=</mo><mo stretchy="false">(</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mi>D</mi><mspace linebreak="newline"></mspace><mo>=</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo>+</mo><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo>+</mo><mo stretchy="false">(</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mi>D</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo>+</mo><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo>+</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover><mo stretchy="false">(</mo><mi>B</mi><mo>+</mo><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover><mo>+</mo><mi>B</mi><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar A \bar B + B\bar C + \bar A\bar C D \\= (\bar A \bar B +\bar A \bar B\bar C)+ (B\bar C + \bar AB\bar C)+ \bar A\bar C D \\= \bar A \bar B + B\bar C + (\bar A\bar C+ \bar A\bar C D )\\= \bar A \bar B + B\bar C + \bar A\bar C(B+\bar B)\\=\bar A\bar B + B\bar C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9034em;vertical-align:-0.0833em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span></span></p></blockquote>]]></content>
    
    
    <summary type="html">卡诺图</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数逻" scheme="http://example.com/tags/%E6%95%B0%E9%80%BB/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/10/02/python/Matplotlib/"/>
    <id>http://example.com/2023/10/02/python/Matplotlib/</id>
    <published>2023-10-02T13:25:19.762Z</published>
    <updated>2023-10-03T23:12:32.261Z</updated>
    
    <content type="html"><![CDATA[<h1>Matplotlib使用说明</h1><h3 id="plt和ax">plt和ax</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">ax=fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>plt是生成一个画布，直接在该画布上画图。ax是在画布上选定一个子区域进行画图。</p><h3 id="折线图">折线图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app=[<span class="number">78</span>,<span class="number">80</span>,<span class="number">79</span>,<span class="number">81</span>,<span class="number">91</span>,<span class="number">95</span>,<span class="number">96</span>]</span><br><span class="line">x=np.arange(<span class="number">1</span>,<span class="number">8</span>)</span><br><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ax=fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.plot(x,app)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2023/10/02/python/Matplotlib/v2-a8ecdf6f32ef608047dd5114b9a2ffd1_b.jpeg" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数里的参数，是根据我们的例子特定设置的，不同问题，不同的设置，需要看图片效果，找参数</span></span><br><span class="line">app=[<span class="number">78</span>,<span class="number">80</span>,<span class="number">79</span>,<span class="number">81</span>,<span class="number">91</span>,<span class="number">95</span>,<span class="number">96</span>]</span><br><span class="line">x=np.arange(<span class="number">1</span>,<span class="number">8</span>)</span><br><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ax=fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.plot(x,app)</span><br><span class="line"><span class="comment">#设置刻度范围</span></span><br><span class="line">ax.set_xlim(<span class="number">1</span>,<span class="number">7.1</span>)<span class="comment">#x轴从1到7.1</span></span><br><span class="line">ax.set_ylim(<span class="number">40</span>,<span class="number">100</span>)<span class="comment">#y轴从40到100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置显示的刻度</span></span><br><span class="line">ax.set_xticks(np.linspace(<span class="number">1</span>,<span class="number">7</span>,<span class="number">7</span>))<span class="comment">#np.linspace()函数为等差数列,1至7的7个数组成的等差数列1,2，3,4，5,6，7，</span></span><br><span class="line">ax.set_yticks(np.linspace(<span class="number">50</span>,<span class="number">100</span>,<span class="number">6</span>))<span class="comment">#关于等差数列，想了解的可以参看numpy的用法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置刻度标签</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&quot;星期一&quot;</span>,<span class="string">&quot;星期二&quot;</span>,<span class="string">&quot;星期三&quot;</span>,<span class="string">&quot;星期四&quot;</span>,<span class="string">&quot;星期五&quot;</span>,<span class="string">&quot;星期六&quot;</span>,<span class="string">&quot;星期日&quot;</span>],fontproperties=<span class="string">&quot;SimHei&quot;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line"><span class="comment">#这里用到了属性fontproperties可以单独设置x轴标签的字体，也可以用fontsize设置字体大小，还可以用color设置字的颜色</span></span><br><span class="line"></span><br><span class="line">ax.set_yticklebels([<span class="string">&quot;50kg&quot;</span>,<span class="string">&quot;60kg&quot;</span>,<span class="string">&quot;70kg&quot;</span>,<span class="string">&quot;80kg&quot;</span>,<span class="string">&quot;90kg&quot;</span>,<span class="string">&quot;100kg&quot;</span>],fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#借用函数tick_params()可以装修轴上的刻度线和轴标签</span></span><br><span class="line">ax.tick_params(left=<span class="literal">False</span>,pad=<span class="number">8</span>,direction=<span class="string">&quot;in&quot;</span>,length=<span class="number">2</span>,width=<span class="number">3</span>,color=<span class="string">&quot;b&quot;</span>,labelsize=<span class="number">12</span>)</span><br><span class="line">ax.tick_params(<span class="string">&quot;x&quot;</span>,labelrotation=<span class="number">10</span>)<span class="comment">#类标旋转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加轴坐标标签，表头，图例</span></span><br><span class="line">ax.set_xlabel(<span class="string">&quot;星期&quot;</span>)<span class="comment">#添加x轴坐标标签，后面看来没必要会删除它，这里只是为了演示一下。</span></span><br><span class="line">ax.set_ylabel(<span class="string">&quot;销售量&quot;</span>,fontsize=<span class="number">16</span>)<span class="comment">#添加y轴标签，设置字体大小为16，这里也可以设字体样式与颜色</span></span><br><span class="line">ax.set_title(<span class="string">&quot;某某水果店一周水果销售量统计图&quot;</span>,fontsize=<span class="number">18</span>，backgroundcolor=<span class="string">&#x27;#3c7f99&#x27;</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>,color=<span class="string">&#x27;white&#x27;</span>,verticalalignment=<span class="string">&quot;baseline&quot;</span>)<span class="comment">#标题（表头）</span></span><br></pre></td></tr></table></figure><p><img src="/2023/10/02/python/Matplotlib/v2-864d4871be1f71313597c6d037df74df_b.webp" alt="img"></p><p><img src="/2023/10/02/python/Matplotlib/v2-79929ba933f8bd05d30782c1ca56a8e7_b.webp" alt="img"></p><h5 id="set-title">set_title()</h5><ul><li>**fontsize：**默认12，可选参数还有[‘xx-small’, ‘x-small’, ‘small’, ‘medium’, ‘large’,‘x-large’, ‘xx-large’]</li><li>**backgroundcolor：**背景颜色</li><li>**fontweight：**字体粗细，可选参数为[‘light’, ‘normal’, ‘medium’, ‘semibold’, ‘bold’, ‘heavy’, ‘black’]</li><li>**color：**字体颜色</li><li>**fontstyle：**设置字体类型，可选参数[ ‘normal’ | ‘italic’ | ‘oblique’ ]，italic斜体，oblique倾斜</li><li>**verticalalignment：**设置水平对齐方式 ，可选参数 ： ‘center’ , ‘top’ , ‘bottom’ ,‘baseline’</li></ul><h5 id="spines">spines</h5><p>设置轴线可见、颜色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ax.spines[<span class="string">&quot;top&quot;</span>].set_visible(<span class="literal">False</span>)<span class="comment">#上轴不显示</span></span><br><span class="line">ax.spines[<span class="string">&quot;right&quot;</span>].set_visible(<span class="literal">False</span>)<span class="comment">#右</span></span><br><span class="line">ax.spines[<span class="string">&quot;left&quot;</span>].set_visible(<span class="literal">False</span>)<span class="comment">#左</span></span><br></pre></td></tr></table></figure><h5 id="legend">legend()</h5><ul><li>**loc:**可取&quot;best&quot;,1或者&quot;upper right&quot;,2或&quot;upper left&quot;,3或&quot;lower left&quot;,4或&quot;lower right&quot;,代表放不同位置</li><li><strong>fontsize</strong>： int或float或{‘xx-small’, ‘x-small’, ‘small’, ‘medium’, ‘large’, ‘x-large’, ‘xx-large’}，字体大小</li><li><strong>shadow</strong>: 是否为图例边框添加阴影</li><li><strong>labelspacing</strong>: 图例中条目之间的距离</li><li><strong>handlelength</strong>: 图例句柄的长度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ax.plot(x,app,label=<span class="string">&quot;苹果&quot;</span>)</span><br><span class="line">ax.legend(loc=<span class="number">3</span>,labelspacing=<span class="number">2</span>,handlelength=<span class="number">3</span>,fontsize=<span class="number">14</span>,shadow=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="/2023/10/02/python/Matplotlib/v2-ca2b4f7e4f283c99af0b0dcb9c3224f5_b.webp" alt="img"></p><h5 id="ax-plot">ax.plot()</h5><ul><li><strong>x:</strong> x轴数据，列表或数组，可选参数，当我们在这个函数里，只展示一组数据时，x可省略。</li><li><strong>y：</strong> y轴数据，必须有。</li><li><strong>format_string：<strong>主要来控制我们画的曲线的格式：颜色，风格，标记，可取三者的组合如：“g-o”,“r-.D”,如果不用组合，则用</strong>color,marker,linestyle</strong>,三个参数分别指定。</li><li><strong>label：</strong> 添加图例的类标</li></ul><p><img src="/2023/10/02/python/Matplotlib/image-20231002213634834.png" alt="image-20231002213634834"></p><p><img src="/2023/10/02/python/Matplotlib/image-20231002213643577.png" alt="image-20231002213643577"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ax.plot(x,app,label=&quot;苹果&quot;)</span></span><br><span class="line">ax.plot(x,app,<span class="string">&quot;r-.d&quot;</span>,label=<span class="string">&quot;苹果&quot;</span>)<span class="comment">#在原来的基础上添加“r-.d”</span></span><br><span class="line">ban=[<span class="number">70</span>,<span class="number">80</span>,<span class="number">81</span>,<span class="number">82</span>,<span class="number">75</span>,<span class="number">90</span>,<span class="number">89</span>]</span><br><span class="line">ax.plot(x,ban,<span class="string">&quot;c-d&quot;</span>,label=<span class="string">&quot;香蕉&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/2023/10/02/python/Matplotlib/v2-ee768e0850f8a1773d38d932d15e6978_b.webp" alt="img"></p><h5 id="ax-text">ax.text()</h5><p>在图中指定位置添加标签</p><ul><li><strong>x,y：</strong> 放置text的位置，横纵坐标。</li><li><strong>s：</strong> str，text内容。</li><li><strong>fontsize：</strong> 设置字体大小，默认12，可选参数 [‘xx-small’, ‘x-small’, ‘small’, ‘medium’, ‘large’,‘x-large’, ‘xx-large’]</li><li>**fontweight：**设置字体粗细，可选参数 [‘light’, ‘normal’, ‘medium’, ‘semibold’, ‘bold’, ‘heavy’, ‘black’]</li><li><strong>alpha：</strong> 透明度，参数值0至1之间。</li><li><strong>rotation：</strong> (旋转角度)可选参数为:vertical,horizontal 也可以为数字。</li><li>**backgroundcolor：**背景颜色。</li><li><strong>color：</strong> 字体颜色</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ax.text(<span class="number">7</span>,<span class="number">97</span>,<span class="string">&quot;max:96&quot;</span>,fontsize=<span class="number">14</span>,color=<span class="string">&quot;g&quot;</span>,alpha=<span class="number">1</span>)</span><br><span class="line">ax.text(<span class="number">6</span>,<span class="number">86</span>,<span class="string">&quot;max:90&quot;</span>,fontsize=<span class="number">12</span>,alpha=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/2023/10/02/python/Matplotlib/v2-69e36e77a3b95d086fd8da8c4d008e82_b.webp" alt="img"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">plt.rcParams[<span class="string">&quot;font.family&quot;</span>]=<span class="string">&quot;SimHei&quot;</span></span><br><span class="line">app=[<span class="number">78</span>,<span class="number">80</span>,<span class="number">79</span>,<span class="number">81</span>,<span class="number">91</span>,<span class="number">95</span>,<span class="number">96</span>]</span><br><span class="line">ban=[<span class="number">70</span>,<span class="number">80</span>,<span class="number">81</span>,<span class="number">82</span>,<span class="number">75</span>,<span class="number">90</span>,<span class="number">89</span>]</span><br><span class="line">x=np.arange(<span class="number">1</span>,<span class="number">8</span>)</span><br><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ax=fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.plot(x,app,<span class="string">&quot;r-.d&quot;</span>,label=<span class="string">&quot;苹果&quot;</span>)</span><br><span class="line">ax.plot(x,ban,<span class="string">&quot;c-d&quot;</span>,label=<span class="string">&quot;香蕉&quot;</span>)</span><br><span class="line"></span><br><span class="line">ax.set_xlim([<span class="number">1</span>,<span class="number">7.1</span>])</span><br><span class="line">ax.set_ylim([<span class="number">40</span>,<span class="number">100</span>])</span><br><span class="line">ax.set_xticks(np.linspace(<span class="number">1</span>,<span class="number">7</span>,<span class="number">7</span>))</span><br><span class="line">ax.set_yticks(np.linspace(<span class="number">50</span>,<span class="number">100</span>,<span class="number">6</span>))<span class="comment">#可调控字体大小，样式，</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&quot;星期一&quot;</span>,<span class="string">&quot;星期二&quot;</span>,<span class="string">&quot;星期三&quot;</span>,<span class="string">&quot;星期四&quot;</span>,<span class="string">&quot;星期五&quot;</span>,<span class="string">&quot;星期六&quot;</span>,<span class="string">&quot;星期日&quot;</span>],fontproperties=<span class="string">&quot;SimHei&quot;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line">ax.set_yticklabels([<span class="string">&quot;50kg&quot;</span>,<span class="string">&quot;60kg&quot;</span>,<span class="string">&quot;70kg&quot;</span>,<span class="string">&quot;80kg&quot;</span>,<span class="string">&quot;90kg&quot;</span>,<span class="string">&quot;100kg&quot;</span>])</span><br><span class="line"></span><br><span class="line">ax.tick_params(left=<span class="literal">False</span>,pad=<span class="number">8</span>,direction=<span class="string">&quot;in&quot;</span>,length=<span class="number">2</span>,width=<span class="number">3</span>,color=<span class="string">&quot;b&quot;</span>,labelsize=<span class="number">12</span>)</span><br><span class="line">ax.tick_params(<span class="string">&quot;x&quot;</span>,labelrotation=<span class="number">10</span>)<span class="comment">#类标旋转</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#ax.set_xlabel(&quot;星期&quot;)#添加x轴坐标标签，后面看来没必要会删除它，这里只是为了演示一下。</span></span><br><span class="line">ax.set_ylabel(<span class="string">&quot;销售量&quot;</span>,fontsize=<span class="number">16</span>)<span class="comment">#添加y轴标签，设置字体大小为16，这里也可以设字体样式与颜色</span></span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&quot;某某水果店一周水果销售量统计图&quot;</span>,fontsize=<span class="number">18</span>,backgroundcolor=<span class="string">&#x27;#3c7f90&#x27;</span>,\</span><br><span class="line">fontweight=<span class="string">&#x27;bold&#x27;</span>,color=<span class="string">&#x27;white&#x27;</span>,verticalalignment=<span class="string">&quot;baseline&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ax.spines[&quot;left&quot;].set_color(&quot;darkblue&quot;)#设置左轴的颜色</span></span><br><span class="line"><span class="comment">#ax.spines[&quot;bottom&quot;].set_linewidth(2)#底轴线条宽度设置</span></span><br><span class="line"></span><br><span class="line">ax.spines[<span class="string">&quot;top&quot;</span>].set_visible(<span class="literal">False</span>)<span class="comment">#上轴不显示</span></span><br><span class="line">ax.spines[<span class="string">&quot;right&quot;</span>].set_visible(<span class="literal">False</span>)</span><br><span class="line">ax.spines[<span class="string">&quot;left&quot;</span>].set_visible(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">ax.text(<span class="number">7</span>,<span class="number">97</span>,<span class="string">&quot;max:96&quot;</span>,fontsize=<span class="number">14</span>,color=<span class="string">&quot;g&quot;</span>,alpha=<span class="number">1</span>)</span><br><span class="line">ax.text(<span class="number">6</span>,<span class="number">86</span>,<span class="string">&quot;max:90&quot;</span>,fontsize=<span class="number">12</span>,alpha=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ax.annotate(s=<span class="string">&quot;min:70&quot;</span>,xy=(<span class="number">1</span>,<span class="number">70</span>),xytext=(<span class="number">1.3</span>,<span class="number">66</span>),arrowprops=<span class="built_in">dict</span>(facecolor=<span class="string">&quot;y&quot;</span>,shrink=<span class="number">0.05</span>,\</span><br><span class="line">                                                              headwidth=<span class="number">12</span>,headlength=<span class="number">6</span>,width=<span class="number">4</span>\</span><br><span class="line">                                                                ),fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">ax.legend(loc=<span class="number">3</span>,labelspacing=<span class="number">1</span>,handlelength=<span class="number">3</span>,fontsize=<span class="number">14</span>,shadow=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="保存图片">保存图片</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br><span class="line">plt.bar(x, y, color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;figs/savefig_example.png&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Matplotlib使用说明&lt;/h1&gt;
&lt;h3 id=&quot;plt和ax&quot;&gt;plt和ax&lt;/h3&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数值分析NA(2)【23～24秋冬】</title>
    <link href="http://example.com/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-09-26T02:00:00.000Z</published>
    <updated>2023-10-11T02:43:58.607Z</updated>
    
    <content type="html"><![CDATA[<p>可以参考的博客：<a href="https://blog.csdn.net/weixin_41094315/article/details/112173761">https://blog.csdn.net/weixin_41094315/article/details/112173761</a></p><h3 id="The-Bisection-Method">The Bisection Method</h3><blockquote><p>由定理，连续区间的两个端点函数值异号，则在区间内存在点p，使f(p) = 0.</p></blockquote><p>To begin, set <em>a</em>1 = <em>a</em> and <em>b</em>1 = <em>b</em>, and let <em>p</em>1 be the midpoint of [<em>a</em>,<em>b</em>]; that is, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><mfrac><mrow><msub><mi>b</mi><mn>1</mn></msub><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><mn>2</mn></mfrac><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">p_1=a_1 +\frac{b_1−a_1}2 =\frac{a_1+b_1}2.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2412em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2412em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span></span></span></span></p><ul><li>If f(<em>p</em>1)=0, then <em>p</em>=<em>p</em>1, and we are done.</li><li>If f(<em>p</em>1) ≠ 0, then f(<em>p</em>1) has the same sign as either f(<em>a</em>1) or f(<em>b</em>1).<ul><li>If f(<em>p</em>1) and f(<em>a</em>1) have the same sign, <em>p</em> ∈ (<em>p</em>1,<em>b</em>1). Set <em>a</em>2 = <em>p</em>1 and <em>b</em>2 = <em>b</em>1.</li><li>If f(<em>p</em>1) and f(<em>a</em>1) have opposite signs, <em>p</em> ∈ (<em>a</em>1,<em>p</em>1). Set <em>a</em>2 = <em>a</em>1 and <em>b</em>2 = <em>p</em>1.</li></ul></li></ul><p>终止条件：</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>N</mi></msub><mo>−</mo><msub><mi>p</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">∣</mo><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\lvert p_N - p_{N-1}\rvert &lt; \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span><br>有情况：两项差很小，但数列发散的。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>N</mi></msub><mo>−</mo><msub><mi>p</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">∣</mo></mrow><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>N</mi></msub><mo stretchy="false">∣</mo></mrow></mfrac><mo>&lt;</mo><mi>ϵ</mi><mo separator="true">,</mo><msub><mi>p</mi><mi>N</mi></msub><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\lvert p_N - p_{N-1}\rvert}{\lvert p_N\rvert} &lt; \epsilon ,p_N \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span><span class="mclose mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2028em;"><span></span></span></span></span></span></span><span class="mclose mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span><br>is the <strong>best</strong> stopping criterion to apply because it comes closest to testing relative error.</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">∣</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">∣</mo><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\lvert f(p_N) \rvert &lt; \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span><br>It is also possible for f ( Pn ) to be close to zero while <em>Pn</em> differs significantly from <em>p</em></li></ol><p>收敛速率：可用来计算最少需要的迭代次数</p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926104129643.png" alt="image-20230926104129643"></p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926104239310.png" alt="image-20230926104239310"></p><div class="note info flat"><p>为什么代码计算中使用<code> a + (b-a) / 2</code> 而不是使用 <code>(a+b) / 2</code>?</p><ol><li><p>因为可能出现overflow</p></li><li><p>可能会导致二分法求得的中间值出有效区间<br>eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = 0.98 b = 0.99</span><br><span class="line">a+b = 1.97 -&gt; 2.00 or 1.9</span><br><span class="line">p = 1.0 or 0.95 会导致不在区间内</span><br></pre></td></tr></table></figure></li></ol></div><p>可以用符号函数运算代替直接计算：<br>用sgn(a) * sgn(b) 来替代 a * b简化运算</p><p>缺点：1.收敛速率固定 2.不能找到多个根</p><h3 id="Fixed-Point-Iterarion">Fixed-Point Iterarion</h3><blockquote><p>The number <em>p</em> is a <strong>fixed point</strong> for a given function <em>g</em> if <em>g</em>(<em>p</em>) = <em>p</em>.</p><p>即不动点！</p></blockquote><h5 id="存在定理image-20230926105631474">存在定理<img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926105631474.png" alt="image-20230926105631474"></h5><p>存在定理是一个充分条件，有时候导数值可能大于1，但也会存在不动点</p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230927145319499.png" alt="image-20230927145319499"></p><h5 id="迭代法">迭代法</h5><p>先构造数列 p~n~ = g(p~n-1~)，如果该数列收敛于p且g是连续的，那么几句会存在一个不动点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mi>g</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p = \lim_{n\to \infty}p_n = \lim_{n\to \infty}g(p_{n-1}) = g(\lim_{n\to \infty}p_{n-1} = g(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/IMG_4164.jpeg" alt="IMG_4164"></p><h5 id="不动点理论image-20230926110933993">不动点理论<img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926110933993.png" alt="image-20230926110933993"></h5><p><strong>证明该定理步骤：</strong></p><ol><li><p>存在不动点：由介值定理构造<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>−</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = x - g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>−</mo><mi>g</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f(a)= a- g(a) &lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi><mo>−</mo><mi>g</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f(b) = b - g(b)&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>异号，所以肯定存在一个零点</p></li><li><p>唯一的：如果存在两个不动点，由罗尔定理，则一定会存在一点使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f&#x27;(x_1) = 1 - g&#x27;(x_1) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>又因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">∣</mo><msup><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">∣</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lvert g&#x27;(x)\rvert &lt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，所以矛盾。</p><blockquote><p>前两步就是证明不动点存在定理</p></blockquote></li><li><p>收敛的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mrow><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>n</mi></msub><mo>−</mo><mi>p</mi><mo stretchy="false">∣</mo></mrow><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lim_{n\to\infty}{\lvert p_n - p \rvert} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>：使用中值定理+数列递推，可以推出极限存在</p><blockquote><p>这一步是证明</p></blockquote></li></ol><p>如果满足上述定理，</p><p><strong>两个式子</strong>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">∣</mo><mi>p</mi><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">∣</mo><mo>≤</mo><mfrac><msup><mi>k</mi><mi>n</mi></msup><mrow><mn>1</mn><mo>−</mo><mi>k</mi></mrow></mfrac><mo stretchy="false">∣</mo><msub><mi>p</mi><mn>1</mn></msub><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">∣</mo><mspace linebreak="newline"></mspace><mo stretchy="false">∣</mo><msub><mi>p</mi><mi>n</mi></msub><mo>−</mo><mi>p</mi><mo stretchy="false">∣</mo><mo>≤</mo><msup><mi>k</mi><mi>n</mi></msup><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><msub><mi>p</mi><mn>0</mn></msub><mo>−</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lvert p - p_n \rvert \leq \frac{k^n}{1-k}\lvert p_1 - p_0 \rvert \\\lvert p_n - p \rvert \leq k^n max\{p_0-a, b-p_0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1408em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><ol><li>在已知k的前提下，可以计算出所需精确度对应的迭代次数控制精确度</li><li>通过确定k，计算收敛速度。k越小，收敛越快。</li></ol><p><strong>判断迭代速率</strong>：</p><p>可以通过对迭代方程求导，然后代入不动点的值比较导数大小，越小的收敛速率越快。因为寻找不动点是在不动点旁的一个小区间内寻找，所以直接比较不动点的导数值应该也是可行的！</p><p>但是如果给定了近似区间，那么就要估计该区间上k的最大值，再进行比较？</p><h3 id="Newton‘s-Method-and-Its-Extensions">Newton‘s Method and Its Extensions</h3><p>思想：使用泰勒展开把非线性函数线性化</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>0</mn><mo>≈</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mi>f</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>n</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 \approx f(p_0) + (p-p_0)f&#x27;(p_0)\\p_n = p_{n-1} - \frac{f(p_{n-1})}{f&#x27;(p_{n-1})},for\ n\geq1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6779em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230927151518235.png" alt="image-20230927151518235"></p><p><strong>代码实现</strong></p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230927151549661.png" alt="image-20230927151549661"></p><p>对于牛顿法来说，初始展开点的选取十分重要，不然泰勒展开式中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(p - p_0)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>一项，就会变得不够小所以难以忽略。那么就引发了一下的定理，虽然存在一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>,使区间内都是可选的初始点，但是他是不易确定的，所以需要多次尝试。（建议可以把区间等分，然后不停地循环～循环～）</p><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926112329723.png" alt="image-20230926112329723"></p>]]></content>
    
    
    <summary type="html">Solutions of Equations in One Variable</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Numerical Analysis" scheme="http://example.com/tags/Numerical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据结构基础(2)【23-24秋冬】</title>
    <link href="http://example.com/2023/09/26/%E5%A4%A7%E4%BA%8C/FDS/2023-09-26-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/09/26/%E5%A4%A7%E4%BA%8C/FDS/2023-09-26-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-09-26T00:00:00.000Z</published>
    <updated>2023-09-27T07:47:35.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Compare-the-Algorithms">Compare the Algorithms</h3><p>最大子列和</p><ol><li><p>循环从0到N + 循环从i到N + 循环从i到j， 对于每一个起始位置、每一个终点位置求和</p></li><li><p>循环从0到N + 循环从i到N，每次都不停地往后加</p></li><li><p>Divide-Conquer</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">MaxSubSum</span><span class="params">( <span class="type">const</span> <span class="type">int</span> A[], <span class="type">int</span> left, <span class="type">int</span> right)</span>&#123;</span><br><span class="line">    <span class="type">int</span> MaxLeftSum, MaxRightSum;</span><br><span class="line">    <span class="type">int</span> MaxLeftBorderSum, MaxRightBorderSum;</span><br><span class="line">    <span class="type">int</span> LeftBorderSum, RightBorderSum;</span><br><span class="line">    <span class="type">int</span> Center;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (left == right)</span><br><span class="line">        <span class="keyword">if</span> (A[left] &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> A[left];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Center = (left + right) / <span class="number">2</span>;</span><br><span class="line">    MaxLeftSum = MaxSubSum(A, left, center);</span><br><span class="line">    MaxRightSum = MaxSubSum(A, center+<span class="number">1</span>, right);</span><br><span class="line">    MaxLeftBorderSum = <span class="number">0</span>;</span><br><span class="line">    LeftBorderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = Center; i &gt;= left; i--)&#123;</span><br><span class="line">        LeftBorderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span>(LeftBorderSum &gt; MaxLeftBorderSum)&#123;</span><br><span class="line">            MaxLeftBorderSum = LeftBorderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    RightBorderSum = <span class="number">0</span>;</span><br><span class="line">    MaxRightBorderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = Center; i &lt;= right; i++)&#123;</span><br><span class="line">        RightBorderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span>(RightBorderSum &gt; MaxRightBorderSum)&#123;</span><br><span class="line">            MaxRightBorderSum = RightBorderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Max3( MaxLeftSum, MaxRightSum, MaxLeftBorderSum + MaxRightBorder Sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">MaxSubsequenceSum</span><span class="params">( <span class="type">const</span> <span class="type">int</span> A[], <span class="type">int</span> N)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> MaxSubSum(A, <span class="number">0</span>, N<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>On-line<br>若出现小于零的Sum，则清空历史状态。</p></li></ol><h3 id="Logarithms-in-the-Running-Time">Logarithms in the Running Time</h3><p><strong>Binary Search</strong>: Worst case <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(N) = O(logN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p><p>对于一个搜索算法来说，最差的情况就是要找的数据中没有目标数据。</p><p><strong>Euclid‘s Algorithm</strong></p><p>Theorem: if M &gt; N, then M mod N &lt; M/2</p><p><strong>Exponentiation</strong></p><p>直接计算X的N次幂太过麻烦，因此我们可以对于偶数N，计算(X^N/2^)^2^，对于奇数N，计算(X^(N-1)/2^)^2^</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="type">int</span> <span class="title function_">Power</span><span class="params">( <span class="type">long</span> <span class="type">int</span> X, <span class="type">unsigned</span> <span class="type">int</span> N)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>( N ==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> X;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (N%<span class="number">2</span> ==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Power(X*X, N/<span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (N%<span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Power(X*X, N/<span class="number">2</span>) * X;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于第7行代码，若改为 <code>return Power( Power(X,2), N/2);</code> <code>return Power( Power(X, N/2), 2);</code>都是不正确的，因为当N=2时，会陷入死循环。</p><p>如何检查估计的正确性：</p><p>Method1: 运行程序</p><ul><li>O(N) 测试是否 T(2N)/T(N) = 2</li><li>O(N^2^) 测试是否 T(2N)/T(N) = 4</li></ul><p>Method2:</p><ul><li>T(N) = O(f(N)), check if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>N</mi><mo>→</mo><mi>inf</mi><mo>⁡</mo></mrow></msub><mfrac><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\lim_{N\to \inf} \frac{T(N)}{f(N)} = Constant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mrel mtight">→</span><span class="mop mtight"><span class="mtight">i</span><span class="mtight">n</span><span class="mtight" style="margin-right:0.07778em;">f</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">t</span></span></span></span></li></ul><h2 id="Ch3-Lists-Stacks-Queues">Ch3 Lists, Stacks Queues</h2><h3 id="Abstract-Data-Type-ADT">Abstract Data Type(ADT)</h3><p>Data type = Operators + Objects</p><p>ADT只关心定义（specification），描述这个Data Type是什么样的，不关心实现（implementation）。无论是用int、float、char等等，我都不关心！</p><h4 id="List">List</h4><p>Objects:(item0, item1, … , itemN-1)</p><p>Operations:</p><ul><li><p>Finding the length, N, of a list.</p></li><li><p>Printing all the items in a list.</p></li><li><p>Making an empty list.</p></li><li><p>Finding the k-th item from a list, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">0  \leq k &lt; N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>.</p></li><li><p>Inserting a new item <strong>after</strong> the k-th item of a list, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">0 \leq k &lt; N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>.</p><blockquote><p>为什么不能插入在第K个前面？插入在第k个后面只是一种约定俗成的形式。</p></blockquote></li><li><p>Deleting an item from a list.</p></li><li><p>Finding next of the current item from a list.</p></li><li><p>Finding previous of the current item from a list.</p></li></ul><h5 id="Simply-Array-implementation">Simply Array implementation</h5><ul><li><p>MaxSize必须得提前知道</p></li><li><p>查找第K个元素操作只需要O（1）</p></li><li><p>查找操作需要O（N）</p></li><li><p>插入和删除需要O（N）</p><blockquote><p>对于如果插入在第0个（也就是在列表开头新增一个元素），那么复杂度就是最糟糕的情况需要N次操作，将后面的其他元素后移一位。同样的，删除第0个元素，也需要N次操作：删除一个元素、移动剩下N-1个元素。</p></blockquote></li></ul><h5 id="Linked-Lists">Linked Lists</h5><ul><li>查找需要O（N）</li><li>插入和删除需要O（1），在已经找到目标地点的前提下。</li></ul><p>删除第一项具有一些问题：1.根据定义没有给出相关操作 2.很可能造成链表丢失。<br>解决方法：使用一个sentinel node，有时被称为header 或 dummy node。<br>还要注意一些内存问题：1.每次运行同一个程序，由于动态内存的分配机制，相同数据可能会在不同的地址。 2.清空链表时，要先标记下一个节点，再清空上一个节点。</p><p>其他形式的链表：</p><ol><li>Doubly Linked Lists</li><li>Circularly Linked Lists</li></ol><p><img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/FDS/2023-09-26-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926155411883.png" alt="image-20230926155411883"></p><p>具体例子：</p><ol><li><p>多项式表示</p><ol><li><p>一个结点表示一个多项式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> CoeffArray[MaxDegree + <span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> HighPower;</span><br><span class="line">&#125; *Polynomial;</span><br></pre></td></tr></table></figure><p>当计算加法或者乘法的时候，需要遍历每一个系数，但实际情况中可能有很多0系数，所以这种表示形式的计算量非常大且无用。</p></li><li><p>一个结点表示一个项</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> Coefficient;</span><br><span class="line">    <span class="type">int</span> Exponent;</span><br><span class="line">    PtrToNode Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode Polynomial;</span><br></pre></td></tr></table></figure><p>这种数据结构可以使加法和乘法只计算非0系数。</p></li></ol></li><li><p>Radix Sort<br>按照各个位排序，每次排序后整理出新的数组（已经部分排好序了），重复到所有位被排完。<br><a href="https://www.cnblogs.com/nufangrensheng/p/3593282.html">https://www.cnblogs.com/nufangrensheng/p/3593282.html</a></p></li><li><p>Multilists</p><p>避免过多0造成空间浪费。<img src="/2023/09/26/%E5%A4%A7%E4%BA%8C/FDS/2023-09-26-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E3%80%9023-24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926162948704.png" alt="image-20230926162948704"></p></li></ol><p>Cursor Implementation</p><p>主要思想：先确定链表的大小，用一个结构数组来存放各个被数组下标唯一确定的结点，根据结构内的position数据确定下个结点的标号。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ptr_to_node;</span><br><span class="line"><span class="keyword">typedef</span> ptr_to_node <span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">typedef</span> ptr_to_node position;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    element_type element;</span><br><span class="line">    position next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">cursor_space</span>[<span class="title">spacesize</span>];</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>Slot</th><th>Element</th><th>Next</th></tr></thead><tbody><tr><td>0</td><td></td><td>1</td></tr><tr><td>1</td><td></td><td>2</td></tr><tr><td>2</td><td></td><td>3</td></tr><tr><td>3</td><td></td><td>4</td></tr><tr><td>4</td><td></td><td>5</td></tr><tr><td>5</td><td></td><td>0</td></tr></tbody></table><ul><li>next为0意味着next结点为NULL</li><li>slot 0 存储零一个freelist，标识现在有哪些slot是可供使用（Alloc）的。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> position <span class="title function_">cursor_alloc</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    position p;</span><br><span class="line">    p = cursor_space[<span class="number">0</span>].next;</span><br><span class="line">    cursor_space[<span class="number">0</span>].next = cursor_space[p].next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">cursor_free</span><span class="params">(position p)</span></span><br><span class="line">&#123;</span><br><span class="line">    cursor_space[p].next = cursor_space[<span class="number">0</span>].next;</span><br><span class="line">    cursor_space[<span class="number">0</span>].next = p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>Slot</th><th>Element</th><th>Next</th></tr></thead><tbody><tr><td>0</td><td>-</td><td>4</td></tr><tr><td>1</td><td>-</td><td>0</td></tr><tr><td>2</td><td>header</td><td>5</td></tr><tr><td>3</td><td>b</td><td>0</td></tr><tr><td>4</td><td>-</td><td>1</td></tr><tr><td>5</td><td>a</td><td>3</td></tr></tbody></table><p>该表格表示目前的空间由两条链表构成，一条已使用的链表、一条空链表。<br>已使用的：header(2) -&gt; a(5) -&gt; b(3) -&gt; NULL(0)<br>空链表：cursor_space[0] -&gt; cursor_space[4] -&gt; cursor_space[1] -&gt; NULL</p><p><a href="https://www.cnblogs.com/nufangrensheng/p/3594844.html">https://www.cnblogs.com/nufangrensheng/p/3594844.html</a></p>]]></content>
    
    
    <summary type="html">浙江大学数据结构基础课程笔记。</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Fundamental Data Structure" scheme="http://example.com/tags/Fundamental-Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>宏观经济学(2)【23～24秋冬】</title>
    <link href="http://example.com/2023/09/25/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/09/25/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-09-25T11:10:00.000Z</published>
    <updated>2023-10-04T02:13:44.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="宏观经济的基本指标及其衡量">宏观经济的基本指标及其衡量</h2><h3 id="国内生产总值">国内生产总值</h3><h4 id="一、GDP的含义">一、GDP的含义</h4><h5 id="两种不同的核算体系">两种不同的核算体系</h5><ol><li>物质产品平衡表体系（system of material product balance）：MPS</li><li>国民经济核算体系（system of national accounting）：SNA被联合国确定为各个国家都必须遵循的。</li></ol><h5 id="GDP（国内生产总值）">GDP（国内生产总值）</h5><blockquote><p>GDP一定时期内在一国（或地区）境内生产的所有最终产品与服务的市场价值总和。</p></blockquote><ol><li><p>GDP是一个市场价值的概念。</p><blockquote><p>现实经济中不同类产品和服务的实物量不能加总。</p></blockquote></li><li><p>GDP衡量的是最终产品和服务的价值，中间产品和服务价值不计入GDP。</p><blockquote><p>最终产品是供人们直接使用和消费，不再转卖的产品和服务。</p><p>对于一辆小汽车来说，轮胎的货币价值不计入GDP。</p><p>中间产品作为生产投入品，不能直接使用和消费的产品和服务。</p></blockquote></li><li><p>GDP是一国（或地区）范围内生产的最终产品和服务的市场价值。讲求属地原则，不按国民原则！</p><blockquote><p>只有在指定的国家或地区生产出来的才被计算。美国公司在中国生产的产品，市场价值应该记入中国的GDP。<br>所以才会有<strong>招商引资</strong></p><p>基准地价：一个地区的平均价格，用来计算土地拍卖的底价。对于工业用地，会定出比较低的地价来吸引工厂。</p></blockquote></li><li><p>GDP衡量的是一定时间内的产品和服务的价值。</p><blockquote><p>GDP是流量不是存量。<br>eg发生洪灾会把目前的存量给摧毁掉，但是会对流量（GDP）有极大的提升</p></blockquote></li></ol><p>只要被生产出来，就要被记入GDP，无论是否被消费掉。</p><ul><li>对于<strong>生产</strong>的解释。<br>打麻将赌钱没有记入GDP，股票的二级市场没有记入GDP（佣金除外）。因为这些都没有实际生产的产品。<br>eg赌博个人间钱财流动不计入GDP，因为单纯货币的转移并没有创造财富。像二手交易这种纯资产转移，也不会计入到GDP中。<br>即没有通过生产创造出价值）<br>eg房地产开发建好房子后会以当前市场价直接纳入GDP，即使第二年以更高的价格卖出，仍然不计入GDP。</li></ul><h4 id="二、GDP的衡量">二、GDP的衡量</h4><h5 id="三种方法">三种方法</h5><ol><li><p>生产法（增值法）</p><blockquote><p>有点麻烦，必须把一条产业链上每个企业的增加值全部都算清楚。</p></blockquote></li><li><p>收入法</p><blockquote><p>用要素（生产产品与服务时所使用的生产要素的成本）收入即<strong>企业生产成本</strong>核算GDP的一种方法。这需要收集：劳动工资、资本利息、土地租金以及资本家才能利润的数据。（思路：一分产出一份收入）</p><p>eg根据增值法，汽车零售商的增值就是汽车销售收入和批发成本的差额，这些差额必定会成为某些人的收入。包括:汽车零售商支付给销售人员和技工的工资、租金、贷款利息、利润。这样，全部增值以工资、租金、利息和利润的形式 出现在收入流中。</p><p>收入被分为两大类：</p><ol><li>工资收入</li><li>利息、租金和利润收入，是资本、土地和企业家才能所带来的总收入。</li></ol><p>以上的收入加总被称为<strong>国内生产净值</strong>（NDP）</p><p>但是还要做出以下调整：</p><ol><li>从要素成本到生产价格：市场价格和要素成本间相差间接税和补助金</li><li>从净产值到总产值：国内生产净值和GDP的区别在于折旧，折旧来自资本品的使用和报废所导致的资本价值的损耗。</li></ol><p>所以收入法就是<br>GDP = 工资+利息+利润+租金+折旧+间接税 - 补助金</p></blockquote><p>但还是太麻烦，所以提出了新的方法 GDP = C（消费） + S（储蓄） + T（税收）也就是 Y = C + S + T</p><ul><li><p>ps:GDP不是一个完美的计算方法。例如家庭主妇产生的服务价值难以衡量、小额的服务价值不会去报税就也难以计入GDP。</p></li><li><p>人民银行有个衡量“手持现金”的方法，可以较为准确地预测储蓄量</p></li><li><p>税收一般情况下不会造假</p></li></ul></li><li><p>支出法</p><blockquote><p>支出法是通过衡量在一定时期内整个社会 购买最终产品和服务的总支出来核算GDP的一种方法。</p><p>Y = C + I + G + NX</p></blockquote><p>可以把一国划分为：家庭部门、企业部门、政府部门、国际部门<br>（最简单是两部门经济——家庭+企业，再把政府引进，最后引进国际）<br><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230925195230847.png" alt="image-20230925195230847"></p><ul><li><p>家庭部门对最终产品和服务等支出称为消费支出，简称消费（C)</p><ul><li>分为耐用消费品、非耐用消费品、劳务消费</li></ul></li><li><p>企业部门的支出称为投资支出，简称投资(I)</p><blockquote><p>投资是一定时期(如一年)增加到资本存量上的新的资本流量。资本存量指在经济中生产性资本的物质总量，包括厂房、设备、存货和住宅等。资本存量的增加是投资的结果。</p></blockquote><ul><li><p>总投资 = 净投资 + 折旧</p><blockquote><p>折旧 / 重置投资：由于资本存量不断被消耗，为了补偿或重新置换已消耗掉的资本，企业投资产生的支出</p></blockquote></li><li><p>总投资还可分为<strong>固定投资</strong>（对新厂房、机器设备和住宅的购买，用于经营活动的建筑物和设备方面的投资。固定指的是这种类型的投资将持续一段时间）和<strong>存货投资</strong>（指企业持有的存货价值的变化）。当年存货投资**=<strong>当年年终存货价值</strong>-**上年年终存货价值</p><blockquote><p>房价不算入消费，只有租房才算入消费。</p><p>没卖掉的房子算投资。（存货）也就是企业自己生产出来又没卖掉的产品。换句话说，我虽然积压了一些货物没卖出，我可以把他们看作是自己的投资，这些物品可能在将来获得价值提升。</p><p>研发费用作为一种投资，也被纳入GDP。</p></blockquote></li></ul></li><li><p>政府部门购买产品和服务的支出定义为政府购买(<strong>G</strong>)</p><blockquote><p>包括政府提供国防、修建道路、开办学校等。</p><p>政府支出包括<strong>政府购买</strong>（购买打印机、出差消费、修地铁）和<strong>政府转移支付</strong>。</p><p>但政府转移支付是对收入的再分配，并不直接用于交换产品和服务，所以不构成GDP的一部分。</p><p>无法长期拉动经济增长，但在短期可以起到一定效果</p></blockquote></li><li><p>为衡量国际部门对一国产品和服务的支出，通常引入净出口(<strong>NX</strong>)这一概念。</p><blockquote><p>净出口定义为出口额与进口额的差额。出口额(X)是 指本国向国际部门提供的产品和服务的总价值;进口额 (M)是指从国际部门输入到本国的产品和服务的总价值。因此，对国际部门而言，只有净出口应计入总支出。</p></blockquote><p>NX = X-M<br>NX&gt;0 贸易盈余、贸易顺差<br>NX=0 贸易平衡<br>NX&lt;0 贸易赤字、贸易逆差</p></li><li><p>三驾马车拉动经济增长：消费、投资、进出口</p><blockquote><p>因为政府购买的支出无法长期拉动经济增长，所以并不算在内</p></blockquote></li></ul></li></ol><p>从广义的角度看，宏观经济中的产出、收入与支出是完全等值的，即:<strong>总产出≡总收入≡总支出</strong></p><h4 id="三、名义GDP与实际GDP">三、名义GDP与实际GDP</h4><blockquote><p>名义GDP是指以现行市场价格计算的既定时期国内总产品和服务的价格总和。</p><p>实际GDP是指在相同的价格或货币值保持不变的条件下，不同时期所生产的全部产出的实际值（要选定一组基年价格，用基年价格来给每年不同的产品估值，然后把产品和服务价值加总）</p></blockquote><p>名义GDP的上升可能是因为价格上升，也可能是因为产量上升以及产量和价格都上升。</p><p><strong>购买力平价（purchasing power parity）</strong>：以实际购买力计算的两个国家不同货币之间的比例。</p><h4 id="四、与GDP相关的其他指标">四、与GDP相关的其他指标</h4><p><strong>国民生产总值（GNP）</strong>：经济社会（一国或一地区）成员在一定时期运用生产要素所生产的全部最终产品和服务的市场价值。</p><blockquote><p>难以计算，并且不能表示当地的经济发展</p></blockquote><p>GNP = GDP + 来自国外的要素报酬 - 支付给国外的要素报酬</p><p>减去折旧：国民净产值（NNP）、国内净产值（NDP）</p><blockquote><p>NNP = GNP - 折旧</p></blockquote><p>减去间接税：国民收入（NI）</p><blockquote><p>NI = NNP - 间接税 （+ 补助金 - 企业专业支付）<br>NI = NNP - 统计误差</p></blockquote><p>减去公司未分配利润、公司所得税、社会保险税，加转移支付：个人收入（PI）</p><blockquote><p>个人收入（PI）＝国民收入－公司未分配利润－社会保险税－净利息＋红利＋政府向个人的转移支付＋个人利息收入</p></blockquote><p>减去个人所得税：个人可支配收入（DPI）</p><blockquote><p>个人可支配收入（DPI）＝个人收入－个人税收支付</p></blockquote><p>德国和法国是欧洲经济发展的引擎。</p>]]></content>
    
    
    <summary type="html">第九章-宏观经济的基本指标及其衡量</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="宏经" scheme="http://example.com/tags/%E5%AE%8F%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑设计(2)【23～24秋冬】</title>
    <link href="http://example.com/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-09-25T05:25:00.000Z</published>
    <updated>2023-10-16T05:55:47.216Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NumberSystem-and-Codes">NumberSystem and Codes</h3><h4 id="NumberSystem">NumberSystem</h4><p>二进制、十进制、八进制、十六进制</p><p>三个重要因素：radix(进制)、cardinality(基数)、weight(权重，即某个digit在某一位)</p><p><strong>representation</strong></p><p>most significant digit 最左边的</p><p>least significant digit 小数点后最右边的，若没有则为A0</p><p>$ (N)<em>R = (A</em>{n-1}A_{n-2}\ldots A_1A_0 \cdot A_{-1}A_{-2}\ldots A_{-m+1}A_{m})$</p><p><strong>conversion</strong>(2, 8, 16)</p><ol><li>the right expansion method</li><li>fractional shift method</li><li>digital replace method(4位一组 二进制到十六进制)</li></ol><p><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230925142058971.png" alt="image-20230925142058971"></p><h4 id="Codes">Codes</h4><h5 id="Binary-Coding">Binary Coding</h5><p>信息分类</p><ul><li>Numeric: 表示数据范围、能够直白简单地计算、和二进制数关系紧密</li><li>Non-numeric：有很大的设计灵活性因为没有算法操作在这些信息上、和二进制数联系不紧密<br>eg<strong>颜色编码</strong><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230925143653951.png" alt="image-20230925143653951"></li></ul><p>M个元素需要被一种二进制编码表示，最少的位数n被需要，他们满足以下关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>≥</mo><mi>M</mi><mo>&gt;</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak="newline"></mspace><mi>n</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>M</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2^n \geq M &gt; 2^{n-1} \\n = \lceil log_2M \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8504em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span></span></span></span></span></p><p>给定n个digits，在radix r，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>r</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>个不同的元素可以被表示</p><p>Codes和Conversion有区别！</p><p>Conversion：$ (13)_{10} = (1101)_2$</p><p>Codes(编码): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>13</mn><mo>=</mo><mn>0001</mn><mtext> </mtext><mn>0011</mn></mrow><annotation encoding="application/x-tex">13 = 0001\ 0011</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">13</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0001</span><span class="mspace"> </span><span class="mord">0011</span></span></span></span> 这是某一种对13的编码，0和1都不能省去。 例如还有ASCII编码、校验位</p><p><strong>BCD(Binary Coded Decimal) Arithmetic</strong></p><p>进行加法时，如果当前位&gt;9，则要额外加6</p><p><strong>Parity Bit</strong></p><p>偶校验（even parity）：如果字符编码中1的个数为偶数，校验位（redundancy）为0。（即要把1的个数凑到偶数个）</p><blockquote><p>111_ -&gt; 1111</p></blockquote><p>奇校验：如果字符编码中1个个数为奇数，校验位为0。</p><blockquote><p>111_ -&gt; 1110</p></blockquote><p><strong>Gray Code</strong></p><blockquote><p>向上或向下计数时，只改变一个二进制值！</p><p>可以有多种对映方式，即编码的结果不唯一，但是都是符合性质的。</p></blockquote><p>老师提供的解法：每次翻倍的时候，把原本的后几位镜像对称，然后把上部分首位加0，下部分首位加1。</p><p>书中的解法：对于n（偶数）个要编码的数，先取n/2个二进制数，设左边最高位为0，然后从左往右各位依次取原二进制编码的每一位与他左边相邻位的偶校验。eg对于0100的Gray code，0，parity（0，1），parity（1，0），parity（0，0）所以结果就是0110。接着再将已构成的Gray code逆序排列（镜像），将左边最高位设置为1.对于数值在0～2^n^-1范围的二进制编码，可以保留原二进制码的左边最高位，剩下的由原二进制码各位与左边相邻位的奇校验构成。</p><p><strong>Character</strong></p><p>UTF-8 UTF-16 UTF 32</p><ul><li>UTF-8的single byte是和ASCII兼容的。</li><li>头几位的1表明了是多少bytes编码的UTF，中间byte的10可以有效避免接收到错误信息。因为如果接收到了10，可以直接把该数据丢掉。</li></ul><p><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230925142337933.png" alt="image-20230925142337933"></p><h3 id="Binary-Logic-and-Gates">Binary Logic and Gates</h3><ul><li><p>Binary Logic：</p><ul><li><p>Binary variables</p></li><li><p>logic operators：操作在二进制变量上的</p></li></ul></li><li><p>Logic Gates：用来执行logic function</p><blockquote><p>早期电脑中，开关被由relays（继电器）产生的磁场控制。开关反过来开关电路。</p><p>后来，换成了真空管(vacuum tubes)</p><p>如今，晶体管(transistors)被使用来开关电路</p></blockquote></li><li><p>Boolean algebra</p><ul><li>或运算：+</li><li>与运算：·</li><li>XOR<br><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926075052449.png" alt="image-20230926075052449"></li></ul></li><li><p>Truth table</p></li></ul><p><strong>Gate Delay</strong>:传播时会有延迟。输入变化和输出变化之间的时间差是gate delay，即t~G~</p><p>AND-OR-INVERT(AOI 4-2-1)<br><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926075105410.png" alt="image-20230926075105410"></p><p><strong>verilog语法</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> fig2_5 (L, D, X, A);</span><br><span class="line">    <span class="keyword">input</span> D, X, A;</span><br><span class="line">    <span class="keyword">output</span> L;</span><br><span class="line">    <span class="keyword">wire</span> X_n, t2;</span><br><span class="line">    <span class="keyword">not</span> (X_n, X); <span class="comment">//not(输出, 输入);</span></span><br><span class="line">    <span class="keyword">and</span> (t2, D, X_n);</span><br><span class="line">    <span class="keyword">or</span> (L, t2, A);</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Boolean Algebra Representation</strong></p><ul><li>single-output Boolean funciton一个表达式只有一个output</li><li>表达性是由二值变量（binary variables）、常数（0或1）、逻辑运算符和括号构成。函数的expression不唯一。</li><li>但一个表达式只对应唯一一个真值表。</li></ul><p><strong>等式定律</strong></p><p><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926075011184.png" alt="image-20230926075011184"></p><p>Complementing function（反函数）</p><blockquote><p>交换AND和OR，把常数和literal求补</p></blockquote><ol><li>优先级保持不变，有必要时需要添加括号（brackets）</li><li>公共的取反操作（public non-operation）保持不变</li></ol><p>Duality rules（对偶函数）</p><blockquote><p>交换AND和OR，交换0和1，其他变量不变</p></blockquote><p>性质：如果F‘是F的对偶式，那么F也是F’的对偶式。<br>应用：如果F和G相等，那么对偶公式F’和G‘也相等</p><p>Dual Principal：表达式等号两边同时取对偶，则布尔等式依然成立。</p><p><strong>其他理论</strong></p><p><img src="/2023/09/25/%E5%A4%A7%E4%BA%8C/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1(2)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230926075732446.png" alt="image-20230926075732446"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;NumberSystem-and-Codes&quot;&gt;NumberSystem and Codes&lt;/h3&gt;
&lt;h4 id=&quot;NumberSystem&quot;&gt;NumberSystem&lt;/h4&gt;
&lt;p&gt;二进制、十进制、八进制、十六进制&lt;/p&gt;
&lt;p&gt;三个重要因素：radix(</summary>
      
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数逻" scheme="http://example.com/tags/%E6%95%B0%E9%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>数值分析NA(1)【23～24秋冬】</title>
    <link href="http://example.com/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/"/>
    <id>http://example.com/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/</id>
    <published>2023-09-23T11:20:30.000Z</published>
    <updated>2023-09-27T07:46:27.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-2-Roundoff-errors-and-Computer-Arithmetic">1.2 Roundoff errors and Computer Arithmetic</h2><h3 id="Roundoff-errors">Roundoff errors</h3><h4 id="Roundoff-Truncation">Roundoff &amp; Truncation</h4><p>通过逼近（Approximation）和变换（transformation）来获得较好的结果</p><ul><li><p>逼近：把运算逼近成加减乘除去算，使复杂计算能够简单完成</p></li><li><p>变换：把大数乘法转换为对数加法</p></li></ul><p>Roundoff Errors(舍入误差)</p><p>ex 计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msup><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_0^1e^{-x^2}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.009em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></p><ol><li>通过泰勒展开来估算：但是要选择在哪个点展开、在哪个项截断（这个会带来逼近的误差）</li><li>通过余项估计界</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msup><mi>d</mi><mi>x</mi><mo>≈</mo><msub><mi>S</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>10</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mn>42</mn></mfrac><mo>≈</mo><mn>0.743</mn></mrow><annotation encoding="application/x-tex">\int_0^1e^{-x^2}dx \approx S_4 = 1 - \frac13 + \frac1{10} - \frac1{42} \approx 0.743</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.009em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">42</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.743</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">∣</mo><msub><mi>R</mi><mn>4</mn></msub><mo stretchy="false">∣</mo><mo>=</mo><mo stretchy="false">∣</mo><mfrac><mn>1</mn><mrow><mn>4</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>∗</mo><mfrac><mn>1</mn><mn>9</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mrow><mn>5</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>∗</mo><mfrac><mn>1</mn><mn>11</mn></mfrac><mo>+</mo><mo>⋯</mo><mo stretchy="false">∣</mo><mo>&lt;</mo><mfrac><mn>1</mn><mrow><mn>4</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>∗</mo><mfrac><mn>1</mn><mn>9</mn></mfrac><mo>&lt;</mo><mn>0.005</mn></mrow><annotation encoding="application/x-tex">\lvert R_4 \rvert = \lvert \frac1{4!}*\frac19-\frac1{5!}*\frac1{11} + \cdots \rvert &lt; \frac1{4!}*\frac19 &lt; 0.005</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mopen">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner">⋯</span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.005</span></span></span></span></p><p>有两种误差在这次计算中</p><ol><li><p>舍入误差，因为用了0.333逼近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac13</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，0.024逼近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>42</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac1{42}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">42</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，舍入误差是（小于）0.001</p><blockquote><p>Roundoff Error: the error produced when performing real number calculations. It occurs because the arithmetic performed in a machine involves numbers with only a finite number of digits.</p></blockquote></li><li><p>截断误差（truncation error），公式中扔掉的项，误差小于0.005</p><blockquote><p>Truncation Error: the error involved in using a truncated or finite summation to approximate the sum of an infinite series.</p></blockquote></li></ol><p>总误差是小于0.006的，这就是误差界</p><h4 id="k-digit-decimal-machine-number">k-digit decimal machine number</h4><p>Normalized decimal floating-point form of a real number:</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><msub><mi>d</mi><mi>k</mi></msub><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">0.d_1d_2\dots d_k \times 10^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mn>1</mn><mo>≤</mo><msub><mi>d</mi><mn>1</mn></msub><mo>≤</mo><mn>9</mn><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mn>0</mn><mo>≤</mo><msub><mi>d</mi><mi>i</mi></msub><mo>≤</mo><mn>9</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">where\ 1\leq d_1 \leq 9\ and\ 0\leq d_i \leq 9\ (i = 2,\dots ,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span><span class="mord mathnormal">ere</span><span class="mspace"> </span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord">9</span><span class="mspace"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></p><p>K表示了有效的字符位数，n可以为任意的数。</p></blockquote><p>d1后的0有意义，但是d1前没意义。因为前者能规范精确度，但是后者可以移到幂次里。</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><msub><mi>d</mi><mi>k</mi></msub><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>⋯</mo><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">y = 0.d_1d_2\dots d_k d_{k+1} d_{k+2} \dots \times 10^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><p>位数太多时不能够表达的，我们有几种简化的方法，第一种是chopping即直接舍去，第二种是rounding即四舍五入。</p><div class="note flat"><p>mantissa: the fraction</p><p>characteristic: the exponent</p></div><h4 id="absolute-relative">absolute &amp; relative</h4><blockquote><p>absolute error: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">∣</mo><mi>p</mi><mo>−</mo><msup><mi>p</mi><mo>∗</mo></msup><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">\lvert p - p ^* \rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span></p><p>relative error: $\frac{\lvert p - p^*\rvert}{\lvert p \rvert } $</p><p>(有效位数)significant digits: t是最大的非负整数使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mo stretchy="false">∣</mo><mi>p</mi><mo>−</mo><msup><mi>p</mi><mo>∗</mo></msup><mo stretchy="false">∣</mo></mrow><mrow><mo stretchy="false">∣</mo><mi>p</mi><mo stretchy="false">∣</mo></mrow></mfrac><mo>&lt;</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{\lvert p - p^*\rvert}{\lvert p \rvert } &lt; 5 \times 10^{-t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5393em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0193em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">∣</span><span class="mord mathnormal mtight">p</span><span class="mclose mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">∣</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7633em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7936em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span>成立</p></blockquote><p>当significant digits固定时，如果p越大，那么绝对误差的范围也可以越大。也就是说，对于很大的数组，误差也可以变得数字很大，但精度依然准确。</p><p>对于一个chopping的浮点数，他的相对误差是</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">∣</mo><mfrac><mrow><mi>y</mi><mo>−</mo><mi>f</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mi>y</mi></mfrac><mo stretchy="false">∣</mo><mo>=</mo><mo stretchy="false">∣</mo><mfrac><mrow><mi>y</mi><mo>=</mo><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><msub><mi>d</mi><mi>k</mi></msub><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>…</mo><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup><mo>−</mo><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><msub><mi>d</mi><mi>k</mi></msub><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup></mrow><mrow><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup></mrow></mfrac><mo stretchy="false">∣</mo><mspace linebreak="newline"></mspace><mo>=</mo><mo stretchy="false">∣</mo><mfrac><mrow><mn>0.</mn><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>d</mi><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>…</mo><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><mrow><mn>0.</mn><msub><mi>d</mi><mn>1</mn></msub><msub><mi>d</mi><mn>2</mn></msub><mo>…</mo><mo>×</mo><mn>1</mn><msup><mn>0</mn><mi>n</mi></msup></mrow></mfrac><mo stretchy="false">∣</mo><mo>≤</mo><mfrac><mn>1</mn><mn>0.1</mn></mfrac><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\lvert \frac{y-fl(y)}{y}\rvert = \lvert \frac{y = 0.d_1d_2\dots d_k d_{k+1} d_{k+2} \ldots \times 10^n -  0.d_1d_2\ldots d_k\times 10^n}{0.d_1d_2\ldots \times 10^n}\rvert \\= \lvert \frac{0.d_{k+1}d_{k+2}\ldots \times 10^{n-k}}{0.d_1d_2\ldots \times 10^n}\rvert \leq \frac1{0.1} \times 10^{-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mopen">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2074em;vertical-align:-0.836em;"></span><span class="mopen">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">∣</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3621em;vertical-align:-0.836em;"></span><span class="mopen">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>估计误差常用缩放，分母(denominator)可以最小是0.1，分子(numeritor)最大可以是1</p><p>对于rounding，因为四舍五入，分子的最大误差不会超过0.5，最后结果为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">∣</mo><mfrac><mrow><mi>y</mi><mo>−</mo><mi>f</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mi>y</mi></mfrac><mo stretchy="false">∣</mo><mo>≤</mo><mfrac><mn>0.5</mn><mn>0.1</mn></mfrac><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\lvert \frac{y-fl(y)}{y}\rvert \leq \frac{0.5}{0.1} \times 10^{-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mopen">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>上面这些都是<strong>表达的误差</strong></p><h4 id="Roundoff的影响">Roundoff的影响</h4><blockquote><p>Subtraction of nearly equal numbers will cause a cancellation of significant digits.</p><p>Dividing by a number with small magnitude (or, equivalently, multiplying by a number with large magnitude) will cause an enlargement of the error.</p></blockquote><p>eg: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mn>0.12345</mn></mrow><annotation encoding="application/x-tex">a_1 = 0.12345</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.12345</span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>0.12345</mn></mrow><annotation encoding="application/x-tex">a_2 = 0.12345</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.12345</span></span></span></span>都有五个有效数字，但相减后<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mn>0.00001</mn></mrow><annotation encoding="application/x-tex">a_2 - a_1 = 0.00001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.00001</span></span></span></span>只有一位有效数字。</p><div class="note warning flat"><p>有效数字越少，相对误差越大。</p><p>在运算的过程中，误差会改变。</p></div><h3 id="Computer-arithmatic">Computer arithmatic</h3><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923195404793.png" alt="image-20230923195404793"></p><p>这两种都有5% / 6% 的误差，远超5*10^-3^，也就是说，这个近似值不够准确！</p><p>秦九韶算法(Horner’s method)一种解决方案：$ f(x) = x^3 - 6.1x^2 + 3.2x + 1.5 = ((x-6.1)x + 3.2)x + 1.5$</p><p>把乘法变少，增加加法运算，能够极大减小误差到0.45% 或0.25%</p><blockquote><p>Polynomials should always be expressed in <strong>nested form</strong> before performing an evaluation, because this form minimizes the number of arithmetic calculations.</p><p>The decreased error in the Illustration is due to the reduction in computations from four multiplications and three additions to two multiplications and three additions.</p><p>One way to reduce round-off error is to reduce the number of computations.</p></blockquote><h2 id="1-3-Algorithms-and-Convergence">1.3 Algorithms and Convergence</h2><blockquote><p>稳定性：An algorithm that satisfies that small changes in the initial data produce correspondingly small changes in the final results is called <strong>stable</strong>; otherwise it is <strong>unstable</strong>.<br>An algorithm is called <strong>conditionally stable</strong> if it is stable only for certain choices of initial data.</p><p>x输入的小变动，会导致小变动则是稳定的。如果会导致很大的变动则是不稳定的。也就是对误差的放大。</p><p>Suppose that <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>0</mn></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E_0 &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>denotes an initial error and En represents the magnitude of an error after n subsequent operations. If <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>n</mi><mo>≈</mo><mi>C</mi><mo>∗</mo><mi>n</mi><mo>∗</mo><msub><mi>E</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">En \approx C*n*E_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, where C is a constant independent of n, then the growth of error is said to be linear.</p><p>If <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>n</mi><mo>≈</mo><msup><mi>C</mi><mi>n</mi></msup><mo>∗</mo><msub><mi>E</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">En \approx C^n*E_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, for some <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C &gt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>, then the growth of error is called exponential.</p></blockquote><div class="note warning flat"><p>线性增长是不可回避的，C和E~0~都很小的时候是可以接受的。</p><p>指数级增长是需要避免的，无论E~0~多小，都会非常不准确。</p></div><p>迭代法的小例子</p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923202127821.png" alt="image-20230923202127821"></p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923202454632.png" alt="image-20230923202454632"></p><p>ps：计算误差的增长可以从递推关系中去找！如果迭代求解中，n-1项前的系数大于一，则一定不会收敛，不要考虑该方法。</p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923203215330.png" alt="image-20230923203215330"></p><h2 id="IEEE浮点数规范">IEEE浮点数规范</h2><p>和计概课上讲的是一样的！</p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923204000361.png" alt="image-20230923204000361"></p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923204034231.png" alt="image-20230923204034231"></p><p>significand(底数)</p><p>指数为00000000和11111111被保留给特殊情况，所以single最大浮点数为exponent:11111110 -&gt; 254 - 127 = 127<br>fraction:111…11 -&gt; significand <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span> 2.0<br>±2.0 × 2^127^ ≈ ±3.4 × 10^+38^<br>最小浮点数±1.0 × 2^–126^ ≈ ±1.2 × 10^–38^</p><p>虽然幂次很大，但是有效位还是不够的！</p><h3 id="Precision">Precision</h3><p>all fraction bits are significant</p><p><img src="/2023/09/23/%E5%A4%A7%E4%BA%8C/NA/2023-09-26-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90NA(1)%E3%80%9023%EF%BD%9E24%E7%A7%8B%E5%86%AC%E3%80%91/image-20230923204930201.png" alt="image-20230923204930201"></p>]]></content>
    
    
    <summary type="html">舍入误差(Roundoff errors)和计算机代数(Computer Arithmetic)、Algorithm  and Convergence、IEEE float number</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Numerical Analysis" scheme="http://example.com/tags/Numerical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>计算机系统概论(ICS)课程笔记全集【22-23暑短】</title>
    <link href="http://example.com/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/"/>
    <id>http://example.com/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/</id>
    <published>2023-09-22T02:00:00.000Z</published>
    <updated>2023-10-11T02:55:16.994Z</updated>
    
    <content type="html"><![CDATA[<h1>Introduction to Computing Systems</h1><h2 id="资料">资料</h2><p><a href="https://users.ece.utexas.edu/~patt/19f.306/">历年卷</a></p><p><a href="https://www.yuque.com/isshikixiu/codes/ics#yuP5K">语雀笔记</a></p><p><a href="https://qsctech.github.io/zju-icicles/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/">作业答案</a></p><h2 id="Chapter-1-Welcome-Aboard">Chapter 1 Welcome Aboard</h2><h3 id="1-3-Two-Recurring-Themes">1.3 Two Recurring Themes</h3><h4 id="Abstraction">Abstraction</h4><p>Abstraction is a technique for establishing a simpler way for a person to interact with a system, removing the details that are unnecessary for the person to interact effectively with that system. Our ability to abstract is very much a productivity enhancer. It allows us to deal with a situation at a higher level, focusing on the essential aspects, while keeping the component ideas in the background. It allows us to be more efficient in our use of time and brain activity. It allows us to not get bogged down in the detail when everything about the detail is working just fine.</p><ul><li><p>We needn’t know the layers below of one machine. We have to make a new level of abstraction.</p></li><li><p>Deconstruct — the ability to go from the abstraction back to its component parts.</p></li></ul><h4 id="Hardware-vs-Software">Hardware vs. Software</h4><ul><li><p>We shouldn’t separate people by Hardware and Software.</p></li><li><p>There are important topics in the software that are very deeply interwoven with topics in the hardware. Our contention is that mastering either is easier if you pay attention to both.</p></li><li><p>Most importantly, most computing problems yield better solutions when the problem solver has the capability of both at his or her disposal.</p></li></ul><h3 id="1-4-A-Computer-System">1.4 A  Computer System</h3><ul><li>Computer – a system consisting of the software (i.e., computer programs) that directs and specifies the processing of information (控制信息的处理过程) and the hardware that performs the actual processing of information (执行处理过程) in response to what the software asks the hardware to do.</li><li>This hardware is a central processing unit (CPU)</li><li>Computer —— the collection of parts that in combination from their computer system. in addition to the processor, a key- board for typing commands, a mouse or keypad or joystick for positioning on menu entries, a monitor for displaying information that the computer system has produced, memory for temporarily storing information, disks and USB memory sticks of one sort or another for storing information for a very long time, even after the computer has been turned off, connections to other devices such as a printer for obtaining paper copies of that information, and the collection of programs (the software) that the user wishes to execute.</li></ul><h3 id="1-5-Two-Very-Important-Ideas">1.5 Two Very Important Ideas</h3><h4 id="a">a.</h4><ul><li>All computers (the biggest and the smallest, the fastest and the slowest, the most expensive and the cheapest) are capable of computing exactly the same things if they are given enough time and enough memory. That is, anything a fast computer can do, a slow computer can do also. The slow computer just does it more slowly. A more expensive computer cannot figure out something that a cheaper computer is unable to figure out as long as the cheaper computer can access enough memory. All computers can do exactly the same things. Some computers can do things faster, but none can do more than any other.</li></ul><h4 id="b">b.</h4><ul><li>We describe our problems in English or some other language spoken by people. It is necessary to transform our problem from the language of humans to the voltages that influence the flow of electrons. This transformation is really a sequence of systematic transformations.</li></ul><h3 id="1-6-Computers-as-Universal-Computational-Devices">1.6 Computers as Universal Computational Devices</h3><ul><li><p>Before modern computers</p><ul><li><p>analog machines</p><ul><li><p>produced an answer by measuring some physical quantity</p></li><li><p>very hard to increase their accuracy</p></li></ul></li><li><p>digital machine</p><ul><li>adding machine</li></ul></li></ul></li><li><p>We don’t have to buy a new computer. We just give the old computer a new set of instructions (a program) to carry out the new computation</p></li><li><p>Anything that can be computed, can be computed by a computer provided it has enough time and enough memory. So computers are programmable.</p></li><li><p>A big  or expensive computer cannot do more than a small cheap computer.</p></li><li><p>Computer Capability</p><ul><li>The ability to solve the problem is not dependent on the quality of one computer, which only affects the time to solve a problem.</li></ul></li></ul><h3 id="1-7-How-Do-We-Get-the-Electrons-to-Do-the-Work">1.7 How Do We Get the Electrons to Do the Work?</h3><p>We call the steps of this process the “Levels of Transformation.” As we will see, at each level we have choices. If we ignore any of the levels, our ability to make the best use of our computing system can be very adversely affected.</p><h4 id="Transformation-Hierarchy">Transformation Hierarchy</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_16995C05591F-1.jpeg" alt="IMG_16995C05591F-1" style="zoom:50%;"></li><li><p>The Statement of the Problem: Computer can not understand natural language, because of ambiguity, so the first step is interpreting the problem.<br>To tell it to do something where there are multiple interpretations would cause the computer to not know which interpretation to follow.</p></li><li><p>The Algorithm: step-by-step procedure that is guaranteed to terminate, such that each step is precisely stated and can be carried out by the computer.</p><ul><li><p>effective computability : each step can be carried out by a computer<br>To take the largest prime number lacks effective computability</p></li><li><p>definiteness : each step is precisely stated<br>stir until lumpy lacks definiteness, since the notion of lumpiness is not precise</p></li><li><p>finiteness : the procedure will terminate</p></li><li><p>small example: Data Type Conversion – the unary into binary</p></li></ul></li><li><p>Program</p><p>transform the algorithm into a computer program in one of the programming languages that are available.</p><ul><li><p>Programming languages are mechanical languages (C, C++m COBOL, Fortran, Pascal)</p></li><li><p>high-level languages: at a distance (a high level) from the underlying computer. At their best, they are independent of the computer on which the programs will execute. We say the language is “machine independent.” （先前的几种都是高级语言）</p></li><li><p>low-level languages: tied to the computer on which the programs will execute. There is generally one such low-level language for each computer. That language is called the assembly language (汇编语言)for that computer.</p></li></ul></li><li><p>ISA ( instruction set architecture )</p><p>complete specification  of the interface between programs and the underlying computer hardware</p><p>更新：ISA内定义了指令、内存空间、寻址模式、中断/异常</p><ul><li><p>opcode: describe the operation</p></li><li><p>operand: describe individual data values</p></li><li><p>data types: representation of an operand such that the computer can perform operations on that representation</p></li><li><p>addressing mode: the mechanisms that the computer can use to figure out where the operands are located</p></li><li><p>The number of opcodes, data types, and addressing modes specified by an ISA vary among different ISAs.<br>Some ISAs have one or two addressing modes, whereas others have more than 20. The x86, the ISA used in the PC, has more than 200 opcodes, more than a dozen data types, and more than two dozen addressing modes.</p></li><li><p>ex. x86(intel), ARM, THUMB, POWER</p></li><li><p>The translation from a high-level language ( C ) to the ISA of the computer is usually done by a translating program called compiler. For each high-level language and each desired target ISA, one must provide a corresponding compiler.</p></li><li><p>The translation from the unique assembly language of a computer to its ISA is done by an assembler.</p></li><li><p>汇编语言是用人类看得懂的语言来描述指令集。否则指令集的机器码都是一堆二进制数字，人类读起来非常麻烦。但是汇编语言也有缺点，首先汇编语言操作起来还是挺麻烦的。其次汇编语言对应一条条指令集，所以当指令集改变时，就得修改相应汇编语言，导致其可移植性很差，不能跨平台使用，如ARM的汇编语言与Intel X86的就不同。这时人们就想开发一种更方便操作，超越指令集的语言，于是有了C，C++等高级语言。</p></li><li><p>ISA 连接自然语言描述功能和电脑理解功能 （eg 定义汽车踏板的作用，但是对踏板背后的实现不做要求）</p></li></ul></li><li><p>Micro Architecture</p><ul><li><p>implementation of the ISA</p></li><li><p>can be different from each other</p></li><li><p>Computer design is always an exercise in tradeoffs, as the designer opts for higher (or lower) performance, more (or less) energy required, at greater(or lesser) cost.</p></li><li><p>一个指令集可能有多个微架构，但一个微架构只适用于一个指令集</p></li></ul></li><li><p>Logic Gates</p><ul><li>also have many choices, like an addition, there are several choices of logic circuits to perform the operations at different speeds and corresponding costs</li></ul></li><li><p>Electronic circuits</p></li><li><p>Electron</p></li><li><p>If you are familiar with all layers, you will do a better job</p></li></ul><h2 id="Chapter-2-Bits-and-Data-Types">Chapter 2 Bits and Data Types</h2><h3 id="2-1-Bits-and-Data-Types">2.1 Bits and Data Types</h3><ul><li><p>Bit: We symbolically represent the presence of a voltage as “1” and the absence of a voltage as “0.” We refer to each 0 and each 1 as a “bit,” which is a shortened form of binary digit.</p></li><li><p>Data Type</p><p>We say a particular representation is a data type if there are operations in the computer that can operate on information that is encoded in that representation.</p><ul><li><p>Representation</p><ul><li><p>Binary</p></li><li><p>Unary</p></li><li><p>定义了数据的表达形式，并且定义了相关的操作方法，才能将该表达方式称为数据类型</p></li></ul></li><li><p>In this book, we will mainly use two data types: 2’s complement integers for representing positive and negative integers that we wish to perform arithmetic on, and ASCII codes for representing characters that we wish to input to a computer via the keyboard or output from the computer via a monitor.</p></li></ul></li></ul><h3 id="2-2-Integer-Data-Type">2.2 Integer Data Type</h3><ul><li><p>Unsigned integers<br>With k bits, we can represent in this positional notation exactly 2^k^ integers, ranging from 0 to 2^k-1^</p></li><li><p>use positional notation(位值法）</p></li><li><p>Signed integers</p><ul><li><p>Representation</p><ul><li><p>signed-magnitude data type(符号位 / 原码): let the leading 0 signifies a positive integer, leading 1 signifies a negative integer</p></li><li><p>1’s complement(反码): “flipping” all the bits</p></li><li><p>2’s complement(补码)</p><p>two representations above both require unnecessarily cumbersome hardware to do addition, so it is necessary to choose representations that simplified the circuit</p><ul><li><p>引入补码的原因：1.原码符号不同做加减法结果会出现问题2.其他方法浪费空间，原码对0的表示方法有两种3.A+（-A）≠ 0</p></li><li><p>get the representation of -A after knowing the representation of A: Flip all the bits of A (the official term for “flip” is complement), and add 1 to the complement of A. The sum of A and the complement of A is 11111. If we then add 00001 to 11111, the final result is 00000. (负数的补码是该正数的补码或原码取反加一，负数补码的补码是原码)</p></li><li><p>补充方法：从右往左找到第一个1，该1的左侧所有数反转</p></li><li><p>REPRESENTATION(value + 1) = REPRESENTATION(value) + REPRESENTATION(1).</p></li><li><p>可以表示 -2^(n-1)^ ~ 2^(n-1)^ - 1 所有数值</p></li></ul></li></ul></li></ul></li></ul><h3 id="2-4-Conversion-Between-Binary-and-Decimal">2.4 Conversion Between Binary and Decimal</h3><ul><li><p>Binary to Decimal</p><ol><li>Examine the leading bit:</li></ol><ul><li><p>If it is a 0, the integer is positive, and we can begin evaluating its magnitude.</p></li><li><p>If it is a 1, the integer is negative. In that case, we need to first obtain the 2’s complement representation of the positive number having the same magnitude. We do this by flipping all the bits and adding 1.</p></li></ul><ol start="2"><li><p>Calculate magnitude</p></li><li><p>Add minus sign when necessary</p></li></ol></li><li><p>Decimal to Binary</p><ul><li>将十进制写成二进制展开，根据十进制数字的奇偶性判断二进制格式中最后一位的0/1格式。减去该位后，等式两侧同除2，重复上述步骤。</li></ul></li></ul><h3 id="2-5-Operations-on-Bits-–-Part-I-Arithmetic">2.5 Operations on Bits – Part I: Arithmetic</h3><ul><li><p>Addition and Subtraction</p><ul><li>A + B, A + (-B)</li></ul></li><li><p>Sign-Extension</p><ul><li><p>It is often useful to represent a small number with fewer bits.</p></li><li><p>leading 0s do not affect the value of a positive number, leading 1s do not affect the value of a negative number.</p></li><li><p>Sign-EXTension, often abbreviated SEXT : Sign-extension is performed in order to be able to operate on representations of different <a href="http://lengths.It">lengths.It</a> does not affect the values of the numbers being represented.</p></li></ul></li><li><p>Overflow</p><ul><li><p>Note that the sum of a negative number and a positive number never presents a problem.</p></li><li><p>前面的两个overflow例子都发生在同符号数相加的情况下。事实上，也只有在这两种同符号运算情观下，才会发生溢出。一个正数和一个负数相加，永运都不会溢出</p></li></ul></li></ul><h3 id="2-6-Operations-on-Bits-–-Part-II-Logical-Operations">2.6 Operations on Bits – Part II: Logical Operations</h3><ul><li><p>AND function</p><ul><li>bit-wise AND</li></ul></li><li><p>OR function (inclusive OR)</p></li><li><p>NOT function<br>a unary logical function</p></li><li><p>Exclusive-OR function</p></li><li><p>DeMorgan’s Laws</p></li><li><p>The Bit Vector</p><ul><li><p>An m-bit pattern where each bit has a logical value (0 or 1) independent of the other bits is called a bit vector. It is a convenient mechanism for identifying a property such that some of the bits identify the presence of the property and other bits identify the absence of the property.</p></li><li><p>Bit Mask: A bit mask is a binary pattern that enables the bits of A to be separated into two parts—generally the part you care about and the part you wish to ignore.<br>与某一00001000按位或来把该位set 1，与000010000按位与来把除1意外的其他位set 0</p></li></ul></li><li><p>Data Structure</p><ul><li>Doubly link list</li></ul></li></ul><h3 id="2-7-Other-Representations">2.7 Other Representations</h3><h4 id="Floating-Point-Data-Type">Floating Point Data Type</h4><ul><li><p>One of them,usually called float, consists of 32 bits, allocated as follows:</p></li><li><p>1 bit for the sign (positive or negative)</p></li><li><p>8 bits for the range (the exponent field)</p></li><li><p>23 bits for precision (the fraction field)</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110204720.png" alt="image-20230714110204720"></p></li><li><p>Normalized Form: N = (−1)^S^ × 1. fraction × 2^(exponent−127)^, 1 ≤ exponent ≤ 254</p></li><li><p>Exponent: the eight-bit exponent is restricted to the 254 unsigned integer values, 1 (00000001) through 254 (11111110).The eight exponent bits are encoded in what we call an excess code, named for the notion that one can get the real exponent by treating the code as an unsigned integer and subtracting the excess (sometimes called the bias).</p></li><li><p>infinities: Infinity is represented by the exponent field containing all 1s and the fraction field containing all 0s. We represent positive infinity if the sign bit is 0 and negative infinity if the sign bit is 1.</p></li><li><p>NaN: exponent field contains all 1s but the fraction field does not contain all 0s</p></li><li><p>subnormal numbers : numbers smaller than 2−126 but larger than 0.</p><ul><li><p>The largest subnormal number is N = 0.11111111111111111111111 × 2−126</p></li><li><p>The smallest subnormal number is N = 0.00000000000000000000001 × 2^−126^ , i.e., 2^−23^ × 2^−126^ which is 2^−149^ .<br>We represent them with an exponent field of 00000000. The fraction field is represented in the same way as with normalized numbers. That is, if the exponent field contains 00000000, the exponent is −126, and the significant digits are obtained by starting with a leading 0.</p></li></ul></li><li><p>规格数: 用于表示最常见的数值, 比如1.2, 34567, 7.996, 0.2. 但规格数不能表示0和非常靠近0的数.非规格数: 用于表示0, 以及非常靠近0的数, 比如1E-38.特殊数: 用于表示&quot;无穷&quot;和&quot;NaN&quot;:</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714111200313.png" alt="image-20230714111200313"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714111228444.png" alt="image-20230714111228444"></p></li></ul><h4 id="ASCII-Codes">ASCII Codes</h4><blockquote><p>the standard code that almost all computer equipment manufacturers have agreed to use for transferring characters between the main computer processing unit and the input and output devices.(用来在处理单元和I/O设备间传输字符)</p><p>an eight-bit code. stands for American Standard Code for Information Interchange</p><p>Each key on the keyboard is identified by its unique ASCII code.</p></blockquote><h4 id="Hexadecimal-Notation-easy-to-remember-copy">Hexadecimal Notation (easy to remember, copy)</h4><ul><li>2‘s complement to Hex时要注意如果是负数要前补1，并且是补码的形式</li></ul><h2 id="Chapter-3-Digital-Logic-Structures">Chapter 3 Digital Logic Structures</h2><h3 id="3-1-The-Transistor">3.1 The Transistor</h3><ul><li><p>MOS</p><p>metal-oxide semiconductor</p><ul><li><p>N-type （negative）</p><p>掺杂P原子，多电子，称为N-type半导体</p><ul><li><p>it has gate(栅极), source(源极), drain(漏极)<img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_CFC94B50B440-1.jpeg" alt="IMG_CFC94B50B440-1" style="zoom:25%;"></p></li><li><p>gate is supplied with 1.2 volts: short circuit</p></li><li><p>gate is supplied with 0 volts: open circuit</p></li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_43A35591B577-1.jpeg" alt="IMG_43A35591B577-1" style="zoom:25%;">only show the terminals of the power supply, because the power supply itself provides the completion of the completed circuit is well understood.横线是正极，下三角代表接地</li></ul></li><li><p>P-type （positive）</p><p>掺杂B原子，缺电子，称为P-type半导体</p><ul><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_218584DA788B-1.jpeg" alt="IMG_218584DA788B-1"></p></li><li><p>0 volts: short circuit:</p></li><li><p>1.2 volts: open circuit</p></li></ul></li><li><p>NMOS是栅极高电平（|VG-S| &gt; Vt, VG - Vs &gt; -Vt）导通,低电平断开,可用来控制与地之间的导通。</p></li><li><p>PMOS是栅极低电平（|VG-S| &gt; Vt, VG - Vs &lt; -Vt）导通,高电平断开,可用来控制与电源之间的导通</p></li></ul></li><li><p>CMOS circuits(complementary metal-oxide semiconductor): circuits that contain both P-type and N-type transistors<br>CMOS门电路静态功耗低，抗干扰能力强，开关速度高，工作稳定可靠，适用于逻辑电路设计，应用非常广泛。</p></li></ul><h3 id="3-2-Logic-Gates">3.2 Logic Gates</h3><p>There are transistor circuits that implement each of these functions. The corresponding circuits are called AND, OR, and NOT gates.</p><h4 id="The-NOT-Gate-Inverter">The NOT Gate(Inverter)</h4><ul><li><p>It is constructed from two MOS transistors, one P-type and one N-type.<img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_9F69669CF248-1.jpeg" alt="IMG_9F69669CF248-1" style="zoom: 25%;"></p></li><li><p>Q：为什么不能只使用PMOS？A：不管输入端为高电平还是低电平，VT1和VT2始终有一个处于截止状态，电源与地之间基本无电流通过，这样CMOS非门电路的功耗很低。</p></li></ul><h4 id="The-NOR-Gates">The NOR Gates</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/IMG_E0204741FE35-1.jpeg" alt="IMG_E0204741FE35-1"></p><h4 id="The-OR-Gates">The OR Gates</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110541794.png" alt="image-20230714110541794"><br><a href="https://zhuanlan.zhihu.com/p/96545244">为什么PMOS在上，NMOS在下?</a><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110557379.png" alt="image-20230714110557379"></li></ul><h4 id="The-AND-Gates">The AND Gates</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110633464.png" alt="image-20230714110633464"></li></ul><h4 id="Basic-Logic-Gates">Basic Logic Gates</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110825318.png" alt="image-20230714110825318"></p><h3 id="3-3-Combinational-Logic-Gates">3.3 Combinational Logic Gates</h3><h4 id="Decoder">Decoder</h4><p>A decoder has the property that exactly one of its outputs is 1 and all the rest are 0s.</p><ul><li><p>In general, decoders have n inputs and 2n outputs. We say the output line that detects the input pattern is asserted.</p></li><li><p>the input to the decoder is 10, resulting in the third output line being <a href="https://zh.wikipedia.org/wiki/%E6%96%B7%E8%A8%80_(%E7%A8%8B%E5%BC%8F)">asserted</a>.!</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110843012.png" alt="image-20230714110843012"></p></li></ul><h4 id="MUX-multiplexer">MUX (multiplexer)</h4><p>a shows a logic gate implementation of a two-input multiplexer.</p><ul><li><p>The function of a mux is to select one of the inputs (A or B) and connect it to the output. The select signal (S in Figure 3.12)determines which input is connected to the output.</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110859851.png" alt="img"></p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110909082.png" alt="image-20230714110909082"></p></li><li><p>In general, a mux consists of 2^n^ inputs and n select lines.</p></li></ul><h4 id="A-One-Bit-Adder">A One-Bit Adder</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110919161.png" alt="img"></li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110929624.png" alt="image-20230714110929624"></li></ul><h4 id="The-Programmable-Logic-Array-PLA">The Programmable Logic Array(PLA)</h4><ul><li>It consists of an array of AND gates (called an AND array) followed by an array of OR gates (called an OR array). The number of AND gates corresponds to the number of input combinations (rows) in the truth table. For n-input logic functions, we need a PLA with 2^n^ n-input AND gates.</li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714110951893.png" alt="image-20230714110951893"></li></ul><h4 id="Logical-Completeness">Logical Completeness</h4><blockquote><p>the set of gates {AND, OR, and NOT} is logically complete because we can build a circuit to carry out the specification of any truth table we wish without using any other kind of gate.</p></blockquote><ul><li>NAND实现其他几个gates的逻辑电路图<img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714112648480.png" alt="image-20230714112648480"></li></ul><h3 id="3-4-Basic-Storage-Elements">3.4 Basic Storage Elements</h3><ul><li><p>The R-S Latch</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714111003779.png" alt="image-20230714111003779"></p><ul><li><p><strong>Setting the latch</strong>:  set the latch to store 1</p></li><li><p><strong>Resetting the latch</strong>: set the latch to store 0</p></li><li><p><strong>The Quiescent State:  S and R are 1</strong></p><blockquote><p>We describe the quiescent (or quiet) state of a latch as the state when the latch is storing a value, either 0 or 1, and nothing is trying to change that value.</p></blockquote></li><li><p>Setting the Latch to a1 or a0</p><ul><li><p>a1: momentarily set S to 0, keep R 1</p></li><li><p>a0: momentarily set R to 0, keep S 1</p></li><li><p>then, set R and S both to 1 (return to the quiescent state)</p></li></ul></li><li><p><strong>set</strong>: setting a variable to 0 or 1, as in “set to 0” or“set to 1.”</p></li><li><p><strong>clear</strong>: the act of setting a variable to 0.</p></li><li><p>Note: We should point out that if both S and R were allowed to be set to 0 at the same time, the outputs a and b would both be 1, and the final state of the latch would depend on the electrical properties of the transistors making up the gates and not on the logic being performed.</p></li></ul></li><li><p>The Gated D Latch</p></li><li><p>WE(write enable): 为1时可写入数据。</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714111019419.png" alt="image-20230714111019419"></p></li></ul><h3 id="3-5-The-Concept-of-Memory">3.5 The Concept of Memory</h3><blockquote><p>Memory is made up of a (usually large) number of locations, each uniquely identifiable and each having the ability to store a value.</p></blockquote><h4 id="address">address</h4><blockquote><p>unique identifier associated with each memory location</p></blockquote><h4 id="addressability">addressability</h4><blockquote><p>the number of bits of information stored in each location</p></blockquote><ul><li>Most memories are byte-addressable.</li></ul><h4 id="Address-Space">Address Space</h4><blockquote><p>the total number of uniquely identifiable locations</p></blockquote><ul><li><p>With n bits of address, we can uniquely identify 2^n^ locations.</p><ul><li><p>kilo ~ 2^10^</p></li><li><p>mega ~ 2^20^</p></li><li><p>giga ~ 2^30^</p></li></ul></li><li><p>注意和 address space 做区分，address space 指的是 memory 中，依据寻址输入（下图的<code>A[1:0]</code>）能够查询到的 location 数量的**==上限==**（即两条线但是只画出了 3 个location的话，address space 依然是 4）。</p></li></ul><h4 id="A-2-2-by-3-Bit-Memory">A 2^2-by-3-Bit Memory</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714111120293.png" alt="image-20230714111120293"></li></ul><blockquote><p>In both cases, our notation A[high:low] and D[high:low] reflects the fact that we have numbered the bits of address and data from right to left, in order, starting with the rightmost bit, which is numbered 0.</p></blockquote><h3 id="3-6-Sequential-Logic-Circuits">3.6 Sequential Logic Circuits</h3><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714141124423.png" alt="image-20230714141124423" style="zoom:50%;"><blockquote><p>In this section, we discuss digital logic structures that can <strong>both</strong> ==process information== (i.e., make decisions) <strong>and</strong> ==store information==.</p><p>Sequential logic circuits are used to implement a very important class of mechanisms called <em><strong>finite state machines</strong></em>.</p><p>They contain storage elements that allow them to keep track of prior history information.</p><p>Note also that the output can be dependent on <strong>both</strong> the inputs now <strong>and</strong> the values stored in the storage elements. The values stored in the storage elements reflect the history of what has happened before.(输出结果和输入值、历史状态都有关)</p></blockquote><h4 id="3-6-1-Combination-Lock">3.6.1 Combination Lock</h4><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714142458004.png" alt="image-20230714142458004" style="zoom: 50%;"><ul><li><p>combination lock</p><blockquote><p>Whether or not this lock opens is totally independent of the past rotations of the four wheels. The lock does not care at all about past rotations. The only thing important is the current value of each of the four wheels.</p><p>是否解开组合锁和旋转圈数等状态无关，只和<strong>当前</strong>的值有关</p></blockquote></li><li><p>sequential lock</p><blockquote><p>Because the lock stores the previous rotations and makes its decision (open or don’t open) on the basis of the the history of the past operations, that is, on the correct <em>sequence</em> being performed.</p></blockquote></li></ul><h4 id="3-6-2-The-Concept-of-State">3.6.2 The Concept of State</h4><blockquote><p>The state of a mechanism— more generally, the state of a system—is a snapshot of that system in which all relevant items are explicitly expressed.</p><p>That is: <em>The state of a system is a snapshot of all the relevant elements of the system at the moment the snapshot is taken.</em></p></blockquote><ul><li>examples：a combination lock, basketball games, tic-tac-toe</li></ul><h4 id="3-6-3-The-Finite-State-Machine-FSM-and-its-State-Diagram">3.6.3 The Finite State Machine(FSM) and its State Diagram</h4><h5 id="Elements">Elements</h5><ol><li>a finite number of states</li><li>a finite number of external inputs</li><li>a finite number of external outputs</li><li>an explicit specification of all state transitions</li><li>an explicit specification of what determines each external output value.</li></ol><h5 id="Combination-Lock">Combination Lock</h5><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714143600361.png" alt="image-20230714143600361" style="zoom:50%;"><blockquote><p>The explicit specifications of all state transitions are shown by the arrows in the state diagram. The more sophisticated term for “arrow” is <em>arc</em>. The arrowhead on each arc specifies which state the system is coming from and which state it is going to.</p></blockquote><ul><li>We refer to the state the system is coming from as the <em><strong>current state</strong></em>, and the state it is going to as the <em>next state</em>.</li><li>First, it is usually the case that from a current state there are <strong>multiple transitions</strong> to next states. The state transition that occurs depends on both the <strong>current state</strong> and the value of the <strong>external input</strong>.</li></ul><h4 id="3-6-4-The-Synchronous-Final-State-Machine">3.6.4 The Synchronous Final State Machine</h4><blockquote><p>On the contrary, we say that computers are <em>synchronous</em> because the state transitions take place, one after the other, at identical fixed units of time.(以一个相同的、固定的时间单位进行状态转换) They are controlled by a <em>synchronous finite state machine</em>.</p></blockquote><p>同步和异步的区别：同步状态机和异步状态机是状态机的两种基本类型。异步状态机状态在输出信号经过一段时间延时后变化时，时间无法预测。同步状态机状态变化由时钟信号控制。</p><p>换句话说，异步状态机的状态切换的时间间隔是不确定的，由操作触发。</p><h4 id="3-6-5-The-Clock">3.6.5 The Clock</h4><blockquote><p>A clock circuit produces a signal, commonly referred to as <em>THE clock</em>, whose value alternates between 0 volts and some specified fixed voltage.</p></blockquote><h5 id="Clock-Cycle">Clock Cycle</h5><blockquote><p>Each of the repeated sequence of identical intervals is referred to as a <em>clock cycle</em>.</p><p>A clock cycle starts when the clock signal transitions from 0 to 1 and ends the next time the clock signal transitions from 0 to 1. （计算机界约定俗成，一个时钟周期从一个上升沿开始到下一个上升沿结束）</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714145414482.png" alt="image-20230714145414482"></p><h4 id="3-6-6-The-Traffic-Controller-Example">3.6.6 The Traffic Controller Example</h4><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714145549068.png" alt="image-20230714145549068" style="zoom:33%;"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714150417374.png" alt="image-20230714150417374" style="zoom:33%;"><center>State Diagram</center><h5 id="The-Sequential-Logic-Circuit">The Sequential Logic Circuit</h5><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714150725095.png" alt="image-20230714150725095" style="zoom:50%;"><h6 id="Combinational-Logic">Combinational Logic</h6><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714150808850.png" alt="image-20230714150808850" style="zoom:50%;"><ul><li>有四种State，所以使用两个Storage Element</li></ul><h6 id="The-Problem-with-Gated-Latches">The Problem with Gated Latches</h6><blockquote><p>The problem is the gated D latch. We want the output of OR gates Y and Z to transition to the next state at the end of the current clock cycle and allow the current state to remain unchanged until then. That is, we do not want the input to the storage elements to take effect until the end of the current clock cycle. Since the output of a gated D latch changes immediately in response to its input if the Write Enable signal is asserted, it cannot be the storage element for our synchronous finite state machine.</p><p>在当前时钟周期内。存储单元的输出是逻辑电路的一个输入，逻辑电路会因此改变，但逻辑电路的输出又是存储单元的输入。该输入应该等到下一个时钟周期才能写入存储单元，如果使用D Gated Latch，那么就会一直改变。</p></blockquote><h6 id="Master-slave-flip-flop-（主从锁存器）">Master-slave flip-flop （主从锁存器）</h6><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714152956146.png" alt="image-20230714152956146"><ul><li>Clock为 1，Master不可写，Slave可写，Master存储的数据写入Slave中，Slave写入逻辑电路中，整个电路进入下一个状态。<br>Clock为 0，Master可写，Slave不可写，Slave保存的依旧是前一个状态，不会改变逻辑电路的状态。Master存入下一个状态的数据，为下一个状态做准备。</li><li>Flip-flop实现了按照时钟周期读写，并且是用时钟控制WE。</li></ul><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714154039126.png" alt="image-20230714154039126"></p><ul><li>prop delay: 传播延迟</li></ul><h3 id="3-7-The-Data-Path-of-LC-3">3.7 The Data Path of LC-3</h3><blockquote><p>The data path consists of all the logic structures that combine to process information in the core of the computer.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715093533794.png" alt="image-20230715093533794"></p><h4 id="Register">Register</h4><blockquote><p>It is a temporary location</p></blockquote><blockquote><p>A register is simply a set of <em>n</em> flip-flops that collectively are used to store one <em>n</em>-bit value.</p><p>In fact, a register can be any size that we need.</p><p>We usually need flip-flops, rather than latches, because it is usually important to be able to both read the contents of a register throughout a clock cycle and also store a new value in the register at the end of that same clock cycle.</p></blockquote><ul><li><strong>PC, IR, MAR, and MDR</strong> are all 16-bit registers that store 16 bits of information each</li><li>The block labeled <strong>REG FILE</strong> consists of <strong>eight registers</strong> that each store <strong>16 bits</strong> of information.</li><li>The data path also shows three 1-bit registers, <em>N</em>, <em>Z</em>, and <em>P</em>.</li></ul><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714155401065.png" alt="image-20230714155401065"></p><ul><li>[x] 为什么register要用flip-flop，不能用latch。时序逻辑电路对register有什么要求？</li></ul><blockquote><p>在「组合电路」中，微小的信号传输迟延，都有可能造成输出毛刺。尽管毛刺是一个极其短暂的信号，但也可以引起逻辑电路的误动作。为了回避这个问题，就要使用时钟同步电路。如图所示，其构造是在FF（触发器）之间夹着「组合电路」。毛刺是「组合电路」在输出稳定之前，输出的短暂信号。因此，在「组合电路」输出稳定以后，再改变时钟，用触发器保持这个输出，就可以回避这种误动作了。<br><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/v2-6798e2eb51badec7d6d8343f3f929a88_1440w.webp" alt="img"></p></blockquote><ul><li>所以尽管锁存器可能可以实现需求，但是因为信号传输延迟，使用寄存器（由FF组成）可以使电路更加稳定</li></ul><h2 id="Chapter-4-The-von-Neumann-Model">Chapter 4 The von Neumann Model</h2><h3 id="4-1-Basic-Components">4.1 Basic Components</h3><blockquote><p>The <em>instruction</em> is the smallest piece of work specified in a computer program.</p><p>The von Neumann model consists of five parts: <em>memory, a processing unit, input, output</em>, and <em>a control unit</em>.</p><p>The computer program is contained in the computer’s memory.<br>The data the program needs to carry out the work of the program is either contained in the program’s memory or is obtained from the input devices.<br>The results of the program’s execution are provided by the output devices.<br>The order in which the instructions are carried out is performed by the control unit.</p><p>也可以被分为三部分，CPU(包含控制和操作单元)，MEMORY，I/O</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714161100767.png" alt="image-20230714161100767"></p><h4 id="Input-and-Output">Input and Output</h4><blockquote><p>In order for a computer to process information, the information must get into the computer.</p><p>In order to use the results of that processing, those results must be displayed in some fashion outside the computer.</p></blockquote><h4 id="Memory">Memory</h4><ul><li><p>a typical memory in today’s world of computers consists of 2^34^（16GB） distinct memory locations, each of which is capable of storing eight bits of information.</p></li><li><p>To read the contents of a memory location, we first place the address of that location in the memory’s address register (<strong>MAR</strong>) and then interrogate the computer’s memory. The information stored in the location having that address will be placed in the memory’s data register (<strong>MDR</strong>).</p></li><li><p>To write (or store) a value in a memory location, we first write the address of the memory location in the MAR, and the value to be stored in the MDR.<br>We then interrogate the computer’s memory with the write enable signal asserted.<br>The information contained in the MDR will be written into the memory location whose address is in the MAR.</p></li><li><p>two characteristics of a memory location: its address and what is stored there.</p></li></ul><h4 id="Computation-Unit-Processing-Unit">Computation Unit / Processing Unit</h4><blockquote><p>The actual processing of information in the computer is carried out by the <em>processing unit</em>.</p></blockquote><ul><li>ALU<br>The ALU normally processes data elements of a fixed size referred to as the <em>word length</em> of the computer. The data elements are called <em>words</em>.<br>In the LC-3, the ALU processes 16-bit words. We say the LC-3 has a word length of 16 bits.</li><li>Temporary locations<br>Because the time it takes to access memory is long compared to the time it takes to perform the ADD or MULTIPLY. The most common form of temporary storage is a set of registers. The size of each register is identical to the size of values processed by the ALU; that is, they each contain one word.</li></ul><h4 id="Control-Unit">Control Unit</h4><blockquote><p>It is the control unit that keeps track of both where we are within the process of executing the program and where we are in the process of executing each instruction.</p></blockquote><ul><li>IR (instruction register)<br>To keep track of which instruction is being executed, the control unit has an <em>instruction register</em> to contain that instruction.</li><li>PC (program counter)<br>To keep track of which instruc- tion is to be processed next, the control unit has a register that contains the next instruction’s address.</li></ul><h3 id="4-2-The-LC-3image-20230714202605926">4.2 The LC-3<img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230714202605926.png" alt="image-20230714202605926"></h3><ul><li><p><strong>Filled-in arrowheads</strong>: data elements that flow along the corresponding paths.</p></li><li><p><strong>Not-filled-in arrowheads</strong>: control signals that control the processing of the data elements.</p></li><li><p><strong>MEMORY</strong></p><ol><li><p>storage elements</p></li><li><p><strong>Memory Address Register (MAR)</strong></p><blockquote><p>for addressing individual locations.</p><p>Note that the MAR contains 16 bits, reflecting the fact that the memory address space of the LC-3 is ==2^16^== memory locations.</p></blockquote></li><li><p><strong>Memory Data Register (MDR)</strong></p><blockquote><p>for holding the contents of a memory location on its way to/from the storage.</p><p>The MDR contains 16 bits, reflecting the fact that each memory location contains 16 bits—that is, the LC-3 is ==16-bit addressable==.</p></blockquote></li></ol></li><li><p><strong>INPUT/OUTPUT</strong></p><ul><li><p>a keyboard and a monitor.</p></li><li><p><strong>a keyboard data register (KBDR)</strong></p><blockquote><p>for holding the ASCII codes of keys struck</p></blockquote></li><li><p><strong>a keyboard status register (KBSR)</strong></p><blockquote><p>for maintaining status information about the keys struck.</p></blockquote></li><li><p><strong>a display data register (DDR)</strong></p><blockquote><p>for holding the ASCII code of something to be displayed on the screen and</p></blockquote></li><li><p><strong>a display status register (DSR)</strong></p><blockquote><p>for maintaining associated status information.</p></blockquote></li></ul></li><li><p><strong>THE PROCESSING UNIT</strong></p><ul><li>a functional unit (ALU) Algorithm and Logic Unit</li></ul><blockquote><p>perform arithmetic and logic operations. The LC-3 ALU can perform one arithmetic operation (addition) and two logical operations (bitwise AND and bitwise NOT).</p></blockquote><ul><li>eight registers (R0, … R7)</li></ul><blockquote><p>for storing temporary values that will be needed in the near future as operands for subsequent instructions.</p></blockquote></li><li><p><strong>THE CONTROL UNIT</strong></p><ol><li><p>Its most important structure is the <strong>finite state machine</strong>, which directs all the activity.</p></li><li><p>Note the CLK input to the finite state machine in Figure 4.3. It specifies how long each clock cycle lasts.</p></li><li><p>The <strong>instruction register (IR)</strong> is also an input to the finite state machine since the LC-3 instruction being processed determines what activities must be carried out.</p></li><li><p>The <strong>program counter (PC)</strong> is also a part of the control unit; it keeps track of the next instruction to be executed after the current instruction finishes.</p></li></ol></li><li><p>[x] 为什么需要有限状态机？记录了什么状态？finite state machine记录了指令循环的状态（fetch（state1～3）-decode（state4）-evaluate address-get data-execute-store data</p></li></ul><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715080743261.png" alt="image-20230715080743261" style="zoom: 50%;"><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715081554287.png" alt="image-20230715081554287"></p><blockquote><p>State33 里的R指的是Ready，即内存是否读取完成</p></blockquote><h3 id="4-3-Instruction-Processing">4.3 Instruction Processing</h3><h4 id="4-3-1-The-instruction">4.3.1 The instruction</h4><blockquote><p>The most basic unit of computer processing is the <a href="http://instruction.It">instruction.It</a> is made up of two parts, the <em>opcode</em> (what the instruction does) and the <em>operands</em> (who it does it to!).</p><p>There are fundamentally three kinds of instructions: <em>operates</em>, <em>data movement</em>, and <em>control</em>, although many ISAs have some special instructions that are necessary for those ISAs.</p></blockquote><ul><li><strong>Operate</strong> instructions operate on data. The LC-3 has three operate instructions: one arithmetic (ADD) and two logicals (AND and NOT).</li><li><strong>Data movement</strong> instructions move information from the processing unit to and from memory and to and from input/output devices. The LC-3 has six data movement instructions.</li><li><strong>Control</strong> instructions are necessary for altering the sequential processing of instructions.</li></ul><h5 id="The-ADD-AND-Instruction">The ADD/AND Instruction</h5><p>operands: two source operands and one destination operand</p><p>[15:12] opcode<br>[11:9] location for sorting the result<br>[8:6] one source operand<br>[5] determine whether to add / and an operand from register or immediately</p><p>立即数的范围是-16～15</p><h5 id="The-LD-Instruction">The LD Instruction</h5><blockquote><p>go to a particular memory location, read the value that is contained there, and store that value in one of the registers</p></blockquote><p>operands: 2<br>addressing mode: PC+offset</p><p>[15:12] opcode<br>[11:9] the register to contain the value from the memory<br>[8:0] the offset</p><h4 id="4-3-2-The-Instruction-Cycle">4.3.2 The Instruction Cycle</h4><blockquote><p>Instructions are processed under the direction of the control unit in a very systematic, step-by-step manner.</p><p>The entire sequence of steps needed to process an instruction is called the <em>instruction cycle</em>.</p><p>The instruction cycle consists of six sequential <em><strong>phases</strong></em>, each phase requiring zero or more steps.</p></blockquote><h5 id="4-3-2-1-Fetch">4.3.2.1 Fetch</h5><p>Step 1: Load the <strong>MAR</strong> with the contents of the <strong>PC</strong>, and simultaneously ==increment the PC==.(one clock cycle)<br>Step 2: Interrogate memory, resulting in the instruction being placed in the <strong>MDR</strong>. (one or many clock cycles depending on how long it takes to access the computer’s memory)<br>Step 3: Load the <strong>IR</strong> with the contents of the MDR.(one clock cycle)</p><h5 id="4-3-2-2-Decode">4.3.2.2 Decode</h5><blockquote><p>The DECODE phase examines the instruction in order to figure out what the microarchitecture is being asked to do.</p></blockquote><p>input: opcode IR[15:12]<br>output:corresponding to the opcode</p><h5 id="4-3-2-3-Evaluate-Address">4.3.2.3 Evaluate Address</h5><p>只有需要特殊寻址模式（PC+offset、Base+offset、间接寻址等）才需要这一阶段，从寄存器、从指令中读取操作数不需要计算地址</p><blockquote><p>the ADD and AND instructions in the LC-3 obtain their source operands from registers or from the instruction itself and store the result of the ADD or AND instruction in a register. For those instructions, the EVALUATE ADDRESS phase is not needed.</p></blockquote><h5 id="4-3-2-4-Fetch-Operands">4.3.2.4 Fetch Operands</h5><p>LD，把计算的地址写入MAR，从内存中读数据到MDR中。<br>ADD，从寄存器中读数据。</p><ul><li>Note：In most current microprocessors, this phase (for the ADD instruction) can be done <strong>at the same time</strong> the instruction is being executed (the fifth phase of the instruction cycle)</li></ul><h5 id="4-3-2-5-Execute">4.3.2.5 Execute</h5><p>ADD，在ALU中执行加法</p><h5 id="4-3-2-6-Store-Result">4.3.2.6 Store Result</h5><blockquote><p>In the case of the ADD instruction, in many computers this action is performed during the EXECUTE phase. That is, in many computers, including the LC-3, an ADD instruction can fetch its source operands, perform the ADD in the ALU, and store the result in the destination register all in a single clock cycle.</p></blockquote><p>LD，把数据写入寄存器</p><h5 id="一些特例（不一定需要所有阶段）">一些特例（不一定需要所有阶段）</h5><blockquote><p>As already pointed out, the LC- 3 ADD instruction does not require a separate EVALUATE ADDRESS phase or a separate STORE RESULT phase.<br>The LC-3 LD instruction does not require an EXECUTE phase. On the other hand, there are instructions in other ISAs that require all six phases.</p></blockquote><ul><li>[ ] 每个阶段到底都做了那些事情？（从内存中取数据放入MDR）</li><li>[ ] 每个阶段需要多少个Clock Cycle？</li><li>[ ] 每条指令都需要所有阶段吗？</li></ul><h4 id="4-3-3-Change-the-Sequence-of-Execution">4.3.3 Change the Sequence of Execution</h4><h5 id="The-BR-Instruction">The BR Instruction</h5><p>[15:12] opcode<br>[11:9] condition<br>[8:0] value added to incremented PC</p><p>寻址模式：PC+offset</p><h4 id="4-3-4-Control-of-the-Instruction-Cycle">4.3.4 Control of the Instruction Cycle</h4><blockquote><p>As is the case with the finite state machines studied in Section 3.6, each state corresponds to one machine cycle of activity that takes one clock cycle to perform. The processing controlled by each state is described within the node representing that state. The arcs show the next state transitions.</p></blockquote><p>Fetch(3 CC)<br>Decode(1 CC)<br>继续按照时钟周期一步一步执行指令，直到结束，然后回到State1</p><h4 id="4-3-5-Halting-the-Computer-the-Trap-instruction">4.3.5 Halting the Computer(the Trap instruction)</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715081739606.png" alt="image-20230715081739606"></p><center>A block diagram of the clock circuit, consisting primarily of a clock generator and a RUN latch<center><h5 id="RUN-latch">RUN latch</h5><ul><li>Q = 1, output = 1. Q = 0, output = 0</li><li>Stopping the instruction cycle requires only clearing the RUN latch.</li></ul><blockquote><p><em>Question:</em> If a HALT instruction can clear the RUN latch, thereby stopping the instruction cycle, what instruction is needed to set the RUN latch, thereby reinitiating the instruction cycle? <em>Hint:</em> This is a trick question!</p><p>Answer: No! 因为在停止时钟周期后其他的指令都不再被执行，也就是说，即使你有一个恢复RUN latch的指令也不会被执行。</p></blockquote><h5 id="TRAP-Instruction">TRAP Instruction</h5><ul><li>In some older machines, it is done by executing a HALT instruction. In the LC-3, as in many other machines, it is done under control of the operating system.</li><li>if a user program requires help from the operating system, it requests that help with the TRAP instruction (opcode = 1111) and an eight-bit code called a <em>trap vector</em>, which identifies the help that the user program needs. The eight-bit code x25 tells the operating system that the program has finished executing and the computer can stop processing instructions.(用户通过TRAP指令向操作系统求助，依据trap vector来确定需要的帮助，可以实现如停止运行程序等操作)</li></ul><h2 id="Chapter-5-The-LC-3">Chapter 5 The LC-3</h2><h3 id="5-1-The-ISA-Overview">5.1 The ISA Overview</h3><blockquote><p>The ISA specifies all the information about the computer that the software has to be aware of. In other words, the ISA specifies everything in the computer that is available to a programmer when he/she writes programs in the com- puter’s own machine language.</p><p>The ISA specifies the memory organization, register set, and instruction set, including the opcodes, data types, and addressing modes of the instructions in the instruction set.</p></blockquote><h4 id="5-1-1-Memory-Organization">5.1.1 Memory Organization</h4><ul><li><p>address space:2^16^addressability:16bitsone word:16bits</p></li><li><p>LC-3 is <strong>word-addressable</strong></p></li><li><p>不是所有locations都用来存储数据</p></li></ul><h4 id="5-1-2-Register">5.1.2 Register</h4><blockquote><p>The most common type of temporary storage locations, and the one used in the LC-3, is a set of registers. Each register in the set is called a <strong><em>general purpose register</em> (GPR).</strong></p><p>PC和IR是有特殊用途的寄存器，或者NZP这三个存Condition codes的一位寄存器</p><p>The number of bits stored in each register is usually one word. In the LC-3, this means 16 bits.</p><p>Registers must be uniquely identifiable. The LC-3 specifies eight GPRs, each identified by a three-bit register number. They are referred to as R0, R1, … R7. Figure 5.1 shows a snapshot of the LC-3’s register set, sometimes called a <em>register file</em>, with the eight values 1, 3, 5, 7, −2, −4, −6, and −8 stored in R0, … R7, respectively.</p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715141711676.png" alt="image-20230715141711676" style="zoom:50%;"></blockquote><h4 id="5-1-3-Instruction-Set">5.1.3 Instruction Set</h4><blockquote><p>The instruction set is defined by its set of <strong>opcodes, <em>data types</em>, and <em>addressing modes</em>.</strong></p><p>The addressing modes determine where the operands are located. The data type is the representation of the operands in 0s and 1s.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715142431632.png" alt="image-20230715142431632" style="zoom: 50%;"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715142512633.png" alt="image-20230715142512633" style="zoom:50%;"></p><h4 id="5-1-4-Opcodes">5.1.4 Opcodes</h4><blockquote><p>The LC-3 ISA has 15 instructions, each identified by its unique opcode. The opcode is specified in bits [15:12] of the instruction. The opcode <code>1101</code> has been left unspecified, reserved for some future need.</p></blockquote><p>[Three kinds discussed as before](#4.3.1 The instruction)(operate, data movement, control)</p><ul><li>Operate instructions: ADD, AND, NOT</li><li>Data movement instructions: LD, LDI, LDR, LEA, ST, STR, STI</li><li>Control instructions: BR, JSR/JSRR, JMP, RTI, TRAP</li></ul><h4 id="5-1-5-Data-Types">5.1.5 Data Types</h4><p>16位二进制补码</p><h4 id="5-1-6-Addressing-Mode">5.1.6 Addressing Mode</h4><blockquote><p>An addressing mode is a mechanism for specifying where the operand is located.</p><p>An operand can generally be found in one of three places: in memory, in a register, or as a part of the instruction.</p></blockquote><ul><li><strong>Literal / Immediate operand</strong>: the operand is a part of the instrution</li><li>5 addressing modes (3 memory addressing modes)<ul><li>non-memory addresses: immediate, register</li><li>memory addresses: PC-relative, indirect, base+offset</li></ul></li></ul><h4 id="5-1-7-Condition-Codes-CC">5.1.7 Condition Codes(CC)</h4><blockquote><p>The LC-3 has three single-bit registers that are individually set (set to 1) or cleared (set to 0) each time one of the eight general purpose registers is written into as a result of execution of one of the <strong>operate instructions</strong> or one of the <strong>load instructions</strong>.</p><ul><li><p>Each operate instruction performs a computation and writes the result into a general purpose register.</p></li><li><p>Each load instruction reads the contents of a memory location and writes the value found there into a general purpose register.</p></li></ul></blockquote><ul><li><p>只有三种opcode(NOT AND ADD)和三种load指令会重设NZP的值。数据移动指令会根据数据内容重设，操作指令会根据计算结果重设NZP。</p></li><li><p>Note：<strong>LEA不改变NZP！</strong></p></li><li><p><strong>Three single-bit registers N(negative), Z(zero), P(positive)</strong></p></li></ul><blockquote><p>The set of three single-bit registers are referred to as <em>condition codes</em> because the condition of those bits are used to change the sequence of execution of the instructions in a computer program.</p><p>这些条件码在程序的运行中作为改变运行顺序的判断依据</p></blockquote><h3 id="5-2-Operate-Instructions-NOT-AND-ADD">5.2 Operate Instructions (NOT, AND, ADD)</h3><h5 id="NOT">NOT</h5><blockquote><p>the only operate instruction that performs a <em>unary</em> operation</p></blockquote><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715162011424.png" alt="image-20230715162011424" style="zoom:50%;"><h5 id="ADD-AND">ADD / AND</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715162112054.png" alt="image-20230715162112054"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715162126914.png" alt="image-20230715162126914"></p><h4 id="Immediates-Example">Immediates Example</h4><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715145935666.png" alt="image-20230715145935666" style="zoom:50%;"><h5 id="Applications">Applications</h5><ul><li><p>Subtract: R3 = R1 - R2<br>Take 2’s complement of R2, then add to R1.<br>(1) R2 = NOT(R2)<br>(2) R2 = R2 + 1<br>(3) R3 = R1 + R2</p></li><li><p>OR: R3 = R1 OR R2<br>Use DeMorgan’s Law – invert R1 and R2, AND, then invert result.<br>(1) R1 = NOT(R1)<br>(2) R2 = NOT(R2)<br>(3) R3 = R1 AND R2<br>(4) R3 = NOT(R3)</p></li><li><p>Register-to-register copy: R3 = R2<br>R3 = R2 + 0 (Add-immediate)</p></li><li><p>Initialize to zero: R1 = 0<br>R1 = R1 AND 0 (And-immediate)</p></li></ul><h4 id="The-LEA-instruction-Load-Effective-Address">The LEA instruction(Load Effective Address)</h4><blockquote><p>It does not really operate on data, it simply loads a register with an address. It clearly does not move data from memory to a register, nor is it a control instruction.</p><p>Note that the value to be loaded into the register does <strong>not</strong> involve any access to memory. …nor does it have any effect on the condition codes.（相当于直接把PC的内容复制到Register中）</p></blockquote><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715152410700.png" alt="image-20230715152410700" style="zoom:50%;"><ul><li>the LEA instruction is useful to initialize a register with an address that is very close to the address of the instruction doing the initializing.</li><li>把地址值写入到寄存器中，可以配合有base+offset寻址模式的指令使用</li><li>LEA不改变Condition codes</li></ul><h3 id="5-3-Data-Movement-Instructions">5.3 Data Movement Instructions</h3><blockquote><p>The process of moving information from memory to a register is called a <em>load</em>, and the process of moving information from a register to memory is called a <em>store</em>.</p></blockquote><ul><li>The LC-3 contains six instructions that move information: <strong>LD, LDR, LDI, ST, STR, and STI.</strong></li></ul><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715152627496.png" alt="image-20230715152627496"></p><ul><li><p>require two operands, a source and a destination.<br>One of these locations is a <strong>register,</strong> the other is <strong>a memory location or an input/output device.</strong>（需要两个操作数，一个是寄存器，另一个是内存地址或IO设备）</p></li><li><p>Bits [11:9] specify the register.</p><blockquote><p>If the instruction is a load, <em>DR</em> refers to the destination general purpose register that will contain the value after it is read from memory (at the completion of the instruction cycle). If the instruction is a store, <em>SR</em> refers to the register that contains the value that will be written to memory.</p></blockquote></li><li><p>Bits [8:0] contain the <em>address generation bits</em></p></li></ul><h4 id="5-3-1-PC-Relative-Mode">5.3.1 PC-Relative Mode</h4><ul><li>The memory address is computed by sign-extending bits [8:0] to 16 bits and adding the result to the incremented PC.</li><li>限制：只能读写LD和ST指令附近（-255～256）（PC++）的地址</li></ul><p><strong>LD and ST</strong></p><h4 id="5-3-2-Indirect-Mode">5.3.2 Indirect Mode</h4><blockquote><p>However, instead of this address being the <strong>address of the operand</strong> to be loaded or stored, it is <strong>the address</strong> of the address of the operand to be loaded or stored.</p></blockquote><ul><li>先通过PC-Relative获得目标地址（内存），再执行一次LD把目标内容存入寄存器。</li></ul><p><strong>LDI and STI</strong></p><h4 id="5-3-3-Base-offset-Mode">5.3.3 Base+offset Mode</h4><blockquote><p>The Base+offset mode is so named because the address of the operand is obtained by adding a sign-extended six-bit offset to a base register.</p></blockquote><p>[5:0] 6 bits offset<br>[8:6] base register</p><ul><li>Note that the Base+offset addressing mode also allows the address of the operand to be anywhere in the computer’s memory. (可以访问任何位置)</li></ul><p><strong>LDR and STR</strong></p><h3 id="5-4-Control-Instructions">5.4 Control Instructions</h3><blockquote><p>The LC-3 has five opcodes that enable the sequential execution flow to be broken: conditional branch, unconditional jump, subroutine call (sometimes called <em>function</em>), TRAP, and RTI (Return from Trap or Interrupt).</p></blockquote><h4 id="5-4-1-Conditional-Branches">5.4.1 Conditional Branches</h4><h5 id="BR-opcode-0000">BR(<code>opcode = 0000</code>)</h5><ul><li><p>LC-3 has three condition code registers:N – negativeZ – zeroP – positive (greater than zero)</p></li><li><p>Set by any instruction that writes a value to a register(ADD, AND, NOT, LD, LDR, LDI, LEA)</p></li><li><p>Exactly one will be set at all times (Based on the last instruction that altered a register)</p></li><li><p>If the set bit is specified, the branch is taken.<br>PC-relative addressing:target address is made by adding signed offset (IR[8:0])to current PC.<br>Note: PC has already been incremented by FETCH stage.<br>Note: Target must be within 256 words of BR instruction.</p></li><li><p>If the branch is not taken, the next sequential instruction is executed.</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715163512120.png" alt="image-20230715163512120"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715163518443.png" alt="image-20230715163518443"></p></li></ul><h5 id="JMP-opcode-1100">JMP(<code>opcode = 1100</code>)</h5><p>Target address is the contents of a register.<br>Allows any target address.</p><p>一般将<code>LEA</code>和<code>JMP</code>搭配使用，（因为可以通过ADD操作register）这样就可以到达任何一个地址（理论上）。单独看LEA+JMP和BR的操作范围其实没有区别，因为都是9bits的offset（在BR和LEA中确定），主要区别就是在灵活操作register（可以直接通过内存LD地址内容）。</p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715163622714.png" alt="image-20230715163622714"><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715163626760.png" alt="image-20230715163626760"></p><h5 id="TRAP-opcode-1111">TRAP(<code>opcode = 1111</code>)</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230715163705063.png" alt="image-20230715163705063"></p><table><thead><tr><th><strong>vector</strong></th><th><strong>routine</strong></th></tr></thead><tbody><tr><td><strong>x23</strong></td><td><strong>input  a character from the keyboard</strong></td></tr><tr><td><strong>x21</strong></td><td><strong>output  a character to the monitor</strong></td></tr><tr><td><strong>x25</strong></td><td><strong>halt  the program</strong></td></tr></tbody></table><p>The TRAP instruction, often called <em>service call</em>, is useful because it allows a programmer to get help from the operating system to do things that the typical programmer does not fully understand how to do.</p><h5 id="Two-Method-of-Loop-Control">Two Method of Loop Control</h5><ul><li>Counter</li><li>Sentinel<br>The end of a file is a “EOF”</li></ul><h3 id="5-6-The-Data-Path-Revisited">5.6 The Data Path Revisited</h3><h4 id="5-6-1-Basic-Component">5.6.1 Basic Component</h4><h5 id="The-Global-Bus">The Global Bus</h5><blockquote><p>This triangle (called a <em>tristate device</em>) allows the computer’s control logic to enable ==exactly one== supplier to provide information to the bus at any one time. The structure wishing to obtain the value being supplied can do so by asserting its LD.x (load enable) signal (recall our discussion of gated latches in Section 3.4.2). (LD指令是允许从BUS写入该单元)</p></blockquote><h2 id="Chapter-6-Programming">Chapter 6 Programming</h2><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716164938460.png" alt="image-20230716164938460"></p><h3 id="Code-for-Conditional">Code for Conditional</h3><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716165239913.png" alt="image-20230716165239913"></p><h3 id="Code-for-Iteration">Code for Iteration</h3><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716165325366.png" alt="image-20230716165325366"></p><h2 id="Chapter-7-Assembly-Language">Chapter 7 Assembly Language</h2><h3 id="7-1-Assembly-Language-Programming—Moving-Up-a-Level">7.1 Assembly Language Programming—Moving Up a Level</h3><ul><li>在一个高级语言程序被执行之前，会被翻译成多条ISA内的指令。</li></ul><h3 id="7-2-An-Assembly-Language-Program">7.2 An Assembly Language Program</h3><blockquote><p>The translation program is called an <em>assembler</em> (in this case the LC-3 assembler), and the translation process is called <em>assembly</em>.</p></blockquote><h4 id="7-2-1-Instructions">7.2.1 Instructions</h4><p><strong>Instructions</strong></p><p>4 parts: <code>Label   Opcode   Operands   ; Comment</code><br>Two of the parts (Label and Comment) are optional.</p><h5 id="7-2-1-1-Opcodes-and-Operands">7.2.1.1 Opcodes and Operands</h5><ul><li><p>mandatory</p></li><li><p>operands can be obtained from registers , memory or literal values in the instruction.</p></li><li><p>Register: explicitly represented</p></li><li><p>memory: the symbolic name of the memory location is explicitly represented</p></li><li><p>immediate operands: the actual value is explicitly represented</p><blockquote><p>A literal value must contain a symbol identifying the representation base of the number.</p><ul><li><code>#</code> for decimal</li><li><code>x</code> for hexadecimal</li><li><code>b</code> for binary</li></ul></blockquote></li></ul><h5 id="7-2-1-2-Label">7.2.1.2 Label</h5><blockquote><p><strong>Labels</strong> are symbolic names that are used to identify memory locations that are referred to explicitly in the program. In LC-3 assembly language, a label consists of from 1 to 20 alphanumeric characters (i.e., each character is a capital or lower- case letter of the English alphabet, or a decimal digit), starting with a letter of the alphabet.</p><p>other character strings that have specific meanings in an LC-3 program cannot be used as labels, like ADD, NOT, x1000, R4. Such not-allowed character strings are often referred to as <em>reserved words</em>.</p></blockquote><ul><li>two reasons for explicitly referring to a memory location</li></ul><ol><li>The location is the target of a branch instruction.</li><li>The location contains a value that is loaded or stored.</li></ol><ul><li>If a location in the program is not explicitly referenced, then there is no need to give it a label.</li></ul><h5 id="7-2-1-3-Comments">7.2.1.3 Comments</h5><ul><li>It is important to make comments that provide additional insight and do not just restate the obvious.</li><li>不要简单地描述一个指令，要给出这个指令的作用（在大局观下）</li></ul><h4 id="7-2-2-Psudo-Ops-Assembler-Directives">7.2.2 Psudo-Ops(Assembler Directives)</h4><blockquote><p>Rather, the pseudo-op is strictly a message from the assembly language program- mer to the assembler to help the assembler in the assembly process. Once the assembler handles the message, the pseudo-op is discarded.</p><p>The LC-3 assembly language contains five pseudo-ops that we will find useful in our assembly language programming: <code>.ORIG</code>,<code> .FILL</code>,<code> .BLKW</code>,<code> .STRINGZ</code>, and<code> .END</code>.</p></blockquote><h5 id="7-2-2-1-ORIG">7.2.2.1 <code>.ORIG</code></h5><blockquote><p>.ORIG tells the assembler where in memory to place the LC-3 program.</p></blockquote><h5 id="7-2-2-2-FILL">7.2.2.2 <code>.FILL</code></h5><blockquote><p>.FILL tells the assembler to set aside the next location in the program and initialize it with the value of the operand. The value can be either a number or a label.</p></blockquote><h5 id="7-2-2-3-BLKW">7.2.2.3 <code>.BLKW</code></h5><blockquote><p>.BLKW tells the assembler to set aside some number of sequential memory locations (i.e., a <strong>BL</strong>oc<strong>K</strong> of <strong>W</strong>ords) in the program. The actual number is the operand of the .BLKW pseudo-op.</p></blockquote><p>当要使用的数值还未知时来使用。</p><h5 id="7-2-2-4-STRINGZ">7.2.2.4 <code>.STRINGZ</code></h5><blockquote><p>.STRINGZ tells the assembler to initialize a sequence of <em>n</em> + 1 memory locations. The argument is a sequence of <em>n</em> characters inside double quotation marks.</p></blockquote><ul><li>The final word of memory is initialized to 0. The last word, containing x0000, provides a convenient sentinel for processing the string of ASCII codes.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  .ORIG    x3010</span><br><span class="line">HELLO .STRINGZ &quot;Hello, World!&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7-2-2-5-END">7.2.2.5 <code>.END</code></h5><blockquote><p>END tells the assembler it has reached the end of the program and need not even look at anything after it. That is, any characters that come after .END will not be processed by the assembler.</p></blockquote><ul><li>It is simply a delimiter（定界符）—it marks the end of the program. It is a message from the programmer, telling the assembler where the assembly language program ends.</li></ul><h3 id="7-3-The-Assembly-Process">7.3 The Assembly Process</h3><h4 id="7-3-2-A-Two-Pass-Process">7.3.2 A Two-Pass Process</h4><p>在一对一的翻译中，汇编器很可能遇到Label，汇编器不知道这些抽象地址的含义，于是就需要一个symbol table。</p><blockquote><p>To prevent this from occurring, the assembly process is done in two complete passes (from beginning to .END) through the entire assembly language program.</p></blockquote><blockquote><p>The objective of the first pass is to identify the actual binary addresses corresponding to the symbolic names (or labels). This set of correspondences is known as the <em>symbol table</em>.</p></blockquote><ul><li><p>In pass 1, we construct the symbol table.</p></li><li><p>In pass 2, we translate the individual assembly language instructions into their corresponding machine language instructions.</p></li></ul><h4 id="7-3-3-The-First-Pass-Creating-the-Symbol-Table">7.3.3 The First Pass: Creating the Symbol Table</h4><blockquote><p>We keep track of the location assigned to each instruction by means of a location counter (LC). The LC is initialized to the address specified in .ORIG, that is, x3000.</p><p>The assembler examines each instruction in sequence and increments the LC once for each assembly language instruction. If the instruction examined contains a label, a symbol table entry is made for that label, specifying the current contents of LC as its address.（LC记录着当前指令的地址，并且随着指令的移动increment，如果遇到Label，则把PC的值填入symbol table）</p></blockquote><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717153526409.png" alt="image-20230717153526409" style="zoom:50%;"><h4 id="7-3-4-The-Second-Pass-Generating-the-Machine-Language-Program">7.3.4 The Second Pass: Generating the Machine Language Program</h4><ul><li><p>计算offset：目标地址 - incremented LC</p><blockquote><p><em>Note:</em> In order to use the LD instruction, it is necessary that the source of the load, in this case the address whose label is PTR, is not more than +256 or −255 memory locations from the LD instruction itself.</p></blockquote></li></ul><h3 id="7-4-Beyond-the-Assembly-of-a-Single-Assembly-Language-Program">7.4 Beyond the Assembly of a Single Assembly Language Program</h3><h4 id="7-4-1-The-Executable-Image">7.4.1 The Executable Image</h4><blockquote><p>When a computer begins execution of a program, the entity being executed is called an <em>executable image</em>.</p><p>The executable image is created from modules often created independently by several different programmers. Each module is trans- lated separately into an object file.</p></blockquote><h4 id="7-4-2-More-than-One-Object-File">7.4.2 More than One Object File</h4><blockquote><p>If the LC-3 assembly language had the pseudo-op .EXTERNAL, and if we had designated STARTofFILE as .EXTERNAL, the LC-3 assembler would be able to create a symbol table entry for STARTofFILE, and instead of assigning it an address, it would mark the symbol as belonging to another module.</p></blockquote><p>编译时单独编译，在链接时处理下<code>.EXTERNAL</code>的地址问题</p><h2 id="Chapter-8-Data-Structures">Chapter 8 Data Structures</h2><blockquote><p>A company’s organization chart and a list of items arranged in alphabetical order are two examples. We call these complex items of information <em>abstract data types</em>, or more colloquially <em>data structures</em>.</p></blockquote><h3 id="8-1-Subroutines-Functions-Procedures">8.1 Subroutines(Functions)(Procedures)</h3><ul><li><strong>libraries</strong>: The collections of fragments that are used multiple times are available to user programmers to free them from having to write their own.</li><li><strong>Target</strong>: To enable the programmer to write the code more efficiently</li></ul><h4 id="8-1-1-The-Call-Return-Mechanism">8.1.1 The Call/Return Mechanism</h4><blockquote><p>We refer to the program that contains the call as the <em>caller</em>, and the subroutine that contains the return as the <em>callee</em>.</p></blockquote><ul><li>这种机制有两个指令<ul><li><p>JSR®：1. 往PC内装入subroutine的起始地址。(Loads PC, overwriting the incremented PC that was loaded during FETCH phase of the JSR® instruction.)2.往R7内装入JSR®下一条指令的地址(Store the incremented PC into R7.)</p><blockquote><p>We call the address we come back to the <em>return linkage</em>.</p></blockquote></li><li><p>JMP R7：是subroutine的最后一个指令</p></li></ul></li></ul><h5 id="8-1-2-JSR®">8.1.2 JSR®</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716193427656.png" alt="image-20230716193427656"></p><p>opcode: 0100Bit[11]: addressing mode – 1 PC-relative 0 Base+offset</p><ul><li><p>JSR和BR类似，只是有11位来计算偏移PC的地址，能到达更远的地址</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716193733422.png" alt="image-20230716193733422"></p></li><li><p>JSRR和JMP类似，从一个基准寄存器中读取地址，能够实现任意地方的跳转</p></li><li><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716193725118.png" alt="image-20230716193725118"></p></li></ul><h4 id="8-1-3-Saving-and-Restoring-Registers">8.1.3 Saving and Restoring Registers</h4><ul><li><p>**为什么要保存？**1.为了防止CALLER写入寄存器的数据被subroutine执行过程中新写入的数据覆盖，我们需要在subroutine的第一部分存储registers中的数据到memory中，对应到SaveR1，SaveR2，SaveR3。2.我们调用递归函数时寄存器绝对不能复用，调用前或调用时保存。</p></li><li><p>**什么时候保存？**调取子进程前或调用时保存。在返回源程序前，返还这些数据回Reg。</p></li></ul><blockquote><p>We call this technique <em>==callee save==</em> because the subroutine (i.e., the callee) saves and restores the registers.</p><p>这个操作需要subroutine来实现，因为subroutine知道它需要用到哪些REG。</p></blockquote><p>但是对于R7来说，需要CALLER来存储，因为R7的内容会在执行JMP START时被毁坏。</p><blockquote><p>We call this <em>==caller save==</em> because the calling program saves and restores the register value.</p></blockquote><ul><li><p>How to decide to use which save?</p><blockquote><p>The one who knows the register will be “polluted” or overwritten <strong>should save the values</strong>.</p></blockquote></li></ul><h4 id="8-1-4-Library-Routines">8.1.4 Library Routines</h4><blockquote><p>They are legitimately advertised as <em>productivity enhancers</em> since they allow the application programmer to use them without having to know or learn much of their inner details.</p></blockquote><h3 id="8-2-The-Stack">8.2 The Stack</h3><h4 id="8-2-1-An-Abstract-Data-Type">8.2.1 An <a href="https://zh.wikipedia.org/zh-cn/%E6%8A%BD%E8%B1%A1%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5">Abstract Data Type</a></h4><blockquote><p>An abstract data type is a storage mechanism that is defined by the operations performed on it and not at all by the specific manner in which it is implemented.</p></blockquote><blockquote><p>The concept of a stack is the specification of how it is to be <em>accessed</em>.</p><p>That is, the defining notion of a stack is that the <strong>last</strong> thing you stored in the stack is the <strong>first</strong> thing you remove from it.</p><p>Simply put: Last In, First Out, or <strong>LIFO</strong>.</p></blockquote><blockquote><p>We say we <em><strong>push</strong></em> an element onto the stack when we insert it. We say we <em><strong>pop</strong></em> an element from the stack when we remove it.</p></blockquote><blockquote><p>A distinguishing feature of the stack of Figure 8.8 is that, like the quarters in the coin holder, as each value is added or removed, <strong>all the other values already on the stack move</strong>.</p></blockquote><p>Two Examples：the coin holder, the hardware datas</p><ul><li>One modle</li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230719183327274.png" alt="image-20230719183327274"></li><li>each value is added or removed, <strong>all the other values already on the stack move</strong>.</li></ul><h4 id="Implementation-in-Memory">Implementation in Memory</h4><ul><li>This stack consists of a sequence of memory locations along with a mechanism, called the <em><strong>stack pointer</strong></em>, which keeps track of the <strong>top</strong> of the stack. We use R6 to contain the address of the top of the stack. That is, in the LC-3, R6 is the stack pointer.</li></ul><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716210356166.png" alt="image-20230716210356166"></p><p>Note that the values inserted into the stack are stored in memory loca- tions having decreasing addresses. We say the stack <em>grows toward zero</em>.</p><blockquote><p>when values are pushed and popped to and from a stack implemented in sequential memory locations, the data already stored on the stack <strong>does not physically move</strong>.(最后一张图中pop了头两个元素，但是数值仍然保存在内存中，虽然不能被访问if we obey the rules)</p><p>The fancy name for “the rules” is the <em>stack protocol</em>.</p></blockquote><h5 id="Push">Push</h5><p><strong>Push</strong> We push a value onto the stack by executing the two-instruction sequence</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PUSH ADD R6,R6,#-1</span><br><span class="line">     STR R0,R6,#0 ; 先把数据存在R0中</span><br></pre></td></tr></table></figure><blockquote><p>That is, to push a value onto the stack, we first load that value into R0. Then we decrement R6, which contained the previous top of the stack. Then we execute STR R0,R6,#0, which stores the contents of R0 into the memory location whose address is in R6.</p></blockquote><h5 id="Pop">Pop</h5><p><strong>Pop</strong> To pop a value from the stack, the value is read and the stack pointer is incremented. The following two-instruction sequence</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POP         LDR   R0,R6,#0</span><br><span class="line">            ADD   R6,R6,#1</span><br></pre></td></tr></table></figure><h5 id="Underflow">Underflow</h5><blockquote><p>Attempting to pop items that have not been previously pushed results in an <em>underflow</em> situation.</p></blockquote><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230716212150938.png" alt="image-20230716212150938" style="zoom:50%;"><p>用R5来存储underflow information。如果R5内的数据需要保护，要在JSR之前 caller save</p><p>The Pop Routine</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POP      AND     R5,R5,#0</span><br><span class="line">         LD      R1,EMPTY</span><br><span class="line">         ADD     R2,R6,R1</span><br><span class="line">         BRz  Failure </span><br><span class="line">         LDR  R0,R6,#0 </span><br><span class="line">         ADD  R6,R6,#1 </span><br><span class="line">         RET</span><br><span class="line">Failure  ADD  R5,R5,#1 </span><br><span class="line"> RET</span><br><span class="line">EMPTY    .FILL   xC000 ; EMPTY &lt;-- -x4000</span><br></pre></td></tr></table></figure><h5 id="Overflow">Overflow</h5><blockquote><p>Since we cannot store values where there is no space, we have an <em>overflow</em> situation.(没有足够的空间给数据存储)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PUSH       AND     R5,R5,#0</span><br><span class="line">           LD      R1,MAX</span><br><span class="line">           ADD R2,R6,R1 BRz </span><br><span class="line">       ADD R6,R6,#-1 </span><br><span class="line">           STR R0,R6,#0 </span><br><span class="line">           RET</span><br><span class="line">Failure    ADD R5,R5,#1 RET</span><br><span class="line">MAX        .FILL   xC005 ; MAX &lt;-- -x3FFB</span><br></pre></td></tr></table></figure><h3 id="8-3-Recursion">8.3 Recursion</h3><blockquote><p>Recursion is a mechanism for expressing a function <em>in terms of itself</em>.</p></blockquote><p>“尾部递归”可以使用“迭代”来替换。 学过数据结构之后，对这个应该不陌生。</p><p>递归的优点在于易于理解；迭代的优点在于效率高。如何选择取决于你在“易于理解”和“效率”中如何作出权衡。</p><p>递归函数调用涉及一些运行时开销，包括参数必须压到堆栈中、为局部变量分配内存、寄存器的值必须保存等等，并且在每次调用返回时，上述保存操作必须还原，恢复成调用前的样子。迭代的实现方式开销显然要小。所以在可理解性相差不大的情况下，为了保证效率应该优先选择迭代。</p><h4 id="8-3-1-Bad-Example-Number-1-Factorial">8.3.1 Bad Example Number 1: Factorial</h4><blockquote><p>Every recursive subroutine must have such an initial test to see if we should execute the recursive call.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717081239448.png" alt="image-20230717081239448"></p><p>不能正常实现！因为R7在嵌套调用的过程中会被不断覆盖！</p><blockquote><p>We can solve this problem by pushing the address A+1 onto a <strong>stack</strong> before executing JSR FACT at address B. After we subsequently return to address B+1, we can then pop the stack and load the address A+1 into R7 before we execute the instruction RET back to the main program.</p></blockquote><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717081400567.png" alt="image-20230717081400567" style="zoom: 67%;"><p>还是不能实现，因为R1里暂存的n值也会不断被改写，其实本质上是SaveR1里面的值被不断改写。</p><blockquote><p>We can solve this problem with a stack also. That is, instead of moving the value n to R1 before loading n-1 into R0, we push n onto the stack and then pop it when we need it after returning from the subroutine with (n-1)! in R0.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717082629734.png" alt="image-20230717082629734"></p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717082709185.png" alt="image-20230717082709185"></p><p>是否可以节省一次压栈？Push n和Push R1不是重复了吗？</p><h4 id="8-1-2-Fibonacci-An-Even-Worse-Example">8.1.2 Fibonacci(An Even Worse Example)</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717083956500.png" alt="image-20230717083956500"></p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717084022418.png" alt="image-20230717084022418"></p><p>对于求阶乘和斐波那契数列来说，递归都比循环算法麻烦</p><h4 id="8-1-3-A-Maze-Good-example">8.1.3 A Maze(Good example)</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717084352371.png" alt="image-20230717084352371"></p><p>The words are stored in what we call <em>row major</em> order; that is, row 1 is stored, then row 2, then row 3, etc.</p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717084553259.png" alt="image-20230717084553259"></p><p><code>BREADCRUMB</code> 是为了防止重复遍历某一个格子形成死循环</p><h3 id="8-4-The-Queue">8.4 The Queue</h3><blockquote><p>The defining property of the abstract data type <em>queue</em> is <strong>FIFO</strong>. FIFO stands for “First in First out.”</p><p>We need to keep track of two ends of the storage structure: a FRONT pointer for servicing (i.e., removing elements from the front of the queue) and a REAR pointer for entering (i.e., inserting into the rear of the queue).</p><p>We arbitrarily assign the FRONT pointer to the location <strong>just before</strong> the first element of the queue. (头指针指的是第一个元素之前的地址)</p><p>We assign the REAR pointer to the location containing the most recent element that was added to the queue.</p></blockquote><h4 id="8-4-1-The-Basic-Operations-Remove-from-Front-Insert-at-Rear">8.4.1 The Basic Operations: Remove from Front, Insert at Rear</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717104818038.png" alt="image-20230717104818038"></p><p><strong>Remove</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADD   R3,R3,#1</span><br><span class="line">LDR   R0,R3,#0</span><br></pre></td></tr></table></figure><p><strong>Insert</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADD   R4,R4,#1</span><br><span class="line">STR   R0,R4,#0</span><br></pre></td></tr></table></figure><h4 id="8-4-2-Wrap-Around">8.4.2 Wrap-Around</h4><p>循环队列？</p><h5 id="Remove">Remove</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717104405823.png" alt="image-20230717104405823"></p><h5 id="Load">Load</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717104419995.png" alt="image-20230717104419995"></p><h4 id="8-4-3-How-Many-Elements-Can-We-Store-in-a-Queue">8.4.3 How Many Elements Can We Store in a Queue?</h4><blockquote><p>That is, if inserting an nth element into the queue would cause FRONT to equal REAR, we do not allow that insertion. We declare the queue full when there are n-1 elements in the queue.</p></blockquote><p>如果存满n个数值，那么满队列和空队列的情形是一样的，即，FRONT和REAR指在同一个内存上，所以我们仅允许存n-1个元素在n个地址内。不允许出现REAR和FRONT相等的情形。</p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717105511620.png" alt="image-20230717105511620"></p><h4 id="8-4-4-Tests-for-Underflow-Overflow">8.4.4 Tests for Underflow, Overflow</h4><blockquote><p>If the queue is empty and we try to remove an element, we have an <em>underflow</em> condition.</p><p>If the queue is full and we try to insert an element, we have an overflow condition.</p><p>我们依然用R5来存储是否成功，只要检测R3 是否等于 R4</p></blockquote><ul><li>if FRONT = REAR, the queue is empty</li><li>if FRONT = REAT + 1, the queue will overflow</li></ul><h3 id="8-5-Character-Strings">8.5 Character Strings</h3><p>A sequence of keyboard characters (letters, digits, and other symbols) is organized as a one-dimensional array of ASCII codes, usually representing a person’s name, address, or some other alphanumeric string.</p><ul><li>A common use of a character string is to identify a body of information associated with a particular person.</li><li>**A Character String Representing an “Integer.”**需要判断是否每个字符都是一个decimal digit</li></ul><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717131318020.png" alt="image-20230717131318020"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">; Input: R0 contains the starting address of the character string ; Output: R5=0, success; R5=1, failure.</span><br><span class="line">;</span><br><span class="line">TEST_INTEGER ST R1,SaveR1 ; Save registers needed by subroutine ST R2,SaveR2</span><br><span class="line"> ST R3,SaveR3</span><br><span class="line"> ST R4,SaveR4</span><br><span class="line"> AND  R5,R5,#0   ; Initialize success code to R5=0, success</span><br><span class="line"> LD   R2,ASCII_0 ; R2=xFFD0, the negative of ASCII code x30</span><br><span class="line"> LD   R3,ASCII_9 ; R3=xFFC7, the negative of ASCII code x39</span><br><span class="line">;</span><br><span class="line">NEXT_CHAR LDR  R1,R0,#0 ; Load next char</span><br><span class="line"> BRz  SUCCESS;这一步！！记得每次Load后要通过BRz判断是否读完。</span><br><span class="line"> ADD  R4,R1,R2</span><br><span class="line">  BRn  BAD</span><br><span class="line">  ADD  R4,R1,R3</span><br><span class="line">  BRp  BAD</span><br><span class="line"> ADD  R0,R0,#1</span><br><span class="line"> BR   NEXT_CHAR</span><br><span class="line">;</span><br><span class="line">BAD  ADD R5,R5,#1 </span><br><span class="line">SUCCESS LD R4,SaveR4 </span><br><span class="line"> LD R3,SaveR3 </span><br><span class="line"> LD R2,SaveR2 </span><br><span class="line"> LD R1,SaveR1 </span><br><span class="line"> RET</span><br><span class="line"></span><br><span class="line">ASCII_0.FILL xFFD0</span><br><span class="line">ASCII_9.FILL xFFc7</span><br><span class="line">SaveR1.BLKW 1</span><br><span class="line">SaveR2.BLKW 1</span><br><span class="line">SaveR3.BLKW 1</span><br><span class="line">SaveR4.BLKW 1</span><br></pre></td></tr></table></figure><h4 id="Pointer">Pointer</h4><p>Recall that R5, the base pointer, points to the first declared local variable, or object in this case.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AND R0, R0, #0 ; Clear R0</span><br><span class="line">ADD R0, R0, #4 ;R0=4</span><br><span class="line">STR R0, R5, #0 ; object = 4</span><br><span class="line">ADD R0, R5, #0  ; Generate memory address of object</span><br><span class="line">STR R0, R5, #-1 ;Ptr = &amp;object</span><br></pre></td></tr></table></figure><h2 id="Chapter-9-I-O">Chapter 9 I/O</h2><h3 id="9-1-Privilege-Priority-and-the-Memory-Address-Space">9.1 Privilege, Priority, and the Memory Address Space</h3><h4 id="9-1-1-Privilege-and-Priority">9.1.1 Privilege and Priority</h4><h5 id="9-1-1-1-Privilege">9.1.1.1 Privilege</h5><blockquote><p>Privilege is all about the right to do something, such as execute a particular instruction or access a particular memory location.</p></blockquote><ul><li>我们不想让任意程序都能执行HALT指令来停机，也不希望任意的程序都能干扰已有的数据结构或者代码。所以不是所有程序都能够有权利来执行所有的指令，也不是所有的程序都有权利访问所有的内存。<br>Not all computer programs have the right to execute all instructions.<br>Similarly, some memory locations are only available to the operating system.</li><li>We designate every computer program as either privileged or unprivileged. We often say <em>supervisor privilege</em> to indicate privileged.</li><li>We say a program is executing in Supervisor mode to indicate privileged, or User mode to indicate unprivileged.</li><li><strong>Access Control Violation (ACV) exception</strong> An <strong>ACV exception</strong> occurs if a process attempts to access a location in privileged memory (either a location in system space or a device register having an address from xFE00 to xFFFF) while operating in User mode.</li></ul><h5 id="9-1-1-2-Priority">9.1.1.2 Priority</h5><blockquote><p>Priority is all about the urgency of a program to execute. Every program is assigned a priority, specifying its urgency as compared to all other programs. This allows programs of greater urgency to interrupt programs of lesser urgency.</p></blockquote><p>random program may be assigned a priority of 0. Keyboard may be assigned a priority of 4.</p><h5 id="9-1-1-3-Two-Orthogonal-Notions">9.1.1.3 Two Orthogonal Notions</h5><h5 id="9-1-1-4-The-Processor-Status-Register-PSR">9.1.1.4 The Processor Status Register (PSR)</h5><blockquote><p>The other register, the Processor Status Register (PSR), is shown in Figure 9.1. It contains the privilege and priority assigned to that program.</p></blockquote><p>PSR[15] = 0 supervisor privilege<br>PSR[15] = 1 unprivilieged</p><p>PLR[10:8] priority level PL0[low]~PL7[high]</p><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717164225896.png" alt="image-20230717164225896"></p><h4 id="9-1-2-Organization-of-Memory">9.1.2 Organization of Memory</h4><h5 id="System-Space">System Space</h5><blockquote><p>Locations ==x0000 to x2FFF== are privileged memory locations. They contain the various data structures and code of the operating system. They require supervisor privilege to access. They are referred to as <em>system space</em>.</p></blockquote><h5 id="User-Space">User Space</h5><blockquote><p>Locations ==x3000 to xFDFF== are unprivileged memory locations. Supervisor privilege is not required to access these memory locations. All user programs and data use this region of memory.</p></blockquote><h5 id="I-O-page">I/O page</h5><blockquote><p>Addresses ==xFE00 to xFFFF== are used to identify registers that take part in input and output functions and some special registers associated with the processor.</p><ul><li>PSR–xFFFC,</li><li>processor’s Master Control Register(MCR)–xFFFE</li></ul><p>Access to those registers requires <strong>supervisor privilege</strong>.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230717164834745.png" alt="image-20230717164834745"></p><ul><li><p>two stacks(位置是怎么规定的？)</p><ul><li>a <em>supervisor stack</em> in system space. It is controlled by the operating system and requires supervisor privilege to access.(x0000~x2FFF)</li><li>a <em>user stack</em> in user space. The user stack is controlled by the user program and does not require privilege to access.(x3000~xFDFF)</li></ul></li><li><p>Each has a stack pointer, Supervisor Stack Pointer (SSP) and User Stack Pointer (USP), to indicate the top of the stack.</p></li><li><p>Since a program can only execute in Supervisor mode or User mode at any one time, only one of the two stacks is active at any one time.</p></li><li><p>Register 6 is generally used as the stack pointer (SP) for the active stack. Two <strong>registers</strong>, Saved_SSP and Saved_USP, are provided to save the SP not in use.</p></li></ul><h3 id="9-2-Input-Output">9.2 Input/Output</h3><blockquote><p>Even the simplest I/O devices usually need at least two registers: <strong>one</strong> to hold the data being transferred between the device and the computer, and <strong>one</strong> to indicate status information about the device. An example of status information is whether the device is available or is it still busy processing the most recent I/O task.</p></blockquote><h4 id="9-2-1-Some-Basic-Characteristics-of-I-O">9.2.1 Some Basic Characteristics of I/O</h4><h5 id="9-2-1-1-Memory-Mapped-I-O-vs-Special-I-O-Instructions">9.2.1.1 Memory-Mapped I/O vs. Special I/O Instructions</h5><ul><li><p>Some computers use special input and output instructions.</p><blockquote><p>The 12-bit PDP-8 instruction contained a three-bit opcode. If the opcode was 110, an I/O instruction was indicated. The remaining nine bits of the PDP-8 instruction identified which I/O device register and what operation was to be performed.</p></blockquote></li><li><p>Most computers prefer to use the same data movement instructions that are used to move data in and out of memory.</p><blockquote><p>The original PDP-11 ISA had a 16-bit address space. All addresses wherein bits [15:13] = 111 were allocated to I/O device registers. That is, of the 216 addresses, only 57,344 corresponded to memory locations. The remaining 213 were memory-mapped I/O addresses.</p></blockquote></li><li><p>因为使用相同的data movement指令，所以输入输出设备的寄存器也要像内存一样有独一无二的定位。因此，每个设备寄存器都会有一个来自内存的地址。</p></li><li><p>That is, the I/O device registers are <em>mapped</em> to a set of addresses that are allocated to I/O device registers rather than to memory locations. Hence the name <em>memory-mapped I/O</em>.</p></li></ul><h5 id="9-2-1-2-Asynchronous-vs-Synchronous">9.2.1.2 Asynchronous vs. Synchronous</h5><ul><li><p>人类打字的速度跟不上计算机的Clock Cycle。即使设置了固定的慢速，打字速度也会因为时间而变化。所以都是行不通的。也就是说，人类打字和电脑时asynchronous的。</p></li><li><p>The point is that I/O devices usually operate at speeds very different from that of a microprocessor, and <strong>not in lockstep</strong>. We call this characteristic <strong>asynchronous</strong>.</p></li><li><p>To control processing in an asynchronous world requires some protocol or <em>handshaking</em> mechanism.</p><blockquote><ul><li>In the case of the keyboard, we will need a one-bit status register, called a <em>flag,</em> to indicate if someone has or has not typed a character.</li><li>In the case of the monitor, we will need a one-bit status register to indicate whether or not the most recent character sent to the monitor has been displayed, and so the monitor can be given another character to display.</li><li>These flags are the simplest form of <em>synchronization</em>.</li></ul></blockquote></li><li><p>A single flag, called the <em>ready bit</em>（输入时置1，电脑读取时置0）</p></li><li><p>但是如果人类的输入能固定在一个精确的间隔，比如200million个时钟周期，那么人和电脑就是同步的（synchronous）</p></li></ul><h5 id="9-2-1-3-Interrupt-Driven-vs-Polling">9.2.1.3 Interrupt-Driven vs. Polling</h5><blockquote><ul><li>This is called <em>interrupt-driven I/O</em>, where the keyboard controls the interaction.</li><li>Or, does the processor control the interaction, specifically by interrogating (usually, again and again) the ready bit until it (the processor) detects that the ready bit is set. At that point, the processor knows it is time to read the device register.</li></ul></blockquote><blockquote><p>中断驱动就是将CPU从繁忙等待的繁琐中解脱出来。在发送完一个或一批数据后，CPU就去忙别的事情。I/O设备处理完这批数据后，向CPU发出中断。CPU响应中断后再发送下一批数据。具体来说，中断驱动I/O的过程如下：</p><p>1）CPU初始化I/O并启动第一次I/O操作。<br>2）CPU去忙别的事情。<br>3）当I/O完成时，CPU将被中断。<br>4）CPU处理中断。<br>5）CPU恢复被中断的程序。</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA3MTE0OTU=,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p><h4 id="9-2-2-Input-from-the-Keyboard">9.2.2 Input from the Keyboard</h4><h5 id="9-2-2-1-Basic-Input-Registers-KBDR-and-KBSR">9.2.2.1 Basic Input Registers (KBDR and KBSR)</h5><ul><li>处理输入需要两样东西：1.数据寄存器 2.一种同步化机制来使处理器知道有输入发生</li></ul><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718150312149.png" alt="image-20230718150312149" style="zoom:50%;"><ul><li>In the case of KBDR, bits [7:0] are used for the data, and bits [15:8] contain x00. In the case of KBSR, bit [15] contains the synchronization mechanism, that is, the ready bit.</li></ul><h5 id="9-2-2-2-The-Basic-Input-Service-Routine">9.2.2.2 The Basic Input Service Routine</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">STARTLDI R1, A </span><br><span class="line">BRzp START ; poll the ready bit</span><br><span class="line">LDI R0, B </span><br><span class="line">BRnzp NEXT_TASK </span><br><span class="line">A.FILL xFE00 ;the memory-mapped address of KBSR</span><br><span class="line">B.FILL xFE02 ; KBDR</span><br></pre></td></tr></table></figure><h5 id="9-2-2-3-Implementation-of-Memory-Mapped-Input">9.2.2.3 Implementation of Memory-Mapped Input</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718150925152.png" alt="image-20230718150925152"></p><p>the EXECUTE phase</p><ol><li>MAR is loaded with address of a device register</li><li>The address control logic selects the the corresponding device register to provide input to the MDR</li><li>The destination register is loaded with the contents of MDR</li></ol><h4 id="9-2-3-Output-to-the-Monitor">9.2.3 Output to the Monitor</h4><h5 id="9-2-3-1-Basic-Output-Registers-DDR-and-DSR">9.2.3.1 Basic Output Registers (DDR and DSR)</h5><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718151252935.png" alt="image-20230718151252935" style="zoom:50%;"><ul><li>In the case of DDR, bits [7:0] are used for data, and bits [15:8] contain x00. In the case of DSR, bit [15] contains the synchronization mechanism, that is, the ready bit.</li></ul><h5 id="9-2-3-2-The-Basic-Output-Service-Routine">9.2.3.2 The Basic Output Service Routine</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">STARTLDI R1, A</span><br><span class="line">BRzp START</span><br><span class="line">STI R0, B</span><br><span class="line">BRnzp NEXT_TASK</span><br><span class="line">A.FILL xFE04 ; DSR</span><br><span class="line">B.FILL xFE06 ; DDR</span><br></pre></td></tr></table></figure><ul><li>Note the use of LDI and the indirect access to xFE04, the memory-mapped address of DSR.</li><li>Note the use of the STI instruction, which stores R0 into xFE06, the memory-mapped address of DDR.</li></ul><h5 id="9-2-3-3-Implementation-of-Memory-Mapped-Output">9.2.3.3 Implementation of Memory-Mapped Output</h5><ol><li>MAR is loaded with the address of a device register (through indirect addressing mode)</li><li>The address control logic asserts the load enable signal of DDR</li><li>DDR is written</li></ol><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718152604350.png" alt="image-20230718152604350"></p><h5 id="9-2-3-4-Example-Keyboard-Echo">9.2.3.4 Example: Keyboard Echo</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">STARTLDI R1, KBSR </span><br><span class="line">BRzp START ; poll the redit bit</span><br><span class="line">LDI R0, KBDR</span><br><span class="line">ECHOLDI R1, DSR</span><br><span class="line">BRzp ECHO</span><br><span class="line">STI R0, DDR</span><br><span class="line">BRnzp NEXT_TASK </span><br><span class="line">KBSR.FILL xFE00</span><br><span class="line">KBDR.FILL xFE02</span><br><span class="line">DSR.FILL xFE04</span><br><span class="line">DDR.FILL xFE06</span><br></pre></td></tr></table></figure><h5 id="9-2-4-A-More-Sophisticated-Input-Routine">9.2.4 A More Sophisticated Input Routine</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">LD R2, Newline</span><br><span class="line">L1LDI R3, DSR</span><br><span class="line">BRzp L1</span><br><span class="line">STI R2, DDR</span><br><span class="line">LEA R1, Prompt</span><br><span class="line">LOOPLDR R0, R1, #0</span><br><span class="line">BRz Input</span><br><span class="line">L2LDI R2, DSR</span><br><span class="line">BRzp L2</span><br><span class="line">STI R0, DDR</span><br><span class="line">ADD R1, R1, #1</span><br><span class="line">BRnzp LOOP</span><br><span class="line">Input LDI R3, KBSR</span><br><span class="line">BRzp Input</span><br><span class="line">LDI R0, KBDR</span><br><span class="line">L3LDI R3, DSR</span><br><span class="line">BRzp L3</span><br><span class="line">STI R0, DDR</span><br><span class="line">L4LDI R3, DSR</span><br><span class="line">BRzp L4</span><br><span class="line">STI R2, DDR</span><br><span class="line">DSR .FILL xFE04</span><br><span class="line">DDR.FILL xFE06</span><br><span class="line">KBSR.FILL xFE00</span><br><span class="line">KBDR .FILL xFE02</span><br><span class="line">Newline .FILL x000A</span><br><span class="line">Prompt.STRINGZ &quot;Input a character &gt;&quot;</span><br></pre></td></tr></table></figure><h4 id="9-2-5-Implementation-of-Memory-Mapped-I-O-Revisited">9.2.5 Implementation of Memory-Mapped I/O, Revisited</h4><blockquote><p>We have also learned that in order to support interrupt-driven I/O, the two status registers must be writeable as well as readable.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718155321245.png" alt="image-20230718155321245"></p><ul><li>The Address Control Logic Block controls the input or output operation.</li><li><code>MIO.EN</code> indicates whether a data movement from/to memory or I/O is to take place this clock cycle.</li><li><code>MAR</code> contains the address of the memory location or the memory-mapped address of an I/O device register.</li><li><code>R.W</code> indicates whether a load or a store is to take place.</li><li>Depending on the values of these three inputs, the <code>address control logic</code> does nothing (MIO.EN = 0), or it provides the control signals to direct the transfer of data between the MDR and the memory or between the MDR and one of the I/O registers.</li><li>If <code>R.W</code> indicates a load, the transfer is from memory or I/O device to the MDR. The Address Control Logic Block provides the select lines to INMUX to source the appropriate I/O device register or memory (depending on MAR) and also enables the memory if MAR contains the address of a memory location.</li><li>If <code>R.W</code> indicates a store, the contents of the MDR is written either to memory or to one of the device registers. The address control logic either enables a write to memory or asserts the load enable line of the device register specified by the contents of the MAR.</li></ul><h3 id="9-3-Operating-System-Service-Routines-LC-3-Trap-Routines">9.3 Operating System Service Routines (LC-3 Trap Routines)</h3><h4 id="9-3-1-Introduction">9.3.1 Introduction</h4><ul><li>The TRAP instruction 可以简化I/O的操作</li><li>device registers不能被user programs改变，因为一不小心就会造成混乱，所以这一块内存仅有supervisor priority可以访问。</li></ul><blockquote><p>We usually refer to the request made by the user program as a <em>system call</em> or a <em>service call</em>.</p></blockquote><h4 id="9-3-2-The-Trap-Mechanism">9.3.2 The Trap Mechanism</h4><p>The trap mechanism involves several elements:</p><ul><li><ol><li><p>A set of service routines</p></li><li><p>A table of the start addresses</p><blockquote><p>This table is stored in memory locations x0000 to x00FF.</p><p>one Character output service routine (memory location x4020), stored in x0021</p><p>one keyboard input service routine(x40A0),stored in x0023</p><p>one machine halt service routine(x5020), stored in x0025</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718201940104.png" alt="image-20230718201940104"></p></li><li><p>The TRAP instruction</p></li><li><p>A linkage back to the user program</p></li></ol></li></ul><h4 id="9-3-3-The-TRAP-Instruction">9.3.3 The TRAP Instruction</h4><blockquote><p>(1) changing the PC to the starting address of the relevant service routine on the basis of its trap vector, and (2) providing a way to get back to the program that executed the TRAP instruction.</p></blockquote><ul><li>The EXECUTE phase of the TRAP instruction</li></ul><ol><li>The PSR and PC are both pushed onto the system stack.(PC已经自加，会自动指向下一条指令)Note that the program requesting the trap service routine can be running either in Supervisor mode or in User mode. If in User mode, R6, the stack pointer, is pointing to the user stack. Before the PSR and PC can be pushed onto the system stack, the current contents of R6 must be stored in Saved_USP, and the contents of Saved SSP loaded into R6.</li><li>PSR[15] is set to 0. PSR[10:8] are left <strong>unchanged</strong> since ==the priority of the TRAP routine is the same as the priority of the program that requested it==.</li><li>The 8-bit trap vector is zero-extended to 16bits to form an address that corresponds to a location in the Trap Vector Table.(PC is loaded with that address)</li></ol><p>（如果在USER Mode）先改变SP，再PSR入栈、PC入栈。更改权限。0拓展 Trap Vector，从其对应的Memory location中找到service routine的指令地址。</p><h4 id="9-3-4-The-RTI-Instruction-To-Return-Control-to-the-Calling-Program">9.3.4 The RTI Instruction: To Return Control to the Calling Program</h4><ul><li>Return from TRAP of Interrupt(opcode = <strong>1000</strong>, with no operands): pop the top two values on the system stack into the PC and PSR. (用系统栈的前两个元素装载到PC和PSR里)</li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720084800001.png" alt="image-20230720084800001"></li><li>PC: Since the PC contains the address following the address of the TRAP instruction, control returns to the user program at the correct address.</li><li>PSR: examine PSR[15], if in User mode, the stack pointers need to be adjusted to reflect that now back in User mode. loading the Saved_SSP with the current contents of R6, and loading the R6 with the contents of Saved_USP</li></ul><h4 id="9-3-5-A-Summary-of-the-Trap-Service-Routine-Process">9.3.5 A Summary of the Trap Service Routine Process</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230718205256535.png" alt="image-20230718205256535"></p><h4 id="9-3-6-Trap-Routines-for-Handling-I-O">9.3.6 Trap Routines for Handling I/O</h4><p>Two changes:</p><ol><li>We add the appropriate .ORIG and .END pseudo-ops. .ORIG specifies the starting address of the input service routine—the address found at location x0023 in the Trap Vector Table.</li><li>We terminate the input service routine with the RTI instruction rather than the BR NEXT_TASK</li></ol><h4 id="9-3-7-A-Trap-Routine-for-Halting-the-Computer">9.3.7 A Trap Routine for Halting the Computer</h4><ul><li>In the LC-3, the RUN latch is bit [15] of the Master Control Register (MCR), which is memory-mapped to location xFFFE. (HALT就是负责把RUN latch置0的)</li></ul><h4 id="9-3-8-The-Trap-Routine-for-Character-Input-One-Last-Time">9.3.8 The Trap Routine for Character Input (One Last Time)</h4><h4 id="9-3-9-PUTS-Writing-a-Character-String-to-the-Monitor">9.3.9 PUTS: Writing a Character String to the Monitor</h4><blockquote><p>Thus, if a user program requires a character string to be written to the monitor, it need only provide (in R0) the starting address of the character string, and then invoke TRAP x22. In LC-3 assembly language this TRAP is called <em>PUTS</em>.</p></blockquote><h3 id="9-4-Interrupts-and-Interrupt-Driven-I-O">9.4 Interrupts and Interrupt- Driven I/O</h3><p>I/O device can</p><ol><li>force the running program to stop</li><li>have the processor execute a program that carries out the needs of the I/O device</li><li>have the stopped program resume execution as if nothing had happened.</li></ol><h4 id="9-4-2-Why-Have-Interrupt-Driven-I-O">9.4.2 Why Have Interrupt-Driven I/O?</h4><blockquote><p>As is undoubtedly clear, polling requires the processor to waste a lot of time spinning its wheels, re-executing again and again the LDI and BR instructions until the ready bit is set.</p></blockquote><p>一个例子：输入100个字符并处理需要花费的时间.（0.125s 输入一个字符。 12.49999s 处理100个字符）</p><ul><li>轮询：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.125</mn><mo>∗</mo><mn>100</mn><mo>=</mo><mn>12.5</mn></mrow><annotation encoding="application/x-tex">0.125*100 = 12.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.125</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">12.5</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>12.5</mn><mo>+</mo><mn>12.49999</mn><mo>=</mo><mn>24.9999</mn></mrow><annotation encoding="application/x-tex">12.5 + 12.49999 = 24.9999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">12.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">12.49999</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">24.9999</span></span></span></span></li><li>中断驱动：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.00001</mn><mo>∗</mo><mn>100</mn><mo>+</mo><mn>12.49999</mn><mo>=</mo><mn>15</mn></mrow><annotation encoding="application/x-tex">0.00001 * 100 + 12.49999 = 15</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.00001</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">100</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">12.49999</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">15</span></span></span></span></li></ul><h4 id="9-4-3-Two-Parts-to-the-Process">9.4.3 Two Parts to the Process</h4><ol><li>the mechanism that enables an I/O device to interrupt the processor</li><li>the mechanism that handles the interrupt request.</li></ol><h4 id="9-4-4-Part-I-Causing-the-Interrupt-to-Occur">9.4.4 Part I: Causing the Interrupt to Occur</h4><blockquote><p>Several things must be true for an I/O device to actually interrupt the program that is running:</p><ol><li>The I/O device <strong>must want</strong> service.</li><li>The device <strong>must have the right</strong> to request the service.</li><li>The device request <strong>must be more urgent</strong> than what the processor is currently doing.</li></ol></blockquote><h5 id="9-4-4-1-The-Interrupt-Signal-from-the-Device">9.4.4.1 The Interrupt Signal from the Device</h5><ul><li><p><strong>The Device Must Want Service</strong>I/O device wants service when the corresponding ready bit is set.（键盘会当一个字符敲击后want service，显示器会当上一个字符处理完后want service）</p></li><li><p><strong>The Device Must Have the Right to Request That Service</strong></p><blockquote><p>interrupt enable**(IE)** bit, which can be set or cleared by the processor (usually by the operating system), depending on whether or not the processor wants to give the I/O device the right to request service.</p><p>is part of device status register</p></blockquote><ul><li>The <strong>interrupt request signal from the I/O device</strong> is the logical AND of the IE bit and the ready bit</li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230719084538559.png" alt="image-20230719084538559"></li><li>如果IE bit is clear，无论如何也无法interrupt处理器，只能等待轮询</li><li>如果IE bit is set，只要ready bit被置1，那么AND gate就被断言，就会发出interrupt request</li></ul></li></ul><h5 id="9-4-4-2-The-Urgency-of-the-Request">9.4.4.2 The Urgency of the Request</h5><blockquote><p>Recall from Section 9.1.1.2 that each program runs at a specified level of urgency called its priority level. To interrupt the running program, the device must have a higher priority than the program that is currently running.</p><p>The PL of a program is usually the same as the PL (i.e., urgency) of the request to run that program.（如果一个更高优先级的请求被发出，那么正在运行的低级优先级程序就会中断，来把电脑留给处理高阶程序，直到满足这个更紧急的请求）</p></blockquote><ul><li>a computer’s payroll program may run overnight, and at <code>PL0</code></li><li>A program that corrects for a nuclear plant current surge may run at <code>PL6</code>.</li><li>Note: We can’t interrupt an interrupt routine caused by a keyboard interrupt by pressing the key board again! Because they are at the same level!</li></ul><h5 id="9-4-4-3-The-INT-Signal">9.4.4.3 The INT Signal</h5><blockquote><p>To stop the processor from continuing execution of its currently running program and service an interrupt request, the INT signal must be asserted.</p></blockquote><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230719092056078.png" alt="image-20230719092056078"></p><ul><li>不同的设备都会发出中断请求信号，这些信号都会被输入一个<code>priority encoder</code>里面，一个组合逻辑电路结构会选择最高的优先级。如果该请求的PL高于现在正在执行的程序，那么<code>INT</code>信号就被断言。</li></ul><h5 id="9-4-4-4-The-Test-for-INT">9.4.4.4 The Test for INT</h5><ul><li><p>不在任意指令阶段(FETCH, DECODE, EVALUATE ADDRESS, FETCH OPERAND, EXECUTE, and STORE RESULT)被打断，而是只在最后一个指令循环阶段允许被打断。</p></li><li><p>It makes much more sense to ignore interrupt signals except when we are at an instruction boundary; that is, the current instruction has completed, and the next instruction has not yet started.</p></li><li><p>The additional logic to test for the interrupt signal is to augment the last state of the instruction cycle for each instruction with a test.</p></li></ul><h4 id="9-4-5-Part-II-Handling-the-Interrupt-Request">9.4.5 Part II: Handling the Interrupt Request</h4><blockquote><p>Three states</p><ol><li>Initiate the interrupt (three lines numbered 1 in Figure9.17).</li><li>Service the interrupt (four lines numbered 2 in Figure9.17).</li><li>Return from the interrupt (one line numbered 3 in Figure9.17).</li></ol><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230719093818948.png" alt="image-20230719093818948"></p></blockquote><h5 id="9-4-5-1-Initiate-the-Interrupt">9.4.5.1 Initiate the Interrupt</h5><p>The processor must do two things:</p><ol><li>save the state of the interrupted program so it can pick up where it left off after the requirements of the interrupt have been completed</li><li>load the state of the higher priority interrupting program so it can start satisfying its request</li></ol><ul><li><p><strong>Save the State of the Interrupted Program</strong> in the case of the LC-3, saving the <code>PC</code> and the <code>PSR</code></p><ul><li>PC可以让被中断的程序恢复执行后，知道下一条指令是什么。</li><li>Condition codes可以使被中断的程序恢复执行后，正确执行条件跳转。</li><li>Priority Level会让被中断的程序恢复后知道哪些程序可以中断他。</li><li>Privilege Level描述什么样的processor resources可以被那个程序获取</li><li>默认service routine会保存GPRs的内容</li></ul><blockquote><p>具体操作和TRAP指令类似，如果在User mode，则保存USP，然后加载SSP到R6</p></blockquote></li><li><p><strong>Load the State of the Interrupt Service Routine</strong> Most processors use the mechanism of <em>vectored interrupts</em>.</p><blockquote><p>In the case of interrupts, the eight-bit vector is provided by the device that is requesting the processor be interrupted. That is, the I/O device transmits to the processor an eight-bit interrupt vector along with its interrupt request signal and its priority level.</p></blockquote><ul><li>最高级别的interrupt request的interrupt vector被提供给了processor——INTV</li></ul><blockquote><p>If the interrupt is taken, the processor expands the 8-bit interrupt vector (INTV) to form a 16-bit address, which is an entry into the Interrupt Vector Table.</p><p>位于==x0100 ~ x01FF==</p><p>x0100 – Privilege mode exception</p><p>x0101 – Illegal Opcode</p><p>x0101 – Access Control Violation</p></blockquote><ul><li>PSR：PSR[2:0] contains no meaningful information. We arbitrarily load it initially with 010. Since the interrupt service routine runs in privileged mode, PSR[15] is set to 0. PSR[10:8] is set to the priority level associated with the interrupt request.</li></ul></li></ul><h5 id="9-4-5-2-Service-the-Interrupt">9.4.5.2 Service the Interrupt</h5><h5 id="9-4-5-3-Return-from-the-Interrupt">9.4.5.3 Return from the Interrupt</h5><ul><li>The last instruction in every interrupt service routine is RTI, return from trap or interrupt.</li></ul><h4 id="9-4-6-An-Example">9.4.6 An Example</h4><ul><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720075752888.png" alt="image-20230720075752888"></li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720080023250.png" alt="image-20230720080023250"></li></ul><h4 id="9-4-7-Not-Just-I-O-Devices">9.4.7 Not Just I/O Devices</h4><ul><li>a timer interrupt</li><li>the machine check interrupt</li><li>the power failure interrupt</li></ul><h3 id="9-5-Polling-Revisited-Now-That-We-Know-About-Interrupts">9.5 Polling Revisited, Now That We Know About Interrupts</h3><h4 id="9-5-1-The-Problem">9.5.1 The Problem</h4><ul><li>在Polling的过程中（将要执行STI），如果被I/O设备打断（如键盘此刻突然输入），那么就会改变显示器的状态，可能恢复被打断程序时显示器依然不能正常提供服务，因此此时再执行STI指令输出字符就会失效。</li><li>A simple way to handle this would be to disable all interrupts while polling was going on. （但是polling会持续很长一段时间，这样对中断程序来说是不太可接受的）</li></ul><h4 id="9-5-2-The-Solution">9.5.2 The Solution</h4><ul><li>The result: An interrupt would have to wait for the three-instruction sequence LDI, BRzp, STI to execute, rather than for the entire polling process to complete.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">.ORIG x0420</span><br><span class="line">ADD   R6,R6,#-1</span><br><span class="line">        STR   R1,R6,#0</span><br><span class="line">        ADD   R6,R6,#-1</span><br><span class="line">        STR   R2,R6,#0</span><br><span class="line">        ADD   R6,R6,#-1</span><br><span class="line">        STR   R3,R6,#0</span><br><span class="line">;</span><br><span class="line">        LDI   R1, PSR</span><br><span class="line">        LD    R2,INTMASK</span><br><span class="line">        AND   R2,R1,R2 </span><br><span class="line">;        </span><br><span class="line">POLLSTI   R1,PSR   ;enable interrupts</span><br><span class="line">STI   R2,PSR   ;disable interrupts</span><br><span class="line">LDI   R3,DSR</span><br><span class="line">BRzp  POLL ; Poll the DSR</span><br><span class="line">STI   R0, DDR; Store the character into the DDR </span><br><span class="line">STI   R1, PSR; Restore original PSR</span><br><span class="line">;</span><br><span class="line">LDR   R3,R6,0</span><br><span class="line">ADD   R6,R6,#1</span><br><span class="line">LDR   R2,R6,0</span><br><span class="line">ADD   R6,R6,#1</span><br><span class="line">LDR   R1,R6,0</span><br><span class="line">ADD   R6,R6,#1</span><br><span class="line"></span><br><span class="line">RTI</span><br><span class="line"></span><br><span class="line">INTMASK .FILL xBFFF</span><br><span class="line">PSR.FILL xFFFF ;PSR is memory mapped to xFFFC.</span><br><span class="line">DSR.FILL xFE04</span><br><span class="line">DDR.FILL xFE06</span><br><span class="line">.END</span><br></pre></td></tr></table></figure><h2 id="Chapter-10-A-Calculator">Chapter 10 A Calculator</h2><blockquote><p>Our example is a program that simulates the actions of a calculator that a per- son can use to add, subtract, and multiply 2’s complement integers. The person will enter numbers into the calculator-simulator by typing keys on the keyboard.</p></blockquote><ul><li>two points:<ul><li>data conversion: ascii -&gt; 2’s complement -&gt; ascii</li><li>arithmetic using a stack</li></ul></li><li>Our simulation of a calculator, like most calculators, does not use general purpose registers. Instead it uses a stack. Source operands are popped from the stack, and the result of the operation is pushed back onto the stack.</li></ul><h3 id="10-1-Data-Type-Conversion">10.1 Data Type Conversion</h3><ul><li>It is important that every instruction be provided with source operands of the data type that the instruction requires.(操作数据必须要符合指令的要求)</li><li>For programming in some high-level language, the compiler generally does that conversion.F</li></ul><h4 id="10-1-1-Example-A-Bogus-Program-2-3-e">10.1.1 Example: A Bogus Program: 2 + 3 = e</h4><ul><li>不能直接把输入的数据相加，因为他们都是ascii码</li></ul><h4 id="10-1-2-Input-Data-ASCII-to-Binary">10.1.2 Input Data (ASCII to Binary)</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720130621559.png" alt="image-20230720130621559"></p><ul><li><strong>R1</strong> (the number of decimal digits)</li><li><strong>ASCIIBUFF</strong> is the address of the first memory location of a sequence of four memory locations that we have allocated (a) to store the ASCII codes of decimal digits entered from the keyboard, and (b) to store the ASCII codes corresponding to the result of arithmetic operations in preparation for writing it (the result) to the monitor.</li><li>可以把十位和百位的值都存成一张表，根据转换后的digit值查表，LD相应的数字。</li><li><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720130931728.png" alt="image-20230720130931728"></li></ul><h4 id="10-1-3-Display-Result-Binary-to-ASCII">10.1.3 Display Result (Binary to ASCII)</h4><ol><li>检测是否为负数，若是负数则把负数flag标记，然后取补码转回正数</li><li>循环-100，直到改数为负数，记录<code>循环次数-1</code>为百位数，把数+100抵消最后一次</li><li>循环-10，同上</li><li>直接存入个位</li></ol><h3 id="10-2-Arithmetic-Using-a-Stack">10.2 Arithmetic Using a Stack</h3><h4 id="10-2-1-The-Stack-as-Temporary-Storage">10.2.1 The Stack as Temporary Storage</h4><ul><li>LC-3 将计算后的数据存在寄存器里，是一个<strong>three-address machine</strong>。x86是一个<strong>two-address machine</strong>，因为只需要确认两个位置。还有些ISAs不使用GPRs来存操作数和结果，最常见的是<strong>stack machines</strong>因为他们用栈来临时存储数据。</li><li>Source operands are obtained by popping the top two elements from the stack. The result (i.e., the destination operand) is subsequently pushed onto the stack.</li><li>No addresses need to be specified explicitly. Therefore, stack machines are referred to as <strong>zero-address machines</strong>.</li><li>Note that the pop, push, and add are not part of the ISA of the computer, and therefore they are available to the programmer.</li></ul><h4 id="10-2-2-An-Example">10.2.2 An Example</h4><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720135530941.png" alt="image-20230720135530941"></p><h4 id="10-2-3-OpAdd-OpMult-and-OpNeg">10.2.3 OpAdd, OpMult, and OpNeg</h4><ol><li>OpAdd, which will pop two values from the stack, add them, and push the result onto the stack.</li><li>OpMult, which will pop two values from the stack, multiply them, and push the result onto the stack.</li><li>OpNeg, which will pop the top value, form its 2’s complement negative value, and push the result onto the stack. This will allow us to subtract two numbers A minus B by first forming −B and then adding the result to A.</li></ol><h5 id="The-OpAdd-Subroutine"><strong>The OpAdd Subroutine</strong></h5><p>两种可能失败的情况</p><ul><li><p>Fewer than two values are available on the stack for source operands</p></li><li><p>The result is out of range</p></li><li><p><strong>TheADD</strong><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720135921213.png" alt="image-20230720135921213"></p></li><li><p>如果第一次pop失败了，那么什么也不用处理。如果第二次pop失败了，那么stack pointer会被decremented。如果结果有问题(调用RangeCheck子程序)，那么stack pointer会被decremented twice</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">OpAddST R0,OpAdd_Save0</span><br><span class="line">                ST R1,OpAdd_Save1</span><br><span class="line">                ST R5,OpAdd_Save5</span><br><span class="line">                ST R7 OpAdd_Save7</span><br><span class="line">                JSR POP ; Get first source operand.</span><br><span class="line">                ADD R5,R5,#0 ; Test if POP was successful.</span><br><span class="line">                BRp OpAdd_Exit ; Branch if not successful.</span><br><span class="line">                ADD R1,R0,#0 ; Make room for second operand.</span><br><span class="line">                JSR POP ; Get second source operand.</span><br><span class="line">                ADD R5,R5,#0 ; Test if POP was successful.</span><br><span class="line">                BRp OpAdd_Restore1 ; Not successful, put back first.</span><br><span class="line">                ADD R0,R0,R1 ; THE Add.</span><br><span class="line">                JSR RangeCheck ; Check size of result.</span><br><span class="line">                ADD R5,R5,#0 ; Check R5 for success/failure.</span><br><span class="line">                BRp OpAdd_Restore2 ; Out of range, restore both.</span><br><span class="line">                JSR PUSH ; Push sum on the stack.</span><br><span class="line">                BRnzp OpAdd_Exit</span><br><span class="line">OpAdd_Restore2ADD R6,R6,#-1</span><br><span class="line">OpAdd_Restore1ADD R6,R6,#-1</span><br><span class="line">OpAdd_ExitLDR0,OpAdd_Save0</span><br><span class="line">LDR1,OpAdd_Save1</span><br><span class="line">LDR5,OpAdd_Save5</span><br><span class="line">LDR7,OpAdd_Save7</span><br><span class="line">RET</span><br><span class="line">OpAdd_Save0 .BLKW #1</span><br><span class="line">OpAdd_Save1 .BLKW #1</span><br><span class="line">OpAdd_Save5 .BLKW #1</span><br><span class="line">OpAdd_Save7.BLKW #1</span><br></pre></td></tr></table></figure><ul><li><strong>The RangeCheck</strong><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720143028273.png" alt="image-20230720143028273"></li></ul><h5 id="The-OpMult-Subroutine">The OpMult Subroutine</h5><p><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720144926602.png" alt="image-20230720144926602"></p><h5 id="The-OpNeg-Subroutine"><strong>The OpNeg Subroutine</strong></h5><ol><li>replace the top element on the stack with its negative</li><li>use OpADD</li></ol><h3 id="10-3-The-Calculator">10.3 The Calculator</h3><h4 id="10-3-1-Functionality">10.3.1 Functionality</h4><ul><li><strong>X</strong> Exit the simulation.</li><li><strong>D</strong> Display the value at the top of the stack.</li><li><strong>C</strong> Clear all values from the stack.</li><li>+ Pop the top two elements A,B off the stack and push A+B.</li><li>***** Pop the top two elements A,B off the stack and push A*B.</li><li>− Pop the top element A off the stack and push “minus” A.</li><li><strong>Enter</strong> or <strong>LF</strong> Push the value typed on the keyboard onto the top of the stack.</li></ul><img src="/2023/09/22/%E5%A4%A7%E4%BA%8C/ICS/ICS/image-20230720154801568.png" alt="image-20230720154801568" style="zoom:50%;"><h2 id="Chapter-19-Dynamic-Data-Structures-in-C">Chapter 19 Dynamic Data Structures in C</h2><h3 id="19-5-Linked-Lists">19.5 Linked Lists</h3><blockquote><p>A <em>linked list</em> is a data structure that is similar to an array in that both can be used for data that is a sequential list of elements.</p><p>The elements need not be adjacent in memory</p><p>A linked list is a collection of elements, or <em>nodes</em>, where each node is one “unit” of data</p></blockquote></center></center>]]></content>
    
    
    <summary type="html">计算机系统概论笔记完全版，还没有时间去整理呜呜呜呜</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ICS" scheme="http://example.com/tags/ICS/"/>
    
    <category term="计算机系统概论" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>图像信息处理(1)【23-24秋冬】</title>
    <link href="http://example.com/2023/09/21/%E5%A4%A7%E4%BA%8C/DIP/DIP(1)/"/>
    <id>http://example.com/2023/09/21/%E5%A4%A7%E4%BA%8C/DIP/DIP(1)/</id>
    <published>2023-09-21T06:00:00.000Z</published>
    <updated>2023-10-12T11:27:23.550Z</updated>
    
    <content type="html"><![CDATA[<h3 id="BMP格式">BMP格式</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BITMAPFILEHEADER bmfh;</span><br><span class="line">BITMAPINFOHEADER bmih;</span><br><span class="line">RGPQUAD aColors[];</span><br><span class="line">BYTE aBitmapBits[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagBITEMAPFILEHEADER</span>&#123;</span></span><br><span class="line">    WORD bfType; <span class="comment">//size 2 必须得背设定为&#x27;BM&#x27;来说明这是一个.bmp文件</span></span><br><span class="line">    DWORD dfSize; <span class="comment">// size 4 说明该位图文件的大小，用字节为单位</span></span><br><span class="line">    WORD bfReserverd1; <span class="comment">//size 2 保留，必须设置为0</span></span><br><span class="line">    WORD bfReserverd2; <span class="comment">// size 2 保留，必须设置为0</span></span><br><span class="line">    DWORD bfOffBits; <span class="comment">// size 4 说明从文件头开始到实际的图象数据之间的字节的偏移量。这个参数是非常有用的，因为位图信息头和调色板的长度会根据不同情况而变化，所以你可以用这个偏移值迅速的从文件中读取到位数据</span></span><br><span class="line">&#125; BITMAPFILEHEADER *PBITMAPFILEHEADER</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagBITMAPINFOHEADERfbifize</span>&#123;</span></span><br><span class="line">    DWORD biSize; <span class="comment">//说明BITMAPINFOHEADER结构所需要的字数</span></span><br><span class="line">    LONG biWidth; <span class="comment">//说明图象的宽度，以象素为单位。</span></span><br><span class="line">    LONG biHeight; <span class="comment">//说明图象的高度，以象素为单位。注：这个值除了用于描述图像的高度之外，它还有另一个用处，就是指明该图像是倒向的位图，还是正向的位图。如果该值是一个正数，说明图像是倒向的，如果该值是一个负数，则说明图像是正向的。大多数的BMP文件都是倒向的位图，也就是时，高度值是一个正数。</span></span><br><span class="line">    WORD biPlanes; <span class="comment">//为目标设备说明位面数，其值将总是被设为1。</span></span><br><span class="line">    WORD biBitcount; <span class="comment">// 说明比特数/象素，其值为1、4、8、16、24、或32。但是由于我们平时用到的图像绝大部分是24位和32位的，所以我们讨论这两类图像。</span></span><br><span class="line">DWORD biCompression; <span class="comment">// 说明图象数据压缩的类型，我们只讨论没有压缩的类型：BI_RGB。</span></span><br><span class="line">DWORD biSizeImage; <span class="comment">//说明图象的大小，以字节为单位。当用BI_RGB格式时，可设置为0。</span></span><br><span class="line">    LONG biXPelsPerMeter; <span class="comment">//说明水平分辨率，用象素/米表示。</span></span><br><span class="line">    LONG biYPelsPerMeter; <span class="comment">//说明垂直分辨率，用象素/米表示。</span></span><br><span class="line">    DWORD biClrused; <span class="comment">// 说明位图实际使用的彩色表中的颜色索引数（设为0的话，则说明使用所有调色板项）</span></span><br><span class="line">DWORD biClrImportant; <span class="comment">// 说明对图象显示有重要影响的颜色索引的数目，如果是0，表示都重要。</span></span><br><span class="line"></span><br><span class="line">&#125; BITMAPINFOHEADER, *PBITMAPINFOHEADER;</span><br></pre></td></tr></table></figure><p>16是伪彩色，24是真彩色，32增加alpha通道 / 调整对比度</p><h3 id="色彩模型和色彩空间">色彩模型和色彩空间</h3><p>在一个色彩模型下可以有不同的色彩空间，它们根据排列的条件的不同会有不同的色域（所能表示色彩的范围）和含义，色彩模型只有具体到一种色彩空间上才有实用性。所谓色彩模型，就是用一定规则来描述（排列）颜色的方法</p><p>assignment1要点</p><ol><li>struct结构对齐</li><li>每行读取数据要四字节对齐</li><li>矩阵计算处理</li></ol>]]></content>
    
    
    <summary type="html">浙江大学图像信息处理。</summary>
    
    
    
    <category term="课程笔记" scheme="http://example.com/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DIP" scheme="http://example.com/tags/DIP/"/>
    
  </entry>
  
</feed>
